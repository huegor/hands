{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./history.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewPointForm from \"./components/NewPointForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\"; // import findMinMax from \"./components/findMinMax\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ToolsBar(props) {\n  _s();\n\n  const [toggleLabel, setToggleLabel] = useState(true);\n  const [content, setContent] = useState(null);\n\n  const handleClick = e => {\n    switch (e.target.id) {\n      case 'toggleLabel':\n        toggleLabel ? setToggleLabel(false) : setToggleLabel(true);\n        break;\n\n      case 'addTemporalObject':\n        setContent( /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Point\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Interval\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Scale\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this));\n        break;\n      // case 'save': //save JSON as file to computer\n      //   // console.log(this.props.src);\n      //   const fileData = JSON.stringify(this.props.src);\n      //   const blob = new Blob([fileData], {type: \"text/plain\"});\n      //   const url = URL.createObjectURL(blob);\n      //   const link = document.createElement('a');\n      //   link.download = `data.json`;\n      //   link.href = url;\n      //   link.click();\n      // break\n\n      default:\n        props.setToggle(e.target.id);\n        console.log(props.data);\n    }\n\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"ui fullWidth\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left absolute fullwidth\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"addTemporalObject\",\n              onClick: handleClick,\n              children: \"Add Temporal Object\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"settings\",\n              onClick: handleClick,\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"import\",\n              onClick: handleClick,\n              children: \"Import\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"save\",\n              onClick: handleClick,\n              children: \"Save & Export\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right absolute fullwidth\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"inline\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"toggleLabel\",\n              onClick: handleClick,\n              children: toggleLabel ? \"Toggle IDs\" : \"Toggle Labels\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui absolute dropdown\",\n      style: {\n        left: 0 + '%'\n      },\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ToolsBar, \"eNNEA04iezosES//MNS8gIHklsg=\");\n\n_c = ToolsBar;\n\nfunction App() {\n  _s2();\n\n  //blank ChronoJSON template\n  const defaultJSON = {\n    \"imgs\": [],\n    \"nodes\": [[]],\n    \"intervals\": []\n  }; //user defined\n\n  const radius = 5; //for the entire ChronoJSON\n\n  const [src, setSrc] = useState(Data); //for ChronoJSON history\n\n  const [history, setHistory] = useState([]); //for toggling the active dataset\n\n  const [activeData, setActiveData] = useState(0); //pertaining to datapoints only\n\n  const [data, setData] = useState(src.nodes[activeData]); //todo: comparative timelines, layering\n  //pertaining to intervals only\n\n  const [intervals, setIntervals] = useState(src.intervals); //UI window toggles\n\n  const [toggle, setToggle] = useState(); //UI info boxes for points, lines, etc.\n\n  const [info, setInfo] = useState();\n  /*\n    TODO:\n    - findMinMax() adjust less frequently. ie: if new data can be panned to, no need to adjust viewport\n    - for piecewise timeline, make function that generates different graphics\n    - create a master array of all snapshots of data (for scrubber)\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToolsBar, {\n      setToggle: setToggle,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), toggle === \"addPoint\" ? /*#__PURE__*/_jsxDEV(NewPointForm, {\n      data: data,\n      setData: setData,\n      setToggle: setToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 30\n    }, this) : null, toggle === \"save\" ? /*#__PURE__*/_jsxDEV(ExportDataForm, {\n      src: src,\n      data: data,\n      activeData: activeData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 26\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      className: \"container fullHeight\",\n      children: [data.length ? /*#__PURE__*/_jsxDEV(Graphic, {\n        data: data,\n        setData: setData,\n        intervals: intervals,\n        setIntervals: setIntervals,\n        radius: radius,\n        setInfo: setInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexCenter\",\n        children: [\"Upload data or \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setToggle(\"addPoint\"),\n          children: \"Add new point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), src.imgs.length ? /*#__PURE__*/_jsxDEV(Image, {\n        urls: src.imgs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 28\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), info ? /*#__PURE__*/_jsxDEV(InfoBox, {\n      info: info,\n      data: data,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s2(App, \"ayZ+TZc6AAY1LWqLlM0lcwb299E=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ToolsBar\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js"],"names":["React","useState","Data","Graphic","Image","NewPointForm","InfoBox","ExportDataForm","ToolsBar","props","toggleLabel","setToggleLabel","content","setContent","handleClick","e","target","id","setToggle","console","log","data","preventDefault","left","App","defaultJSON","radius","src","setSrc","history","setHistory","activeData","setActiveData","setData","nodes","intervals","setIntervals","toggle","info","setInfo","length","imgs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./history.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewPointForm from \"./components/NewPointForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\";\n// import findMinMax from \"./components/findMinMax\";\n\n\n\nfunction ToolsBar(props) {\n  const [toggleLabel, setToggleLabel] = useState(true);\n  const [content, setContent] = useState(null);\n\n  const handleClick = (e) => {\n    switch (e.target.id) {\n      case 'toggleLabel':\n        toggleLabel ?\n          setToggleLabel(false)\n        : setToggleLabel(true);\n      break\n      case 'addTemporalObject':\n        setContent(\n          <ul>\n            <li><button>Point</button></li>\n            <li><button>Line</button></li>\n            <li><button>Interval</button></li>\n            <li><button>Scale</button></li>\n          </ul>\n        );\n      break\n      // case 'save': //save JSON as file to computer\n      //   // console.log(this.props.src);\n      //   const fileData = JSON.stringify(this.props.src);\n      //   const blob = new Blob([fileData], {type: \"text/plain\"});\n      //   const url = URL.createObjectURL(blob);\n      //   const link = document.createElement('a');\n      //   link.download = `data.json`;\n      //   link.href = url;\n      //   link.click();\n      // break\n      default:\n        props.setToggle(e.target.id);\n        console.log(props.data);\n    }\n    e.preventDefault();\n  }\n\n  return (\n    <>\n      <nav className=\"ui fullWidth\">\n        <div className=\"left absolute fullwidth\">\n          <ul className=\"inline\">\n            <li><button id=\"addTemporalObject\" onClick={handleClick}>Add Temporal Object</button></li>\n            <li><button id=\"settings\" onClick={handleClick}>Settings</button></li>\n            <li><button id=\"import\" onClick={handleClick}>Import</button></li>\n            <li><button id=\"save\" onClick={handleClick}>Save & Export</button></li>\n          </ul>\n        </div>\n        <div className=\"right absolute fullwidth\">\n          <ul className=\"inline\">\n            <li><button id=\"toggleLabel\" onClick={handleClick}>{toggleLabel ? \"Toggle IDs\" : \"Toggle Labels\"}</button></li>\n          </ul>\n        </div>\n      </nav>\n      <div className=\"ui absolute dropdown\" style={{left: 0 + '%'}}>\n        {content}\n      </div>\n    </>\n  );\n}\n\n\nfunction App() {\n\n  //blank ChronoJSON template\n  const defaultJSON = {\n    \"imgs\": [],\n    \"nodes\":\n    [\n      []\n    ],\n    \"intervals\":\n    []\n  };\n\n  //user defined\n  const radius = 5;\n\n  //for the entire ChronoJSON\n  const [src, setSrc] = useState(Data);\n\n  //for ChronoJSON history\n  const [history, setHistory] = useState([])\n\n  //for toggling the active dataset\n  const [activeData, setActiveData] = useState(0);\n  //pertaining to datapoints only\n  const [data, setData] = useState(src.nodes[activeData]); //todo: comparative timelines, layering\n  //pertaining to intervals only\n  const [intervals, setIntervals] = useState(src.intervals);\n  //UI window toggles\n  const [toggle, setToggle] = useState();\n  //UI info boxes for points, lines, etc.\n  const [info, setInfo] = useState();\n\n  /*\n    TODO:\n    - findMinMax() adjust less frequently. ie: if new data can be panned to, no need to adjust viewport\n    - for piecewise timeline, make function that generates different graphics\n    - create a master array of all snapshots of data (for scrubber)\n  */\n\n  return (\n    <>\n      <ToolsBar setToggle={setToggle} data={data}/>\n      {toggle===\"addPoint\" ? <NewPointForm data={data} setData={setData} setToggle={setToggle}/> : null}\n      {toggle===\"save\" ? <ExportDataForm src={src} data={data} activeData={activeData}/> : null}\n      <div id=\"main\" className=\"container fullHeight\">\n        {data.length ?\n          <Graphic\n            data={data}\n            setData={setData}\n            intervals={intervals}\n            setIntervals={setIntervals}\n            radius={radius}\n            setInfo={setInfo}\n          />\n          : <div className=\"flexCenter\">Upload data or <button onClick={() => setToggle(\"addPoint\")}>Add new point</button></div>\n        }\n        {src.imgs.length ? <Image urls={src.imgs}/> : null}\n      </div>\n      {info ? <InfoBox info={info} data={data} setData={setData}/> : null}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}