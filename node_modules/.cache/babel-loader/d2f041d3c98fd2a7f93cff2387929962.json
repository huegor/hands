{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./App.css\";\nimport Data from \"./data.json\";\nimport Graphic from \"./components/Graphic_copy\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass NewPointForm extends React.Component {\n  //controlled component, meaning React is the \"single source of truth\"\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: '',\n      xValue: '',\n      yValue: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const value = e.target.value;\n    const name = e.target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    alert(`label: ${e.target.label.value}, x: ${e.target.xValue.value}, y: ${e.target.yValue.value}`);\n    e.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Label:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"label\",\n          value: this.state.label,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"x Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"xValue\",\n          value: this.state.xValue,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"y Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"yValue\",\n          value: this.state.yValue,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n} //iterates thru xy values in json data to find min and max values\n\n\nfunction findMinMax(data) {\n  var [minX, minY] = [Infinity, Infinity]; //assign values for multiple vars\n\n  var [maxX, maxY] = [-Infinity, -Infinity];\n  var tmpX, tmpY;\n\n  for (var i = data.length - 1; i >= 0; i--) {\n    tmpX = data[i].x;\n    tmpY = data[i].y;\n    if (tmpX < minX) minX = tmpX;\n    if (tmpX > maxX) maxX = tmpX;\n    if (tmpY < minY) minY = tmpY;\n    if (tmpY > maxY) maxY = tmpY;\n  }\n\n  return [minX, maxX, minY, maxY];\n}\n/*\n   process raw data in function that extract following arrays:\n   0: of all nodes excluding loose points\n   1: from 1, all links between nodes, {source, target, color}\n\n   Graphic component will be passed these for use in this way:\n   - [1] for drawing linkHorizontal\n   - Data.nodes for drawing cirlces and labels\n*/\n\n\nfunction generateLinks(data) {\n  const nodes = [];\n  const links = [];\n\n  for (var i = 0; i <= data.length - 1; i++) {\n    //create array of all nodes that are NOT detached\n    if (data[i].target !== null) {\n      //detached points are defined w target: null as opposed to being undefined\n      nodes.push(data[i]); //create links between all attached nodes, excluding the last one\n      // console.log(data[i].target);\n\n      if (data[i].target) {\n        const nodeTargets = [];\n        data[i].target.forEach(item => {\n          nodeTargets.push(data[item]);\n        });\n        links.push({\n          source: data[i],\n          target: nodeTargets,\n          color: data[i].lineColor\n        });\n      } else {\n        links.push({\n          source: data[i],\n          target: data[i + 1],\n          color: data[i].lineColor\n        });\n      }\n\n      ; // if (data[i+1].target !== null) {\n      //   console.log(data[i].target);\n      //   // if (data[i].target) {\n      //   //   console.log(\"target\")\n      //   // } else {\n      //   //   console.log(\"default\")\n      //   // };\n      //   // links.push({source:data[i], target:data[i+1], color:data[i].lineColor})\n      // }\n      // //if multiple nodes are targets:\n      // //if this is the last node:\n      // if (i === data.length-1){\n      //   console.log(data[i]);\n      //   return links;\n      // };\n      // nodes.push(data[i]);\n      // links.push({source:data[i], target:data[i+1], color:data[i].lineColor});\n    }\n  }\n\n  return links;\n}\n\n;\n\nfunction App() {\n  _s();\n\n  //user defined\n  const radius = 5;\n  const fontSize = 20; //data is initially set to imported json array Data\n\n  var [src, setSrc] = useState(Data); // console.log(generateLinks(src.nodes));\n\n  const data = {\n    nodes: src.nodes,\n    links: generateLinks(src.nodes),\n    imgs: src.imgs\n  }; // console.log(findMinMax(Data.line1));\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Graphic, {\n      src: data,\n      minMax: findMinMax(src),\n      radius: radius,\n      fontSize: fontSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewPointForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"H30rYC+5qCYZWNTKEH0Drzdz/po=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js"],"names":["React","useState","Data","Graphic","NewPointForm","Component","constructor","props","state","label","xValue","yValue","handleChange","bind","handleSubmit","e","value","target","name","setState","alert","preventDefault","render","findMinMax","data","minX","minY","Infinity","maxX","maxY","tmpX","tmpY","i","length","x","y","generateLinks","nodes","links","push","nodeTargets","forEach","item","source","color","lineColor","App","radius","fontSize","src","setSrc","imgs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport \"./App.css\";\nimport Data from \"./data.json\";\nimport Graphic from \"./components/Graphic_copy\"\n\nclass NewPointForm extends React.Component {\n  //controlled component, meaning React is the \"single source of truth\"\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: '',\n      xValue: '',\n      yValue: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const value = e.target.value;\n    const name = e.target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    alert(`label: ${e.target.label.value}, x: ${e.target.xValue.value}, y: ${e.target.yValue.value}`);\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <form className=\"ui\" onSubmit={this.handleSubmit}>\n        <label>\n          Label:\n          <input type=\"text\"\n            name=\"label\"\n            value={this.state.label}\n            onChange={this.handleChange}\n          />\n        </label><br/>\n        <label>\n          x Value:\n          <input\n            type=\"text\"\n            name=\"xValue\"\n            value={this.state.xValue}\n            onChange={this.handleChange}\n          />\n        </label><br/>\n        <label>\n          y Value:\n          <input\n            type=\"text\"\n            name=\"yValue\"\n            value={this.state.yValue}\n            onChange={this.handleChange}\n          />\n        </label><br/><br/>\n        <input type=\"submit\" value=\"Submit\"/>\n      </form>\n    );\n  }\n}\n\n//iterates thru xy values in json data to find min and max values\nfunction findMinMax(data) {\n  var [minX, minY] = [Infinity, Infinity]; //assign values for multiple vars\n  var [maxX, maxY] = [-Infinity, -Infinity];\n  var tmpX, tmpY;\n\n  for (var i = data.length-1; i>=0; i--) {\n    tmpX = data[i].x;\n    tmpY = data[i].y;\n    if (tmpX < minX) minX = tmpX;\n    if (tmpX > maxX) maxX = tmpX;\n    if (tmpY < minY) minY = tmpY;\n    if (tmpY > maxY) maxY = tmpY;\n  }\n  return(\n    [minX, maxX, minY, maxY]\n  );\n}\n\n/*\n   process raw data in function that extract following arrays:\n   0: of all nodes excluding loose points\n   1: from 1, all links between nodes, {source, target, color}\n\n   Graphic component will be passed these for use in this way:\n   - [1] for drawing linkHorizontal\n   - Data.nodes for drawing cirlces and labels\n*/\nfunction generateLinks(data) {\n  const nodes = [];\n  const links = [];\n\n  for (var i = 0; i <= data.length-1; i++) {\n    //create array of all nodes that are NOT detached\n    if (data[i].target !== null) { //detached points are defined w target: null as opposed to being undefined\n      nodes.push(data[i]);\n      //create links between all attached nodes, excluding the last one\n      // console.log(data[i].target);\n      if (data[i].target) {\n        const nodeTargets = [];\n        data[i].target.forEach((item) => {\n          nodeTargets.push(data[item])\n        });\n        links.push({source:data[i], target:nodeTargets, color:data[i].lineColor});\n      } else {\n        links.push({source:data[i], target:data[i+1], color:data[i].lineColor})\n      };\n      // if (data[i+1].target !== null) {\n      //   console.log(data[i].target);\n      //   // if (data[i].target) {\n      //   //   console.log(\"target\")\n      //   // } else {\n      //   //   console.log(\"default\")\n      //   // };\n      //   // links.push({source:data[i], target:data[i+1], color:data[i].lineColor})\n      // }\n\n      // //if multiple nodes are targets:\n      // //if this is the last node:\n      // if (i === data.length-1){\n      //   console.log(data[i]);\n      //   return links;\n      // };\n      // nodes.push(data[i]);\n      // links.push({source:data[i], target:data[i+1], color:data[i].lineColor});\n    }\n  }\n  return links;\n};\n\nfunction App() {\n\n  //user defined\n  const radius = 5;\n  const fontSize = 20;\n\n  //data is initially set to imported json array Data\n  var [src, setSrc] = useState(Data);\n  // console.log(generateLinks(src.nodes));\n  const data = {nodes: src.nodes, links:generateLinks(src.nodes), imgs:src.imgs};\n\n  // console.log(findMinMax(Data.line1));\n  return (\n    <>\n      <Graphic src={data} minMax = {findMinMax(src)} radius={radius} fontSize={fontSize}/>\n      <NewPointForm />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}