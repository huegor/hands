{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InfoBox.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n// import DeletePoint from \"./DeletePoint\";\n\n/*\n  - pass object info and mouseclick position to component\n  - component is a div set at mouseclick position and displays object info as text\n*/\nfunction InfoBox({\n  info,\n  data,\n  setData\n}) {\n  const target = info.target;\n  var content = null;\n  /*\n    deleting point i:\n    - find data[i-1] and set its target to data[i+1]. then remove data[i] from array\n    - if data[i] is first point, just remove from array\n     - if first point => just delete\n    - prevNode exists but is not linked => just delete\n    - prevNode exists and is linked, but no nextNode => set prevNode target to null, then delete\n    - prevNode exists, is linked, and has next node => set prevNode target to nextNode, then delete\n    - prevNode exists, is linked to multiple nodes => remove target node from prevNode, then delete\n  */\n\n  const handleDelete = e => {\n    e.preventDefault(); // const newData = [...data]; //always practice data hygine\n\n    const node = data.find(n => n.id === target.id);\n    const prevNode = data[data.indexOf(node) - 1];\n    const nextNode = data[data.indexOf(node) + 1];\n\n    function newData() {\n      if (node !== data[0]) {\n        const updatedData = data.map(n => {\n          if (n.target) {\n            if (Array.isArray(n.target) && n.target.includes(target.id)) {\n              return n.target.filter(x => x !== target.id);\n            } else if (n.target === target.id) {\n              if (nextNode) {\n                return { ...n,\n                  \"target\": target.id + 1\n                };\n              } else {\n                return { ...n,\n                  \"target\": null\n                };\n              }\n            } else {\n              return;\n            }\n          } else {\n            return n;\n          } // if (Array.isArray(n.target) && n.target.includes(target.id)) {\n          //   n.target.filter((x) => x !== target.id);\n          // } else {\n          //   if (n === prevNode && !Array.isArray(n.target)) {\n          //     return (nextNode ? {...n, \"target\": target.id+1} : {...n, \"target\": null});\n          //   } else if () {\n          //     return true\n          //     // return (n.target.includes(target.id) ? true : n)\n          //     // n.target.filter((x) => x !== n.target[n.target.indexOf(target.id)])\n          //   } else {\n          //     return n\n          //   }\n          // }\n\n        });\n        return updatedData; // return updatedData.filter(n => n !== target);\n      } else {\n        return data.filter(n => n !== target);\n      }\n    }\n\n    console.log(newData()); // setData(newData);\n  };\n\n  switch (info.type) {\n    case 'link':\n      content = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"From: \", target.source.name, \" (\", target.source.id, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 58\n        }, this), \"To: \", target.target.name, \" (\", target.target.id, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 56\n        }, this), \"Color: \", target.color ? target.color : \"Black\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 57\n        }, this), \"Width: \", target.width ? target.width : \"1.67 (default)\"]\n      }, void 0, true);\n      break;\n\n    default:\n      content = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"ID: \", target.id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 26\n        }, this), \"Time: \", target.x, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 27\n        }, this), \"Y Position: \", target.y, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }, this), \"Target(s): \", target.target ? target.target : \"N/A\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 61\n        }, this), \"Color: \", target.color ? target.color : \"Black\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 57\n        }, this), \"Radius: \", target.radius ? target.radius : \"5 (default)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"Delete Point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui absolute\",\n    style: {\n      left: info.position[0] + 'px',\n      top: info.position[1] + 'px'\n    },\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_c = InfoBox;\nexport default InfoBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoBox\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InfoBox.js"],"names":["InfoBox","info","data","setData","target","content","handleDelete","e","preventDefault","node","find","n","id","prevNode","indexOf","nextNode","newData","updatedData","map","Array","isArray","includes","filter","x","console","log","type","source","name","color","width","y","radius","left","position","top"],"mappings":";;;;AAAA;;AACA;AACA;AACA;AACA;AAEA,SAASA,OAAT,CAAiB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,IAAP;AAAaC,EAAAA;AAAb,CAAjB,EAAwC;AACtC,QAAMC,MAAM,GAAGH,IAAI,CAACG,MAApB;AACA,MAAIC,OAAO,GAAG,IAAd;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF,GAD0B,CAE1B;;AACA,UAAMC,IAAI,GAAGP,IAAI,CAACQ,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASR,MAAM,CAACQ,EAA/B,CAAb;AACA,UAAMC,QAAQ,GAAGX,IAAI,CAACA,IAAI,CAACY,OAAL,CAAaL,IAAb,IAAmB,CAApB,CAArB;AACA,UAAMM,QAAQ,GAAGb,IAAI,CAACA,IAAI,CAACY,OAAL,CAAaL,IAAb,IAAmB,CAApB,CAArB;;AAEA,aAASO,OAAT,GAAkB;AAChB,UAAIP,IAAI,KAAKP,IAAI,CAAC,CAAD,CAAjB,EAAsB;AACpB,cAAMe,WAAW,GAAGf,IAAI,CAACgB,GAAL,CAASP,CAAC,IAC5B;AACE,cAAIA,CAAC,CAACP,MAAN,EAAc;AACZ,gBAAIe,KAAK,CAACC,OAAN,CAAcT,CAAC,CAACP,MAAhB,KAA2BO,CAAC,CAACP,MAAF,CAASiB,QAAT,CAAkBjB,MAAM,CAACQ,EAAzB,CAA/B,EAA6D;AAC3D,qBAAQD,CAAC,CAACP,MAAF,CAASkB,MAAT,CAAiBC,CAAD,IAAOA,CAAC,KAAKnB,MAAM,CAACQ,EAApC,CAAR;AACD,aAFD,MAEO,IAAID,CAAC,CAACP,MAAF,KAAaA,MAAM,CAACQ,EAAxB,EAA4B;AACjC,kBAAIG,QAAJ,EAAc;AACZ,uBAAQ,EAAC,GAAGJ,CAAJ;AAAO,4BAAUP,MAAM,CAACQ,EAAP,GAAU;AAA3B,iBAAR;AACD,eAFD,MAEO;AACL,uBAAQ,EAAC,GAAGD,CAAJ;AAAO,4BAAU;AAAjB,iBAAR;AACD;AACF,aANM,MAMA;AAAC;AAAO;AAChB,WAVD,MAUO;AACL,mBAAOA,CAAP;AACD,WAbH,CAcE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,SA5BiB,CAApB;AA8BA,eAAOM,WAAP,CA/BoB,CAgCpB;AACD,OAjCD,MAiCO;AACL,eAAOf,IAAI,CAACoB,MAAL,CAAYX,CAAC,IAAIA,CAAC,KAAKP,MAAvB,CAAP;AACD;AACF;;AAEDoB,IAAAA,OAAO,CAACC,GAAR,CAAYT,OAAO,EAAnB,EA9C0B,CA+C1B;AACD,GAhDD;;AAkDA,UAAQf,IAAI,CAACyB,IAAb;AACE,SAAK,MAAL;AACErB,MAAAA,OAAO,gBACL;AAAA,6BACSD,MAAM,CAACuB,MAAP,CAAcC,IADvB,QAC+BxB,MAAM,CAACuB,MAAP,CAAcf,EAD7C,oBACiD;AAAA;AAAA;AAAA;AAAA,gBADjD,UAEOR,MAAM,CAACA,MAAP,CAAcwB,IAFrB,QAE6BxB,MAAM,CAACA,MAAP,CAAcQ,EAF3C,oBAE+C;AAAA;AAAA;AAAA;AAAA,gBAF/C,aAGUR,MAAM,CAACyB,KAAP,GAAezB,MAAM,CAACyB,KAAtB,GAA8B,OAHxC,eAGgD;AAAA;AAAA;AAAA;AAAA,gBAHhD,aAIUzB,MAAM,CAAC0B,KAAP,GAAe1B,MAAM,CAAC0B,KAAtB,GAA8B,gBAJxC;AAAA,sBADF;AAOF;;AACA;AACEzB,MAAAA,OAAO,gBACL;AAAA,2BACOD,MAAM,CAACQ,EADd,eACiB;AAAA;AAAA;AAAA;AAAA,gBADjB,YAESR,MAAM,CAACmB,CAFhB,eAEkB;AAAA;AAAA;AAAA;AAAA,gBAFlB,kBAGenB,MAAM,CAAC2B,CAHtB,eAGwB;AAAA;AAAA;AAAA;AAAA,gBAHxB,iBAIc3B,MAAM,CAACA,MAAP,GAAgBA,MAAM,CAACA,MAAvB,GAAgC,KAJ9C,eAIoD;AAAA;AAAA;AAAA;AAAA,gBAJpD,aAKUA,MAAM,CAACyB,KAAP,GAAezB,MAAM,CAACyB,KAAtB,GAA8B,OALxC,eAKgD;AAAA;AAAA;AAAA;AAAA,gBALhD,cAMWzB,MAAM,CAAC4B,MAAP,GAAgB5B,MAAM,CAAC4B,MAAvB,GAAgC,aAN3C,eAMyD;AAAA;AAAA;AAAA;AAAA,gBANzD,eAOE;AAAQ,UAAA,OAAO,EAAE1B,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA,sBADF;AAXJ;;AAqBC;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAE;AAAC2B,MAAAA,IAAI,EAAEhC,IAAI,CAACiC,QAAL,CAAc,CAAd,IAAmB,IAA1B;AAAgCC,MAAAA,GAAG,EAAElC,IAAI,CAACiC,QAAL,CAAc,CAAd,IAAmB;AAAxD,KAApC;AAAA,cACG7B;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KA7FQL,O;AA+FT,eAAeA,OAAf","sourcesContent":["// import DeletePoint from \"./DeletePoint\";\n/*\n  - pass object info and mouseclick position to component\n  - component is a div set at mouseclick position and displays object info as text\n*/\n\nfunction InfoBox({info, data, setData}) {\n  const target = info.target;\n  var content = null;\n\n  /*\n    deleting point i:\n    - find data[i-1] and set its target to data[i+1]. then remove data[i] from array\n    - if data[i] is first point, just remove from array\n\n    - if first point => just delete\n    - prevNode exists but is not linked => just delete\n    - prevNode exists and is linked, but no nextNode => set prevNode target to null, then delete\n    - prevNode exists, is linked, and has next node => set prevNode target to nextNode, then delete\n    - prevNode exists, is linked to multiple nodes => remove target node from prevNode, then delete\n  */\n  const handleDelete = (e) => {\n    e.preventDefault();\n    // const newData = [...data]; //always practice data hygine\n    const node = data.find(n => n.id === target.id);\n    const prevNode = data[data.indexOf(node)-1];\n    const nextNode = data[data.indexOf(node)+1];\n\n    function newData(){\n      if (node !== data[0]) {\n        const updatedData = data.map(n =>\n          {\n            if (n.target) {\n              if (Array.isArray(n.target) && n.target.includes(target.id)) {\n                return (n.target.filter((x) => x !== target.id));\n              } else if (n.target === target.id) {\n                if (nextNode) {\n                  return ({...n, \"target\": target.id+1});\n                } else {\n                  return ({...n, \"target\": null});\n                }\n              } else {return}\n            } else {\n              return n;\n            }\n            // if (Array.isArray(n.target) && n.target.includes(target.id)) {\n            //   n.target.filter((x) => x !== target.id);\n            // } else {\n            //   if (n === prevNode && !Array.isArray(n.target)) {\n            //     return (nextNode ? {...n, \"target\": target.id+1} : {...n, \"target\": null});\n            //   } else if () {\n            //     return true\n            //     // return (n.target.includes(target.id) ? true : n)\n            //     // n.target.filter((x) => x !== n.target[n.target.indexOf(target.id)])\n            //   } else {\n            //     return n\n            //   }\n            // }\n          }\n        )\n        return updatedData\n        // return updatedData.filter(n => n !== target);\n      } else {\n        return data.filter(n => n !== target);\n      }\n    }\n\n    console.log(newData());\n    // setData(newData);\n  }\n\n  switch (info.type) {\n    case 'link':\n      content =\n        <>\n          From: {target.source.name} ({target.source.id})<br/>\n          To: {target.target.name} ({target.target.id})<br/>\n          Color: {target.color ? target.color : \"Black\"}<br/>\n          Width: {target.width ? target.width : \"1.67 (default)\"}\n        </>\n    break\n    default:\n      content =\n        <>\n          ID: {target.id}<br/>\n          Time: {target.x}<br/>\n          Y Position: {target.y}<br/>\n          Target(s): {target.target ? target.target : \"N/A\"}<br/>\n          Color: {target.color ? target.color : \"Black\"}<br/>\n          Radius: {target.radius ? target.radius : \"5 (default)\"}<br/>\n          <button onClick={handleDelete}>Delete Point</button>\n        </>\n  };\n\n  return (\n    <div className=\"ui absolute\" style={{left: info.position[0] + 'px', top: info.position[1] + 'px'}}>\n      {content}\n    </div>\n  );\n}\n\nexport default InfoBox;\n"]},"metadata":{},"sourceType":"module"}