{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewScaleForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n/*\n   UI and function for adding new zones.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewScaleForm({\n  scales,\n  setScales,\n  setToggle,\n  setActiveScale\n}) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [min, setMin] = useState(\"\");\n  const [max, setMax] = useState(\"\");\n  const [units, setUnits] = useState(\"\");\n  const [yPos, setYPos] = useState(); //optional parameters\n\n  const [segmentsNum, setSegmentNum] = useState([]);\n\n  const handleSubmit = e => {\n    const newScales = { ...scales\n    };\n    const tempMin = parseFloat(min);\n    const tempMax = parseFloat(max);\n    const tempYPos = parseFloat(yPos);\n\n    if (tempYPos > 1) {} //generate new scale\n\n\n    newScales[name] = {\n      \"min\": tempMin,\n      \"max\": tempMax,\n      \"units\": units,\n      \"yPos\": tempYPos,\n      \"segments\": [] //todo\n\n    };\n    setScales(newScales);\n    setActiveScale(name);\n    setToggle(null);\n    e.preventDefault();\n  };\n\n  const handleClose = e => {\n    setToggle(null);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"dialog\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui absolute center\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"right uiButton closeButton\",\n        onClick: handleClose,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 86\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"redText\",\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"any unicode characters\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Minimum Value\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"redText\",\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"#s for now\",\n          value: min,\n          onChange: e => setMin(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Maximum Value\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"redText\",\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"#s for now\",\n          value: max,\n          onChange: e => setMax(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Units Label\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"redText\",\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"ie: Years\",\n          value: units,\n          onChange: e => setUnits(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Vertical Position\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"redText\",\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"0 (top) - 1 (bottom)\",\n          value: yPos,\n          onChange: e => setYPos(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Segments\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"granularities within scale\",\n          value: segmentsNum,\n          onChange: e => setSegmentNum(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"uiButton\",\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewScaleForm, \"/JVI0yd3Ay8vQn8u6LlnNb5lOWw=\");\n\n_c = NewScaleForm;\n;\nexport default NewScaleForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewScaleForm\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewScaleForm.js"],"names":["React","useState","NewScaleForm","scales","setScales","setToggle","setActiveScale","name","setName","min","setMin","max","setMax","units","setUnits","yPos","setYPos","segmentsNum","setSegmentNum","handleSubmit","e","newScales","tempMin","parseFloat","tempMax","tempYPos","preventDefault","handleClose","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n/*\n   UI and function for adding new zones.\n*/\n\nfunction NewScaleForm({scales, setScales, setToggle, setActiveScale}) {\n  const [name, setName] = useState(\"\");\n  const [min, setMin] = useState(\"\");\n  const [max, setMax] = useState(\"\");\n  const [units, setUnits] = useState(\"\");\n  const [yPos, setYPos] = useState();\n  //optional parameters\n  const [segmentsNum, setSegmentNum] = useState([]);\n\n  const handleSubmit = (e) => {\n    const newScales = {...scales};\n\n    const tempMin = parseFloat(min);\n    const tempMax = parseFloat(max);\n    const tempYPos = parseFloat(yPos);\n\n    if (tempYPos>1) {\n\n    }\n\n    //generate new scale\n    newScales[name] = {\n      \"min\": tempMin,\n      \"max\": tempMax,\n      \"units\": units,\n      \"yPos\": tempYPos,\n      \"segments\": [] //todo\n    }\n    setScales(newScales);\n    setActiveScale(name);\n    setToggle(null);\n    e.preventDefault();\n  };\n\n  const handleClose = (e) => {\n    setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <dialog>\n    <form className=\"ui absolute center\" onSubmit={handleSubmit}>\n      <button className=\"right uiButton closeButton\" onClick={handleClose}>x</button><br/>\n      <label>\n        Name<span className=\"redText\">* </span>\n        <input type=\"text\"\n          placeholder=\"any unicode characters\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        Minimum Value<span className=\"redText\">* </span>\n        <input type=\"text\"\n          placeholder=\"#s for now\"\n          value={min}\n          onChange={(e) => setMin(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        Maximum Value<span className=\"redText\">* </span>\n        <input type=\"text\"\n          placeholder=\"#s for now\"\n          value={max}\n          onChange={(e) => setMax(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        Units Label<span className=\"redText\">* </span>\n        <input type=\"text\"\n          placeholder=\"ie: Years\"\n          value={units}\n          onChange={(e) => setUnits(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        Vertical Position<span className=\"redText\">* </span>\n        <input\n          type=\"text\"\n          placeholder=\"0 (top) - 1 (bottom)\"\n          value={yPos}\n          onChange={(e) => setYPos(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        Segments\n        <input\n          type=\"number\"\n          placeholder=\"granularities within scale\"\n          value={segmentsNum}\n          onChange={(e) => setSegmentNum(e.target.value)}\n        />\n      </label><br/>\n      <input className=\"uiButton\" type=\"submit\" value=\"Submit\"/>\n    </form>\n    </dialog>\n  )\n};\n\nexport default NewScaleForm;\n"]},"metadata":{},"sourceType":"module"}