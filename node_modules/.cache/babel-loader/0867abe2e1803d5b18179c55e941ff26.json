{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Importance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SelectedDisplay from './SelectedDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Importance(props) {\n  _s();\n\n  //TODO: intervals, negatives, \"steps\"\n  const [input, setInput] = useState(); //todo: make for interval also\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (props.target.start) {\n      //zone\n      const newZones = [...props.Zones];\n      const zone = newZones.find(n => n.id === props.target.id);\n      zone.importance = parseFloat(input);\n      props.setZones(newZones);\n      return;\n    }\n\n    const newInstants = [...props.data];\n\n    if (props.target.source) {\n      //link\n      const instant = newInstants.find(n => n.id === props.target.source.id);\n      instant.intervalWidth = instant.intervalWidth ? instant.intervalWidth * (1 + input / 2) : props.radius / 3 * (1 + input / 2); //if intervalWidth defined, multiply. otherwise, use default\n    } else {\n      //instant\n      const instant = newInstants.find(n => n.id === props.target.id);\n      instant.radius = instant.radius ? instant.radius * (1 + input / 2) : props.radius * (1 + input / 2); //if radius defined, multiply. otherwise, use default radius\n    }\n\n    props.setData(newInstants);\n  };\n\n  const handleClose = e => {\n    props.setToggle(null);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"right\",\n      onClick: handleClose,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(SelectedDisplay, {\n      target: props.target\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Importance\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"ints relative to 0 (+ and -)\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Importance, \"+E2veEehVihf73G+Rv7Nq0ryIOw=\");\n\n_c = Importance;\nexport default Importance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Importance\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Importance.js"],"names":["React","useState","SelectedDisplay","Importance","props","input","setInput","handleSubmit","e","preventDefault","target","start","newZones","Zones","zone","find","n","id","importance","parseFloat","setZones","newInstants","data","source","instant","intervalWidth","radius","setData","handleClose","setToggle","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport SelectedDisplay from './SelectedDisplay';\n\nfunction Importance(props) { //TODO: intervals, negatives, \"steps\"\n\n  const [input, setInput] = useState();\n\n  //todo: make for interval also\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (props.target.start) { //zone\n      const newZones = [...props.Zones];\n      const zone = newZones.find(n => n.id === props.target.id);\n      zone.importance = parseFloat(input);\n      props.setZones(newZones);\n      return;\n    }\n\n    const newInstants = [...props.data];\n\n    if (props.target.source) { //link\n      const instant = newInstants.find(n => n.id === props.target.source.id);\n      instant.intervalWidth = instant.intervalWidth ? instant.intervalWidth*(1+input/2) : props.radius/3*(1+input/2); //if intervalWidth defined, multiply. otherwise, use default\n    } else { //instant\n      const instant = newInstants.find(n => n.id === props.target.id);\n      instant.radius = instant.radius ? instant.radius*(1+input/2) : props.radius*(1+input/2); //if radius defined, multiply. otherwise, use default radius\n    }\n    props.setData(newInstants);\n\n  };\n\n  const handleClose = (e) => {\n    props.setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"ui absolute center\" onSubmit={handleSubmit}>\n      <button className=\"right\" onClick={handleClose}>x</button><br/>\n      <SelectedDisplay target={props.target}/>\n      <label>\n        Importance\n        <input type=\"number\"\n          placeholder=\"ints relative to 0 (+ and -)\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          required\n        />\n      </label><br/>\n      <input type=\"submit\" value=\"Submit\"/>\n    </form>\n  )\n}\n\nexport default Importance;\n"]},"metadata":{},"sourceType":"module"}