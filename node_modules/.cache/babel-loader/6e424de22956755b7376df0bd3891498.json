{"ast":null,"code":"/*\n   generates intervals between all intervaled instants and\n   returns a interval object with interval properties.\n*/\nfunction generateIntervals(data) {\n  // console.log(data[8])\n\n  /*\n    expand to standalone paths? bezier curve: https://svg-path-visualizer.netlify.app/bezier-curve/\n    - start: can specify point or enter coordinate values directly (run thru xScale)\n    - control: ???\n    - end: same as start\n    output: M startX,startY C controlX1,controlY1 controlX2,controlY2 endX, endY\n  */\n  const intervals = []; //array of all instant intervals\n\n  Object.entries(data).forEach(i => {\n    console.log(i); // if (!item.target) {\n    //   //if the instant does not have a target, skip generating interval\n    //   return\n    // } else {\n    //   item.target.forEach((n) => {\n    //     const instant = data.find(x => x.id === n);\n    //     if (data.indexOf(instant) > -1) { //does instant exist?\n    //       intervals.push({\n    //         source:item,\n    //         target:instant,\n    //         color:item.intervalColor ? item.intervalColor : item.color ? item.color : null, //if not specified, use point color. otherwise, null\n    //         width:item.intervalWidth,\n    //         opacity:item.intervalOpacity ? item.intervalOpacity : item.opacity ? item.opacity : null,\n    //         dashed:item.intervalDashed\n    //       });\n    //     }\n    //   });\n    // }\n  }); // return intervals;\n}\n\n;\nexport default generateIntervals;","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/generateIntervals.js"],"names":["generateIntervals","data","intervals","Object","entries","forEach","i","console","log"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AACjC;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AAEE,QAAMC,SAAS,GAAG,EAAlB,CAV+B,CAUT;;AAEtBC,EAAAA,MAAM,CAACC,OAAP,CAAeH,IAAf,EAAqBI,OAArB,CAA8BC,CAAD,IAAO;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,EADkC,CAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GApBD,EAZ+B,CAiC/B;AACD;;AAAA;AAED,eAAeN,iBAAf","sourcesContent":["/*\n   generates intervals between all intervaled instants and\n   returns a interval object with interval properties.\n*/\n\nfunction generateIntervals(data) {\n// console.log(data[8])\n  /*\n    expand to standalone paths? bezier curve: https://svg-path-visualizer.netlify.app/bezier-curve/\n    - start: can specify point or enter coordinate values directly (run thru xScale)\n    - control: ???\n    - end: same as start\n    output: M startX,startY C controlX1,controlY1 controlX2,controlY2 endX, endY\n  */\n\n  const intervals = []; //array of all instant intervals\n\n  Object.entries(data).forEach((i) => {\n    console.log(i)\n    // if (!item.target) {\n    //   //if the instant does not have a target, skip generating interval\n    //   return\n    // } else {\n    //   item.target.forEach((n) => {\n    //     const instant = data.find(x => x.id === n);\n    //     if (data.indexOf(instant) > -1) { //does instant exist?\n    //       intervals.push({\n    //         source:item,\n    //         target:instant,\n    //         color:item.intervalColor ? item.intervalColor : item.color ? item.color : null, //if not specified, use point color. otherwise, null\n    //         width:item.intervalWidth,\n    //         opacity:item.intervalOpacity ? item.intervalOpacity : item.opacity ? item.opacity : null,\n    //         dashed:item.intervalDashed\n    //       });\n    //     }\n    //   });\n    // }\n  });\n  // return intervals;\n};\n\nexport default generateIntervals;\n"]},"metadata":{},"sourceType":"module"}