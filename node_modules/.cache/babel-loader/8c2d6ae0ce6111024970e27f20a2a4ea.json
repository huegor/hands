{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Scrubber.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { select, drag, axisBottom, scalePoint } from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Scrubber({\n  activeData,\n  setActiveData,\n  src,\n  setData\n}) {\n  _s();\n\n  const handleClick = e => {\n    if (e.target.id === \"foward\") {\n      setActiveData(activeData += 1);\n    } else {\n      setActiveData(activeData -= 1);\n    } // console.log(src.nodes.length-1);\n    // console.log(activeData);\n\n\n    setData(src.nodes[activeData]);\n  }; //initialize reference object to pass to svg in React Dom\n\n\n  const svgRef = useRef();\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const scale = scalePoint().domain(src.nodes.map(n => src.nodes.indexOf(n))).range([0, 300]); //todo\n\n    const axis = axisBottom(scale);\n    svg.select(\".scrubber-axis\").style(\"transform\", `translateY(70px)`) //todo\n    .call(axis);\n    svg.selectAll(\".active\").append(\"circle\").attr(\"r\", 5).attr(\"cx\", activeData).attr(\"cy\", 0);\n  }, [activeData, src]); // <div className=\"ui absolute center\">\n  //   <button id=\"back\" onClick={handleClick} disabled={activeData===0}>&lt;</button>\n  //   {activeData}\n  //   <button id=\"foward\" onClick={handleClick} disabled={activeData===src.nodes.length-1}>&gt;</button>\n  // </div>\n\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    className: \"ui absolute center\",\n    children: /*#__PURE__*/_jsxDEV(\"g\", {\n      className: \"scrubber-axis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Scrubber, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n\n_c = Scrubber;\nexport default Scrubber;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scrubber\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Scrubber.js"],"names":["React","useState","useEffect","useRef","select","drag","axisBottom","scalePoint","Scrubber","activeData","setActiveData","src","setData","handleClick","e","target","id","nodes","svgRef","svg","current","scale","domain","map","n","indexOf","range","axis","style","call","selectAll","append","attr"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,UAAvB,EAAmCC,UAAnC,QAAqD,IAArD;;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA,UAAD;AAAaC,EAAAA,aAAb;AAA4BC,EAAAA,GAA5B;AAAiCC,EAAAA;AAAjC,CAAlB,EAA6D;AAAA;;AAE3D,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIA,CAAC,CAACC,MAAF,CAASC,EAAT,KAAgB,QAApB,EAA8B;AAC5BN,MAAAA,aAAa,CAACD,UAAU,IAAI,CAAf,CAAb;AACD,KAFD,MAEO;AACLC,MAAAA,aAAa,CAACD,UAAU,IAAI,CAAf,CAAb;AACD,KALwB,CAMzB;AACA;;;AACAG,IAAAA,OAAO,CAACD,GAAG,CAACM,KAAJ,CAAUR,UAAV,CAAD,CAAP;AACD,GATD,CAF2D,CAa3D;;;AACA,QAAMS,MAAM,GAAGf,MAAM,EAArB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,GAAG,GAAGf,MAAM,CAACc,MAAM,CAACE,OAAR,CAAlB;AAEA,UAAMC,KAAK,GAAGd,UAAU,GACrBe,MADW,CACJX,GAAG,CAACM,KAAJ,CAAUM,GAAV,CAAeC,CAAD,IAAOb,GAAG,CAACM,KAAJ,CAAUQ,OAAV,CAAkBD,CAAlB,CAArB,CADI,EAEXE,KAFW,CAEL,CAAC,CAAD,EAAI,GAAJ,CAFK,CAAd,CAHc,CAKM;;AAEpB,UAAMC,IAAI,GAAGrB,UAAU,CAACe,KAAD,CAAvB;AAEAF,IAAAA,GAAG,CACAf,MADH,CACU,gBADV,EAEGwB,KAFH,CAES,WAFT,EAEuB,kBAFvB,EAE0C;AAF1C,KAGGC,IAHH,CAGQF,IAHR;AAKAR,IAAAA,GAAG,CACAW,SADH,CACa,SADb,EAEGC,MAFH,CAEU,QAFV,EAGGC,IAHH,CAGQ,GAHR,EAGa,CAHb,EAIGA,IAJH,CAIQ,IAJR,EAIcvB,UAJd,EAKGuB,IALH,CAKQ,IALR,EAKc,CALd;AAOD,GArBQ,EAqBN,CAACvB,UAAD,EAAaE,GAAb,CArBM,CAAT,CAhB2D,CAuC3D;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,GAAG,EAAEO,MAAV;AAAkB,IAAA,SAAS,EAAC,oBAA5B;AAAA,2BACE;AAAG,MAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAlDQV,Q;;KAAAA,Q;AAoDT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { select, drag, axisBottom, scalePoint } from \"d3\";\n\nfunction Scrubber({activeData, setActiveData, src, setData}) {\n\n  const handleClick = (e) => {\n    if (e.target.id === \"foward\") {\n      setActiveData(activeData += 1);\n    } else {\n      setActiveData(activeData -= 1);\n    }\n    // console.log(src.nodes.length-1);\n    // console.log(activeData);\n    setData(src.nodes[activeData]);\n  }\n\n  //initialize reference object to pass to svg in React Dom\n  const svgRef = useRef();\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    const scale = scalePoint()\n      .domain(src.nodes.map((n) => src.nodes.indexOf(n)))\n      .range([0, 300]); //todo\n\n    const axis = axisBottom(scale);\n\n    svg\n      .select(\".scrubber-axis\")\n      .style(\"transform\", `translateY(70px)`) //todo\n      .call(axis);\n\n    svg\n      .selectAll(\".active\")\n      .append(\"circle\")\n      .attr(\"r\", 5)\n      .attr(\"cx\", activeData)\n      .attr(\"cy\", 0);\n\n  }, [activeData, src]);\n\n  // <div className=\"ui absolute center\">\n  //   <button id=\"back\" onClick={handleClick} disabled={activeData===0}>&lt;</button>\n  //   {activeData}\n  //   <button id=\"foward\" onClick={handleClick} disabled={activeData===src.nodes.length-1}>&gt;</button>\n  // </div>\n\n  return (\n    <svg ref={svgRef} className=\"ui absolute center\">\n      <g className=\"scrubber-axis\" />\n    </svg>\n  );\n}\n\nexport default Scrubber;\n"]},"metadata":{},"sourceType":"module"}