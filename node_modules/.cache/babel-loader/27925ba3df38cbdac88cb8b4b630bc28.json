{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./data.json\";\nimport TagVisData from \"./tagVis_data.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewInstantForm from \"./components/NewInstantForm\";\nimport NewIntervalForm from \"./components/NewIntervalForm\";\nimport NewZoneForm from \"./components/NewZoneForm\";\nimport NewScaleForm from \"./components/NewScaleForm\";\nimport EditScaleForm from \"./components/EditScaleForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\";\nimport ImportDataForm from \"./components/ImportDataForm\";\nimport NavBar from \"./components/NavBar\";\nimport Layers from \"./components/Layers\";\nimport Scrubber from \"./components/Scrubber\";\nimport Legend from \"./components/Legend\";\nimport Certainty from \"./components/Certainty\";\nimport Importance from \"./components/Importance\";\nimport Connection from \"./components/Connection\";\nimport WelcomeMessage from \"./components/WelcomeMessage\";\nimport generateIntervals from \"./components/generateIntervals\";\nimport EmptyProj from \"./components/EmptyProj\"; //for installation\n\nimport Hands from './components/Hands';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction translateData({\n  data,\n  nullData\n}) {\n  const newData = { ...nullData\n  };\n  const newInst = newData.instants[0];\n  const scaleName = \"scale1\";\n  var key = 0;\n  var maxX = 0;\n  var minX = 100000;\n\n  for (const datum of data) {\n    newInst[`${key}`] = {\n      \"x\": datum.cy,\n      \"y\": datum.cx,\n      \"scale\": scaleName // \"target\": null,\n      // \"text\": e.target.label.value,\n      // ...(e.target.color && {\"color\": e.target.color.value}), //if color is specified, create color entry in data\n      // ...(e.target.radius && {\"radius\": e.target.radius.value}),\n      // ...(e.target.opacity && {\"opacity\": e.target.opacity.value})\n\n    };\n\n    if (datum.cx > maxX) {\n      maxX = datum.cx;\n    } else if (datum.cx < minX) {\n      minX = datum.cx;\n    }\n\n    key++;\n  }\n\n  newData.scales[`${scaleName}`] = {\n    \"min\": minX,\n    \"max\": maxX,\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"segments\": [] //todo\n\n  }; // console.log(minX, maxX);\n  // console.log(newData);\n\n  return newData;\n}\n\nfunction ScalesList(scales) {\n  Object.keys(scales).map((key, i) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: key,\n      children: key\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  });\n}\n\n_c = ScalesList;\n\nfunction App() {\n  _s();\n\n  //blank ChronoJSON template\n  const nullData = {\n    \"imgs\": [],\n    \"instants\": [{}],\n    \"zones\": [],\n    \"scales\": {}\n  };\n  const scaleData = {\n    \"imgs\": [],\n    \"instants\": [[]],\n    \"zones\": [],\n    \"scales\": {\n      \"Egyptian Dynasties\": {\n        \"min\": -3100,\n        \"max\": -30,\n        \"units\": \"Years BCE\",\n        \"yPos\": 1,\n        \"tickValues\": [],\n        \"segments\": [{\n          \"max\": -2686,\n          \"label\": \"Early Dynastic\"\n        }, {\n          \"min\": -2686,\n          \"max\": -2181,\n          \"label\": \"Old Kingdom\"\n        }, {\n          \"min\": -2181,\n          \"max\": -2040,\n          \"label\": \"First Intermediate Period\"\n        }, {\n          \"min\": -2040,\n          \"max\": -1649,\n          \"label\": \"Middle Kingdom\"\n        }, {\n          \"min\": -1649,\n          \"max\": -1550,\n          \"label\": \"Second Intermediate Period\"\n        }, {\n          \"min\": -1550,\n          \"max\": -1077,\n          \"label\": \"New Kingdom\"\n        }, {\n          \"min\": -1077,\n          \"max\": -656,\n          \"label\": \"Third Intermediate Period\"\n        }, {\n          \"min\": -656,\n          \"max\": -332,\n          \"label\": \"Late Period\"\n        }, {\n          \"min\": -332,\n          \"label\": \"Graeco-Roman\"\n        }]\n      }\n    }\n  }; //for installation\n\n  const [enabled, setEnabled] = useState(false); //user defined\n\n  const radius = 5; //for entire project\n\n  const [proj, setProj] = useState(false);\n  const [fileName, setFileName] = useState(\"\"); //for the entire ChronoJSON\n\n  const [src, setSrc] = useState(translateData({\n    data: TagVisData,\n    nullData: nullData\n  })); //for ChronoJSON history. for undo and redo\n\n  const [history, setHistory] = useState([]); //for toggling the active data as used by scrubber\n\n  const [activeData, setActiveData] = useState(0); //for toggling the active layer\n\n  const [activeLayer, setActiveLayer] = useState(); //initialize datapoints\n\n  const [data, setData] = useState(src.instants[activeData]); //links are initialized in Graphic.js\n  // const [links, setLinks] = useState(generateLinks(src.instants[activeData]))\n  //initialize zones\n\n  const [zones, setZones] = useState(src.zones); //initialize scales\n\n  const [scales, setScales] = useState(src.scales); //toggles datapoint IDs vs labels\n\n  const [showLabel, setShowLabel] = useState(true); //for toggling the active scale\n\n  const [activeScale, setActiveScale] = useState(Object.keys(scales)[0]); //UI window toggles\n\n  const [toggle, setToggle] = useState(); //UI info boxes for points, intervals, etc.\n\n  const [info, setInfo] = useState(); //Inflection info\n\n  const [inflectTarget, setInflectTarget] = useState(); //Syntactic inflections order\n\n  const [syntacticOrder, setSyntacticOrder] = useState([null, null, null]); //[target1, target2, #]. # dictates order, switches b/w 0 and 1\n  //functions\n\n  const updateSrc = (newData, key) => {\n    setHistory([...history, src]); //history.length-1 is last src before this\n\n    const newSrc = src; //why is console.log(data) before & after the same, but new data point still shows up\n\n    if (key === \"zones\") {\n      setZones(newData);\n      newSrc.zones = zones;\n    } else {\n      setData(newData);\n      newSrc.instants[activeData] = data;\n    }\n\n    setSrc(newSrc);\n    setToggle(null);\n  }; // console.log(info);\n\n  /*\n    TODO:\n    - for piecewise timeline, make function that generates different graphics\n  */\n  //<Hands enabled={enabled} setEnabled={setEnabled}/>\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [info && /*#__PURE__*/_jsxDEV(InfoBox, {\n      info: info,\n      setInfo: setInfo,\n      history: history,\n      setHistory: setHistory,\n      data: data,\n      setData: setData,\n      src: src,\n      setSrc: setSrc,\n      updateSrc: updateSrc,\n      zones: zones\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      toggle: toggle,\n      setToggle: setToggle,\n      data: data,\n      showLabel: showLabel,\n      setShowLabel: setShowLabel,\n      hasScales: Object.keys(scales).length,\n      fileName: fileName,\n      setFileName: setFileName,\n      proj: proj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), toggle === \"scrubber\" && /*#__PURE__*/_jsxDEV(Scrubber, {\n      activeData: activeData,\n      setActiveData: setActiveData,\n      src: src,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 31\n    }, this), toggle === \"NewInstantForm\" && /*#__PURE__*/_jsxDEV(NewInstantForm, {\n      data: data,\n      setData: setData,\n      target: inflectTarget,\n      setToggle: setToggle,\n      scales: scales,\n      activeScale: activeScale,\n      activeData: activeData,\n      history: history,\n      setHistory: setHistory,\n      updateSrc: updateSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), toggle === \"editScale\" && /*#__PURE__*/_jsxDEV(EditScaleForm, {\n      scales: scales,\n      setScales: setScales,\n      setToggle: setToggle,\n      activeScale: activeScale,\n      setActiveScale: setActiveScale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 32\n    }, this), toggle === \"addZone\" && /*#__PURE__*/_jsxDEV(NewZoneForm, {\n      zones: zones,\n      setZones: setZones,\n      setToggle: setToggle,\n      scales: scales,\n      activeScale: activeScale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 30\n    }, this), toggle === \"addInterval\" && /*#__PURE__*/_jsxDEV(NewIntervalForm, {\n      data: data,\n      setData: setData,\n      setToggle: setToggle,\n      scales: scales,\n      activeScale: activeScale,\n      history: history,\n      setHistory: setHistory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 34\n    }, this), toggle === \"addScale\" && /*#__PURE__*/_jsxDEV(NewScaleForm, {\n      scales: scales,\n      setScales: setScales,\n      setToggle: setToggle,\n      setActiveScale: setActiveScale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 31\n    }, this), toggle === \"save\" && /*#__PURE__*/_jsxDEV(ExportDataForm, {\n      src: src,\n      setSrc: setSrc,\n      data: data,\n      zones: zones,\n      scales: scales,\n      activeData: activeData,\n      setToggle: setToggle,\n      fileName: fileName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this), toggle === \"legend\" && /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 29\n    }, this), toggle === \"layers\" && /*#__PURE__*/_jsxDEV(Layers, {\n      activeLayer: activeLayer,\n      setActiveLayer: setActiveLayer,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 29\n    }, this), toggle === \"import\" && /*#__PURE__*/_jsxDEV(ImportDataForm, {\n      setSrc: setSrc,\n      setScales: setScales,\n      setZones: setZones,\n      setData: setData,\n      activeData: activeData,\n      setToggle: setToggle,\n      setFileName: setFileName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this), toggle === \"certainty\" && /*#__PURE__*/_jsxDEV(Certainty, {\n      target: inflectTarget,\n      setToggle: setToggle,\n      data: data,\n      setData: setData,\n      zones: zones,\n      setZones: setZones\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this), toggle === \"importance\" && /*#__PURE__*/_jsxDEV(Importance, {\n      target: inflectTarget,\n      setToggle: setToggle,\n      data: data,\n      setData: setData,\n      zones: zones,\n      setZones: setZones,\n      radius: radius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this), toggle === \"connection\" && /*#__PURE__*/_jsxDEV(Connection, {\n      target: syntacticOrder,\n      setToggle: setToggle,\n      data: data,\n      setData: setData,\n      zones: zones,\n      setZones: setZones\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), proj ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      className: \"container fullHeight\",\n      children: [Object.keys(scales).length ? /*#__PURE__*/_jsxDEV(Graphic, {\n        data: data,\n        setData: setData,\n        zones: zones,\n        setZones: setZones,\n        radius: radius,\n        info: info,\n        setInfo: setInfo,\n        setInflectTarget: setInflectTarget,\n        showLabel: showLabel,\n        activeLayer: activeLayer,\n        toggle: toggle,\n        setToggle: setToggle,\n        scales: scales,\n        setScales: setScales,\n        syntacticOrder: syntacticOrder,\n        setSyntacticOrder: setSyntacticOrder,\n        activeScale: activeScale\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(EmptyProj, {\n        setToggle: setToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 15\n      }, this), src.imgs.length > 0 && /*#__PURE__*/_jsxDEV(Image, {\n        urls: src.imgs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WelcomeMessage, {\n      setProj: setProj,\n      setFileName: setFileName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"5Ri+Grgh+r7j6CBYTg/B34RkCl8=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ScalesList\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js"],"names":["React","useState","Data","TagVisData","Graphic","Image","NewInstantForm","NewIntervalForm","NewZoneForm","NewScaleForm","EditScaleForm","InfoBox","ExportDataForm","ImportDataForm","NavBar","Layers","Scrubber","Legend","Certainty","Importance","Connection","WelcomeMessage","generateIntervals","EmptyProj","Hands","translateData","data","nullData","newData","newInst","instants","scaleName","key","maxX","minX","datum","cy","cx","scales","ScalesList","Object","keys","map","i","App","scaleData","enabled","setEnabled","radius","proj","setProj","fileName","setFileName","src","setSrc","history","setHistory","activeData","setActiveData","activeLayer","setActiveLayer","setData","zones","setZones","setScales","showLabel","setShowLabel","activeScale","setActiveScale","toggle","setToggle","info","setInfo","inflectTarget","setInflectTarget","syntacticOrder","setSyntacticOrder","updateSrc","newSrc","length","imgs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./data.json\";\nimport TagVisData from \"./tagVis_data.json\"\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewInstantForm from \"./components/NewInstantForm\";\nimport NewIntervalForm from \"./components/NewIntervalForm\";\nimport NewZoneForm from \"./components/NewZoneForm\";\nimport NewScaleForm from \"./components/NewScaleForm\";\nimport EditScaleForm from \"./components/EditScaleForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\";\nimport ImportDataForm from \"./components/ImportDataForm\";\nimport NavBar from \"./components/NavBar\";\nimport Layers from \"./components/Layers\";\nimport Scrubber from \"./components/Scrubber\";\nimport Legend from \"./components/Legend\";\nimport Certainty from \"./components/Certainty\";\nimport Importance from \"./components/Importance\";\nimport Connection from \"./components/Connection\";\nimport WelcomeMessage from \"./components/WelcomeMessage\";\nimport generateIntervals from \"./components/generateIntervals\";\nimport EmptyProj from \"./components/EmptyProj\";\n//for installation\nimport Hands from './components/Hands';\n\n\nfunction translateData({data, nullData}) {\n  const newData = {...nullData};\n  const newInst = newData.instants[0];\n  const scaleName = \"scale1\";\n  var key = 0;\n  var maxX = 0;\n  var minX = 100000;\n\n  for (const datum of data) {\n    newInst[`${key}`] = {\n      \"x\": datum.cy,\n      \"y\": datum.cx,\n      \"scale\": scaleName,\n      // \"target\": null,\n      // \"text\": e.target.label.value,\n      // ...(e.target.color && {\"color\": e.target.color.value}), //if color is specified, create color entry in data\n      // ...(e.target.radius && {\"radius\": e.target.radius.value}),\n      // ...(e.target.opacity && {\"opacity\": e.target.opacity.value})\n    };\n    if (datum.cx > maxX) {\n      maxX=datum.cx;\n    } else if (datum.cx < minX) {\n      minX=datum.cx;\n    }\n    key++;\n  }\n\n  newData.scales[`${scaleName}`] = {\n    \"min\": minX,\n    \"max\": maxX,\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"segments\": [] //todo\n  }\n\n  // console.log(minX, maxX);\n  // console.log(newData);\n  return newData;\n}\n\nfunction ScalesList(scales) {\n  Object.keys(scales).map((key, i) => {\n    return <option value={key} key={i}>{key}</option>\n  });\n}\n\nfunction App() {\n  //blank ChronoJSON template\n  const nullData = {\n    \"imgs\": [],\n    \"instants\":\n    [\n      {}\n    ],\n    \"zones\":\n    [],\n    \"scales\":\n    {}\n  };\n\n  const scaleData = {\n    \"imgs\": [],\n    \"instants\":\n    [\n      []\n    ],\n    \"zones\":\n    [],\n    \"scales\":\n    {\n      \"Egyptian Dynasties\": {\n        \"min\": -3100,\n        \"max\": -30,\n        \"units\": \"Years BCE\",\n        \"yPos\": 1,\n        \"tickValues\": [],\n        \"segments\": [\n          {\"max\": -2686, \"label\": \"Early Dynastic\"},\n          {\"min\": -2686, \"max\": -2181, \"label\": \"Old Kingdom\"},\n          {\"min\": -2181, \"max\": -2040, \"label\": \"First Intermediate Period\"},\n          {\"min\": -2040, \"max\": -1649, \"label\": \"Middle Kingdom\"},\n          {\"min\": -1649, \"max\": -1550, \"label\": \"Second Intermediate Period\"},\n          {\"min\": -1550, \"max\": -1077, \"label\": \"New Kingdom\"},\n          {\"min\": -1077, \"max\": -656, \"label\": \"Third Intermediate Period\"},\n          {\"min\": -656, \"max\": -332, \"label\": \"Late Period\"},\n          {\"min\": -332, \"label\": \"Graeco-Roman\"}\n        ]\n      }\n    }\n  };\n\n  //for installation\n  const [enabled, setEnabled] = useState(false);\n\n  //user defined\n  const radius = 5;\n\n  //for entire project\n  const [proj, setProj] = useState(false);\n  const [fileName, setFileName] = useState(\"\");\n\n  //for the entire ChronoJSON\n  const [src, setSrc] = useState(translateData({data: TagVisData, nullData: nullData}));\n\n  //for ChronoJSON history. for undo and redo\n  const [history, setHistory] = useState([])\n\n  //for toggling the active data as used by scrubber\n  const [activeData, setActiveData] = useState(0);\n  //for toggling the active layer\n  const [activeLayer, setActiveLayer] = useState();\n\n  //initialize datapoints\n  const [data, setData] = useState(src.instants[activeData]);\n  //links are initialized in Graphic.js\n  // const [links, setLinks] = useState(generateLinks(src.instants[activeData]))\n  //initialize zones\n  const [zones, setZones] = useState(src.zones);\n  //initialize scales\n  const [scales, setScales] = useState(src.scales);\n\n  //toggles datapoint IDs vs labels\n  const [showLabel, setShowLabel] = useState(true);\n\n  //for toggling the active scale\n  const [activeScale, setActiveScale] = useState(Object.keys(scales)[0])\n\n  //UI window toggles\n  const [toggle, setToggle] = useState();\n  //UI info boxes for points, intervals, etc.\n  const [info, setInfo] = useState();\n  //Inflection info\n  const [inflectTarget, setInflectTarget] = useState();\n  //Syntactic inflections order\n  const [syntacticOrder, setSyntacticOrder] = useState([null, null, null]); //[target1, target2, #]. # dictates order, switches b/w 0 and 1\n\n  //functions\n  const updateSrc = (newData, key) => {\n    setHistory([...history, src]) //history.length-1 is last src before this\n    const newSrc = src;\n    //why is console.log(data) before & after the same, but new data point still shows up\n    if (key===\"zones\") {\n      setZones(newData);\n      newSrc.zones = zones;\n    } else {\n      setData(newData);\n      newSrc.instants[activeData] = data;\n    }\n    setSrc(newSrc);\n    setToggle(null);\n  }\n\n\n\n  // console.log(info);\n  /*\n    TODO:\n    - for piecewise timeline, make function that generates different graphics\n  */\n//<Hands enabled={enabled} setEnabled={setEnabled}/>\n  return (\n    <>\n\n      {info && <InfoBox\n        info={info}\n        setInfo={setInfo}\n        history={history} setHistory={setHistory}\n        data={data} setData={setData}\n        src={src} setSrc={setSrc}\n        updateSrc={updateSrc}\n        zones={zones}\n      />}\n      <NavBar\n        toggle={toggle}\n        setToggle={setToggle}\n        data={data} showLabel={showLabel}\n        setShowLabel={setShowLabel}\n        hasScales={Object.keys(scales).length}\n        fileName={fileName}\n        setFileName={setFileName}\n        proj={proj}\n      />\n      {toggle===\"scrubber\" && <Scrubber activeData={activeData} setActiveData={setActiveData} src={src} setData={setData}/>}\n      {toggle===\"NewInstantForm\" &&\n        <NewInstantForm\n          data={data}\n          setData={setData}\n          target={inflectTarget}\n          setToggle={setToggle}\n          scales={scales}\n          activeScale={activeScale}\n          activeData={activeData}\n          history={history}\n          setHistory={setHistory}\n          updateSrc={updateSrc}\n        />\n      }\n      {toggle===\"editScale\" && <EditScaleForm scales={scales} setScales={setScales} setToggle={setToggle} activeScale={activeScale} setActiveScale={setActiveScale}/>}\n      {toggle===\"addZone\" && <NewZoneForm zones={zones} setZones={setZones} setToggle={setToggle} scales={scales} activeScale={activeScale}/>}\n      {toggle===\"addInterval\" && <NewIntervalForm data={data} setData={setData} setToggle={setToggle} scales={scales} activeScale={activeScale} history={history} setHistory={setHistory}/>}\n      {toggle===\"addScale\" && <NewScaleForm scales={scales} setScales={setScales} setToggle={setToggle} setActiveScale={setActiveScale}/>}\n      {toggle===\"save\" &&\n        <ExportDataForm\n          src={src}\n          setSrc={setSrc}\n          data={data}\n          zones={zones}\n          scales={scales}\n          activeData={activeData}\n          setToggle={setToggle}\n          fileName={fileName}\n        />\n      }\n      {toggle===\"legend\" && <Legend/>}\n      {toggle===\"layers\" && <Layers activeLayer={activeLayer} setActiveLayer={setActiveLayer} data={data}/>}\n      {toggle===\"import\" &&\n        <ImportDataForm\n          setSrc={setSrc}\n          setScales={setScales}\n          setZones={setZones}\n          setData={setData}\n          activeData={activeData}\n          setToggle={setToggle}\n          setFileName={setFileName}\n        />\n      }\n      {toggle===\"certainty\" &&\n        <Certainty\n          target={inflectTarget}\n          setToggle={setToggle}\n          data={data}\n          setData={setData}\n          zones={zones}\n          setZones={setZones}\n        />\n      }\n      {toggle===\"importance\" &&\n        <Importance\n          target={inflectTarget}\n          setToggle={setToggle}\n          data={data}\n          setData={setData}\n          zones={zones}\n          setZones={setZones}\n          radius={radius}\n        />\n      }\n      {toggle===\"connection\" &&\n        <Connection\n          target={syntacticOrder}\n          setToggle={setToggle}\n          data={data}\n          setData={setData}\n          zones={zones}\n          setZones={setZones}\n        />\n      }\n\n      {proj ?\n        <div id=\"main\" className=\"container fullHeight\">\n          {Object.keys(scales).length ?\n            <Graphic\n              data={data}\n              setData={setData}\n              zones={zones}\n              setZones={setZones}\n              radius={radius}\n              info={info}\n              setInfo={setInfo}\n              setInflectTarget={setInflectTarget}\n              showLabel={showLabel}\n              activeLayer={activeLayer}\n              toggle={toggle}\n              setToggle={setToggle}\n              scales={scales}\n              setScales={setScales}\n              syntacticOrder={syntacticOrder}\n              setSyntacticOrder={setSyntacticOrder}\n              activeScale={activeScale}\n            />\n            : <EmptyProj setToggle={setToggle}/>\n          }\n          {src.imgs.length>0 && <Image urls={src.imgs}/>}\n        </div> :\n        <WelcomeMessage setProj={setProj} setFileName={setFileName}/>\n      }\n\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}