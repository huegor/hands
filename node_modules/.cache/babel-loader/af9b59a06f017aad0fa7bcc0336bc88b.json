{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Graphic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { select, scaleLinear, scaleOrdinal, axisBottom, linkHorizontal, format, drag, zoom, min, max, symbol, symbols } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport generateLinks from \"./generateLinks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Graphic({\n  data,\n  setData,\n  activeLayer,\n  intervals,\n  setIntervals,\n  radius,\n  info,\n  setInfo,\n  showLabel,\n  toggle,\n  scales,\n  setScales\n}) {\n  _s();\n\n  //all data is passed down from and synced to App.js\n  const activeData = activeLayer ? data.filter(d => d.layer === activeLayer) : data; //is logical operators active?\n\n  const logic = isNaN(data[0].x); //Todo\n  //initialize reference object to pass to svg in React Dom\n\n  const svgRef = useRef(); //svg wrapped in div bc otherwise resize observer callback won't work\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState(); //initialize links between nodes\n\n  const links = generateLinks(activeData); //all d3 shennanigans goes in this hook. called initially and on every data change\n\n  useEffect(() => {\n    const svg = select(svgRef.current); //\"svg\" is the current version of svgRef data\n    //prevents crashing when useResizeObserver returns null before svg is rendered\n\n    if (!dimensions) return; //---scales---//\n    //if time matches logical operator keyword, translate into index values, then map\n\n    const logicScale = scaleOrdinal([\"before\", \"now\", \"after\"], [-1, 0, 1]).unknown(0);\n    const breakpoint = 5;\n    const xMin = min(data.map(({\n      x\n    }) => logic ? logicScale(x) : x));\n    const xMax = max(data.map(({\n      x\n    }) => logic ? logicScale(x) : x));\n    const yMin = min(data.map(({\n      y\n    }) => y));\n    const yMax = max(data.map(({\n      y\n    }) => y));\n    const rangeX = xMax - xMin; //0 is minX, 1 is maxX (reference findMinMax)\n\n    const rangeY = yMax - yMin; //TODO: scaleTime()\n    //for multiple scales, generate a new xScale for each x/y min - x/y max\n\n    /*\n    - Allow users to specify scale. x&y min max and units\n    - for each scale, generateScale()\n    */\n\n    function generateScales(currentScale) {\n      const x = scaleLinear().domain([currentScale.min, currentScale.max]) //scaleLinear takes domain (data values) & maps onto range (screen pixel values)\n      .range([0, dimensions.width]);\n      const y = scaleLinear() //if difference in y vaules greater than 5, resize to min and max\n      .domain(rangeY > breakpoint ? [yMin, yMax] : [yMin - breakpoint, yMax + breakpoint]).range([0, dimensions.height]);\n      const xInverse = scaleLinear().domain([-dimensions.width, dimensions.width]).range([-(currentScale.max - currentScale.min), currentScale.max - currentScale.min]); //maxRangeX-minRangeX gives section of x values displayed onscreen\n\n      const yInverse = scaleLinear().domain([-dimensions.height, dimensions.height]).range(rangeY > breakpoint ? [-rangeY, rangeY] : [-breakpoint * 5, breakpoint * 5]);\n      return {\n        x,\n        y,\n        xInverse,\n        yInverse\n      };\n    } //scales values to screen pixels\n\n\n    const xScale = scaleLinear().domain([xMin, xMax]) //scaleLinear takes domain (data values) & maps onto range (screen pixel values)\n    .range([0, dimensions.width]);\n    const yScale = scaleLinear() //if difference in y vaules greater than 5, resize to min and max\n    .domain(rangeY > breakpoint ? [yMin, yMax] : [yMin - breakpoint, yMax + breakpoint]).range([0, dimensions.height]); //inverse scales for drag behavior\n\n    const xScaleInverse = scaleLinear().domain([-dimensions.width, dimensions.width]).range([-rangeX, rangeX]); //maxRangeX-minRangeX gives section of x values displayed onscreen\n\n    const yScaleInverse = scaleLinear().domain([-dimensions.height, dimensions.height]).range(rangeY > breakpoint ? [-rangeY, rangeY] : [-breakpoint * 5, breakpoint * 5]); //todo\n\n    if (currentZoomState) {\n      const newXScale = currentZoomState.rescaleX(generateScales(scales.smalls).x); //zoom state comes w methods for transformations\n\n      generateScales(scales.smalls).x.domain(newXScale.domain());\n      generateScales(scales.smalls).xInverse.range([-(newXScale.domain()[1] - newXScale.domain()[0]), newXScale.domain()[1] - newXScale.domain()[0]]);\n    }\n\n    ; //todo: put in exit function\n\n    svg.selectAll(\".remove\").remove(); //---draw intervals---//\n\n    if (intervals.length) {\n      svg.selectAll(\".intervals\").data(intervals).join(\"rect\").attr(\"class\", \"intervals\").attr(\"x\", n => generateScales(scales[n.scale]).x(n.start)) // .attr(\"y\", n => n.yStart ? yScale(n.yStart) : yScale(minMax[2]))\n      .attr(\"y\", n => n.yStart ? yScale(n.yStart) : 0) //todo\n      .attr(\"width\", n => generateScales(scales[n.scale]).x(n.end) - generateScales(scales[n.scale]).x(n.start)).attr(\"height\", n => {\n        if (n.yStart & n.yEnd) {\n          return yScale(n.yEnd) - yScale(n.yStart);\n        } else if (n.yStart) {\n          return yScale(yMax + 10) - yScale(n.yStart);\n        } else {\n          return yScale(yMax + 10); //todo\n          // return (yScale(minMax[3])-yScale(minMax[2]))\n        }\n      }).attr(\"opacity\", d => d.opacity ? d.opacity : 0.5).attr(\"fill\", d => d.color ? d.color : \"#999\").on(\"click\", (e, target) => {\n        //displays line properties when clicked\n        setInfo({\n          position: [e.x, e.y],\n          target: target,\n          type: \"interval\"\n        }); //todo: set info to null when clicking again\n\n        e.stopPropagation();\n      });\n    } //---draw bottom axis---//\n    //for each active scale, generate an x axis and place on the screen according to proportion of screen height/width as defined in JSON\n\n\n    Object.keys(scales).map(scale => {\n      const thisScale = scales[scale];\n      const xAxis = axisBottom(generateScales(thisScale).x).tickFormat(format(''));\n      svg.append(\"g\") //todo\n      .attr(\"class\", \"remove\").style(\"transform\", `translateY(${dimensions.height * thisScale.yProportion}px)`).call(xAxis).raise().call(g => g.select(\".domain\") //removes solid black axis bar\n      .remove()).call(g => g.selectAll(\".tick line\") //styles individual ticks\n      .attr(\"stroke-opacity\", 0.5)).call(g => g.selectAll(\".tick text\").attr(\"y\", 10) //todo?\n      .attr(\"opacity\", 0.5)); //TODO: enter & exit\n\n      svg.append(\"text\").text(thisScale.units).attr(\"class\", \"axisLabel smallTxt remove\").attr(\"x\", dimensions.width / 2).attr(\"y\", dimensions.height * (thisScale.yProportion + .07)).attr(\"text-anchor\", \"middle\").attr(\"opacity\", 0.5);\n    }); // const xAxis = axisBottom(generateScales(scales.smalls).x)\n    //   // .tickSize(-dimensions.height) //tick extends to entire height of svg\n    //   .tickValues(logic ? [-1, 0, 1] : null)\n    //   .tickFormat(logic ? x => scaleOrdinal([-1, 0, 1], [\"before\", \"now\", \"after\"])(x) : format('')); //gets rid of , for 1000s groupings\n    // svg\n    //   .select(\".x-axis\") //selects and replaces .x-axis\n    //   .style(\"transform\", `translateY(${dimensions.height}px)`)\n    //   .call(xAxis)\n    //   .raise()\n    // .call(g => g.select(\".domain\") //removes solid black axis bar\n    //   .remove())\n    // .call(g => g.selectAll(\".tick line\") //styles individual ticks\n    //   .attr(\"stroke-opacity\", 0.5))\n    //   // .attr(\"stroke-dasharray\", \"2,2\"))\n    // .call(g => g.selectAll(\".tick text\")\n    //   .attr(\"y\", 10) //todo?\n    //   .attr(\"opacity\", 0.5));\n    //   // .attr(\"font-size\", fontSize*.8)); //replace class \"x-axis\" w xAxis\n    //\n    //--drag behavior--//\n\n    const dragged = drag() // .on(\"start\", e => {\n    //   select(this).attr(\"stroke\", \"black\");\n    // })\n    .on(\"drag\", e => {\n      //todo\n      const dx = Math.round(generateScales(scales.smalls).xInverse(e.dx) * 100) / 100;\n      const dy = Math.round(yScaleInverse(e.dy) * 100) / 100;\n      const newNodes = [...data]; //always make a copy when updating array\n      //find array element in data with matching ID and set new x y coordinates\n\n      newNodes.find(n => n.id === e.subject.id).x += dx;\n      newNodes.find(n => n.id === e.subject.id).y += dy;\n      setData(newNodes);\n    }); //---draw links---//\n\n    const linker = linkHorizontal().source(link => link.source).target(link => link.target).x(n => generateScales(scales[n.scale]).x(logic ? logicScale(n.x) : n.x)).y(n => yScale(n.y));\n    svg.selectAll(\".link\").data(links).join(\"path\").raise().attr(\"class\", \"link pointer\").attr(\"d\", linker).attr(\"fill\", \"none\").attr(\"stroke\", n => n.color ? n.color : \"black\").attr(\"stroke-width\", n => n.width ? n.width : radius / 3).attr(\"stroke-opacity\", n => n.opacity ? n.opacity : 1).attr(\"stroke-dasharray\", n => n.dashed ? n.dashed : null).on(\"click\", (e, target) => {\n      setInfo({\n        position: [e.x, e.y],\n        target: target,\n        type: \"link\"\n      }); //displays line properties when clicked\n\n      e.stopPropagation();\n    }); //---draw points---//\n\n    svg.selectAll(\".node\").data(activeData.filter(d => d.inflectionSemantic !== \"cancelled\")).join(\"circle\").raise().attr(\"class\", \"node pointer\").attr(\"r\", n => n.radius ? n.radius : radius) //todo for accessibility\n    .attr(\"fill\", d => d.color ? d.color : \"black\") //if it has a color other than black, use that\n    .attr(\"opacity\", d => d.opacity ? d.opacity : 1).attr(\"cx\", d => generateScales(scales[d.scale]).x(logic ? logicScale(d.x) : d.x)).attr(\"cy\", d => yScale(d.y)).call(dragged).on(\"click\", (e, target) => {\n      if (toggle === \"cancelled\") {\n        const newNodes = [...data];\n        const node = newNodes.find(n => n.id === target.id);\n        node.inflectionSemantic = \"cancelled\";\n        setData(newNodes);\n      } else {\n        setInfo({\n          position: [e.x, e.y],\n          target: target\n        }); //displays node properties when clicked\n      }\n\n      e.stopPropagation(); //stops deselect when bg is clicked\n    }); //---initialize custom symbols---//\n\n    const cancelledSymbol = {\n      draw: (context, size) => {\n        let s = Math.sqrt(size) / 2;\n        context.moveTo(s, 0);\n        context.lineTo(s * 2, s);\n        context.lineTo(s, s * 2);\n        context.lineTo(0, s);\n        context.lineTo(-s, s * 2);\n        context.lineTo(-s * 2, s);\n        context.lineTo(-s, 0);\n        context.lineTo(-s * 2, -s);\n        context.lineTo(-s, -s * 2);\n        context.lineTo(0, -s);\n        context.lineTo(s, -s * 2);\n        context.lineTo(s * 2, -s);\n        context.closePath();\n      }\n    }; //---draw symbols---//\n\n    svg.selectAll(\".cancelled\").data(activeData.filter(d => d.inflectionSemantic === \"cancelled\")).join(\"path\").raise().attr(\"class\", \"cancelled pointer\").attr(\"d\", symbol(cancelledSymbol, radius * radius * 5)).attr(\"transform\", n => `translate(${generateScales(scales[n.scale]).x(n.x)}, ${yScale(n.y)})`).on(\"click\", (e, target) => {\n      if (toggle === \"cancelled\") {\n        const newNodes = [...data];\n        const node = newNodes.find(n => n.id === target.id);\n        delete node.inflectionSemantic;\n        setData(newNodes);\n      } else {\n        setInfo({\n          position: [e.x, e.y],\n          target: target\n        }); //displays node properties when clicked\n      }\n\n      e.stopPropagation();\n    }); // .attr(\"transform\", \"rotate(90)\");\n    //---draw labels---//\n\n    svg.selectAll(\".label\").data(activeData).join(\"text\").raise().attr(\"class\", \"label\").text(node => showLabel ? node.name : node.id).attr(\"x\", node => generateScales(scales[node.scale]).x(logic ? logicScale(node.x) : node.x)).attr(\"y\", node => yScale(node.y + (rangeY > breakpoint ? rangeY * .06 : breakpoint / 5))) //vertical offset. see scales\n    .attr(\"text-anchor\", \"middle\"); // .attr(\"font-size\", fontSize);\n    //---zoom---//\n\n    const zoomBehavior = zoom().scaleExtent([0.25, 5]) //can zoom 2x smaller and 5x bigger\n    .translateExtent([[-100, 0], [dimensions.width + 100, dimensions.height]]) //limits how far graph can pan\n    .on(\"zoom\", e => {\n      const zoomState = e.transform; //returns zoom transformations as an object\n\n      setCurrentZoomState(zoomState);\n    });\n    svg.on(\"click\", () => setInfo(null));\n    svg.call(zoomBehavior);\n  }, [data, setData, intervals, scales, activeLayer, activeData, dimensions, links, logic, currentZoomState, setInfo, radius, showLabel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapperRef,\n    className: \"svgWrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"graphic\",\n      ref: svgRef,\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"cancelled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Graphic, \"/KiWkGO4xuCDaFbcDOaAf23vnZg=\", false, function () {\n  return [useResizeObserver];\n});\n\n_c = Graphic;\n;\nexport default Graphic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graphic\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Graphic.js"],"names":["React","useState","useEffect","useRef","select","scaleLinear","scaleOrdinal","axisBottom","linkHorizontal","format","drag","zoom","min","max","symbol","symbols","useResizeObserver","generateLinks","Graphic","data","setData","activeLayer","intervals","setIntervals","radius","info","setInfo","showLabel","toggle","scales","setScales","activeData","filter","d","layer","logic","isNaN","x","svgRef","wrapperRef","dimensions","currentZoomState","setCurrentZoomState","links","svg","current","logicScale","unknown","breakpoint","xMin","map","xMax","yMin","y","yMax","rangeX","rangeY","generateScales","currentScale","domain","range","width","height","xInverse","yInverse","xScale","yScale","xScaleInverse","yScaleInverse","newXScale","rescaleX","smalls","selectAll","remove","length","join","attr","n","scale","start","yStart","end","yEnd","opacity","color","on","e","target","position","type","stopPropagation","Object","keys","thisScale","xAxis","tickFormat","append","style","yProportion","call","raise","g","text","units","dragged","dx","Math","round","dy","newNodes","find","id","subject","linker","source","link","dashed","inflectionSemantic","node","cancelledSymbol","draw","context","size","s","sqrt","moveTo","lineTo","closePath","name","zoomBehavior","scaleExtent","translateExtent","zoomState","transform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { select, scaleLinear, scaleOrdinal, axisBottom, linkHorizontal, format, drag, zoom, min, max, symbol, symbols } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport generateLinks from \"./generateLinks\";\n\nfunction Graphic({data, setData, activeLayer, intervals, setIntervals, radius, info, setInfo, showLabel, toggle, scales, setScales}) {\n\n  //all data is passed down from and synced to App.js\n  const activeData = activeLayer ? data.filter(d => d.layer === activeLayer) : data;\n\n  //is logical operators active?\n  const logic = isNaN(data[0].x); //Todo\n\n  //initialize reference object to pass to svg in React Dom\n  const svgRef = useRef();\n  //svg wrapped in div bc otherwise resize observer callback won't work\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState();\n\n  //initialize links between nodes\n  const links = generateLinks(activeData);\n\n  //all d3 shennanigans goes in this hook. called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current); //\"svg\" is the current version of svgRef data\n    //prevents crashing when useResizeObserver returns null before svg is rendered\n    if (!dimensions) return;\n\n    //---scales---//\n\n    //if time matches logical operator keyword, translate into index values, then map\n    const logicScale = scaleOrdinal([\"before\", \"now\", \"after\"], [-1, 0, 1]).unknown(0);\n\n    const breakpoint = 5;\n\n\n    const xMin = min(data.map(({x}) => logic ? logicScale(x) : x));\n    const xMax = max(data.map(({x}) => logic ? logicScale(x) : x));\n    const yMin = min(data.map(({y}) => y));\n    const yMax = max(data.map(({y}) => y));\n    const rangeX = xMax-xMin; //0 is minX, 1 is maxX (reference findMinMax)\n    const rangeY = yMax-yMin;\n\n\n    //TODO: scaleTime()\n\n    //for multiple scales, generate a new xScale for each x/y min - x/y max\n    /*\n    - Allow users to specify scale. x&y min max and units\n    - for each scale, generateScale()\n    */\n\n    function generateScales(currentScale) {\n\n      const x = scaleLinear()\n        .domain([currentScale.min, currentScale.max]) //scaleLinear takes domain (data values) & maps onto range (screen pixel values)\n        .range([0, dimensions.width])\n      const y = scaleLinear()\n        //if difference in y vaules greater than 5, resize to min and max\n        .domain((rangeY>breakpoint) ? [yMin, yMax] : [yMin-breakpoint, yMax+breakpoint])\n        .range([0, dimensions.height])\n      const xInverse = scaleLinear()\n        .domain([-dimensions.width, dimensions.width])\n        .range([-(currentScale.max-currentScale.min), (currentScale.max-currentScale.min)]) //maxRangeX-minRangeX gives section of x values displayed onscreen\n      const yInverse = scaleLinear()\n        .domain([-dimensions.height, dimensions.height])\n        .range((rangeY>breakpoint) ? [-rangeY, rangeY] : [-breakpoint*5, breakpoint*5])\n\n\n      return {\n        x, y, xInverse, yInverse\n      };\n    }\n\n    //scales values to screen pixels\n\n    const xScale = scaleLinear()\n      .domain([xMin, xMax]) //scaleLinear takes domain (data values) & maps onto range (screen pixel values)\n      .range([0, dimensions.width]);\n    const yScale = scaleLinear()\n      //if difference in y vaules greater than 5, resize to min and max\n      .domain((rangeY>breakpoint) ? [yMin, yMax] : [yMin-breakpoint, yMax+breakpoint])\n      .range([0, dimensions.height]);\n    //inverse scales for drag behavior\n    const xScaleInverse = scaleLinear()\n      .domain([-dimensions.width, dimensions.width])\n      .range([-rangeX, rangeX]); //maxRangeX-minRangeX gives section of x values displayed onscreen\n    const yScaleInverse = scaleLinear()\n      .domain([-dimensions.height, dimensions.height])\n      .range((rangeY>breakpoint) ? [-rangeY, rangeY] : [-breakpoint*5, breakpoint*5]);\n\n    //todo\n    if (currentZoomState) {\n      const newXScale = currentZoomState.rescaleX(generateScales(scales.smalls).x); //zoom state comes w methods for transformations\n      generateScales(scales.smalls).x.domain(newXScale.domain());\n      generateScales(scales.smalls).xInverse.range([\n        -(newXScale.domain()[1]-newXScale.domain()[0]),\n        (newXScale.domain()[1]-newXScale.domain()[0])\n      ]);\n\n    };\n\n    //todo: put in exit function\n    svg\n      .selectAll(\".remove\")\n      .remove();\n      \n    //---draw intervals---//\n    if (intervals.length) {\n      svg\n      .selectAll(\".intervals\")\n      .data(intervals)\n      .join(\"rect\")\n      .attr(\"class\", \"intervals\")\n      .attr(\"x\", n => generateScales(scales[n.scale]).x(n.start))\n      // .attr(\"y\", n => n.yStart ? yScale(n.yStart) : yScale(minMax[2]))\n      .attr(\"y\", n => n.yStart ? yScale(n.yStart) : 0) //todo\n      .attr(\"width\", n => generateScales(scales[n.scale]).x(n.end)-generateScales(scales[n.scale]).x(n.start))\n      .attr(\"height\", n => {\n        if (n.yStart & n.yEnd) {\n          return (yScale(n.yEnd)-yScale(n.yStart))\n        } else if (n.yStart) {\n          return (yScale(yMax+10)-yScale(n.yStart))\n        } else {\n          return (yScale(yMax+10)) //todo\n          // return (yScale(minMax[3])-yScale(minMax[2]))\n        }})\n      .attr(\"opacity\", d => d.opacity ? d.opacity : 0.5)\n      .attr(\"fill\", d => d.color ? d.color : \"#999\")\n      .on(\"click\", (e, target) => {\n        //displays line properties when clicked\n        setInfo({position: [e.x, e.y], target: target, type: \"interval\"});  //todo: set info to null when clicking again\n        e.stopPropagation();\n      });\n    }\n\n    //---draw bottom axis---//\n\n    //for each active scale, generate an x axis and place on the screen according to proportion of screen height/width as defined in JSON\n    Object.keys(scales).map(scale => {\n\n      const thisScale = scales[scale];\n\n      const xAxis = axisBottom(generateScales(thisScale).x)\n      .tickFormat(format(''));\n\n      svg\n        .append(\"g\") //todo\n        .attr(\"class\", \"remove\")\n        .style(\"transform\", `translateY(${dimensions.height*thisScale.yProportion}px)`)\n        .call(xAxis)\n        .raise()\n        .call(g => g.select(\".domain\") //removes solid black axis bar\n          .remove())\n        .call(g => g.selectAll(\".tick line\") //styles individual ticks\n          .attr(\"stroke-opacity\", 0.5))\n        .call(g => g.selectAll(\".tick text\")\n          .attr(\"y\", 10) //todo?\n          .attr(\"opacity\", 0.5));\n\n      //TODO: enter & exit\n      svg\n        .append(\"text\")\n        .text(thisScale.units)\n        .attr(\"class\", \"axisLabel smallTxt remove\")\n        .attr(\"x\", dimensions.width/2)\n        .attr(\"y\", dimensions.height*(thisScale.yProportion+.07))\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"opacity\", 0.5);\n\n      });\n\n\n    // const xAxis = axisBottom(generateScales(scales.smalls).x)\n    //   // .tickSize(-dimensions.height) //tick extends to entire height of svg\n    //   .tickValues(logic ? [-1, 0, 1] : null)\n    //   .tickFormat(logic ? x => scaleOrdinal([-1, 0, 1], [\"before\", \"now\", \"after\"])(x) : format('')); //gets rid of , for 1000s groupings\n\n    // svg\n    //   .select(\".x-axis\") //selects and replaces .x-axis\n    //   .style(\"transform\", `translateY(${dimensions.height}px)`)\n    //   .call(xAxis)\n    //   .raise()\n      // .call(g => g.select(\".domain\") //removes solid black axis bar\n      //   .remove())\n      // .call(g => g.selectAll(\".tick line\") //styles individual ticks\n      //   .attr(\"stroke-opacity\", 0.5))\n      //   // .attr(\"stroke-dasharray\", \"2,2\"))\n      // .call(g => g.selectAll(\".tick text\")\n      //   .attr(\"y\", 10) //todo?\n      //   .attr(\"opacity\", 0.5));\n      //   // .attr(\"font-size\", fontSize*.8)); //replace class \"x-axis\" w xAxis\n    //\n\n    //--drag behavior--//\n    const dragged = drag()\n      // .on(\"start\", e => {\n      //   select(this).attr(\"stroke\", \"black\");\n      // })\n      .on(\"drag\", e => {\n        //todo\n        const dx = Math.round(generateScales(scales.smalls).xInverse(e.dx)*100)/100;\n        const dy = Math.round(yScaleInverse(e.dy)*100)/100;\n        const newNodes = [...data]; //always make a copy when updating array\n        //find array element in data with matching ID and set new x y coordinates\n        newNodes.find(n => n.id === e.subject.id).x += dx;\n        newNodes.find(n => n.id === e.subject.id).y += dy;\n        setData(newNodes);\n      });\n\n    //---draw links---//\n    const linker = linkHorizontal()\n      .source(link => link.source)\n      .target(link => link.target)\n      .x(n => generateScales(scales[n.scale]).x(logic ? logicScale(n.x) : n.x))\n      .y(n => yScale(n.y));\n\n    svg\n      .selectAll(\".link\")\n      .data(links)\n      .join(\"path\")\n      .raise()\n      .attr(\"class\", \"link pointer\")\n      .attr(\"d\", linker)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", n => n.color? n.color : \"black\")\n      .attr(\"stroke-width\", n => n.width ? n.width : radius/3)\n      .attr(\"stroke-opacity\", n => n.opacity ? n.opacity : 1)\n      .attr(\"stroke-dasharray\", n => n.dashed ? n.dashed : null)\n      .on(\"click\", (e, target) => {\n        setInfo({position: [e.x, e.y], target: target, type: \"link\"}); //displays line properties when clicked\n        e.stopPropagation();\n      });\n\n\n    //---draw points---//\n    svg\n      .selectAll(\".node\")\n      .data(activeData.filter(d => d.inflectionSemantic!==\"cancelled\"))\n      .join(\"circle\")\n      .raise()\n      .attr(\"class\", \"node pointer\")\n      .attr(\"r\", n => n.radius? n.radius : radius) //todo for accessibility\n      .attr(\"fill\", d => d.color ? d.color : \"black\") //if it has a color other than black, use that\n      .attr(\"opacity\", d => d.opacity ? d.opacity : 1)\n      .attr(\"cx\", d => generateScales(scales[d.scale]).x(logic ? logicScale(d.x) : d.x))\n      .attr(\"cy\", d => yScale(d.y))\n      .call(dragged)\n      .on(\"click\", (e, target) => {\n        if (toggle===\"cancelled\") {\n          const newNodes = [...data];\n          const node = newNodes.find(n => n.id === target.id);\n          node.inflectionSemantic = \"cancelled\";\n          setData(newNodes);\n        } else {\n          setInfo({position: [e.x, e.y], target: target}); //displays node properties when clicked\n        }\n        e.stopPropagation(); //stops deselect when bg is clicked\n      });\n\n    //---initialize custom symbols---//\n    const cancelledSymbol = {\n      draw: (context, size) => {\n        let s = Math.sqrt(size)/2;\n            context.moveTo(s,0);\n            context.lineTo(s*2,s);\n            context.lineTo(s,s*2);\n            context.lineTo(0,s);\n            context.lineTo(-s,s*2);\n            context.lineTo(-s*2,s);\n            context.lineTo(-s,0);\n            context.lineTo(-s*2,-s);\n            context.lineTo(-s,-s*2);\n            context.lineTo(0,-s);\n            context.lineTo(s,-s*2);\n            context.lineTo(s*2,-s);\n            context.closePath();\n      }\n    }\n\n    //---draw symbols---//\n    svg\n      .selectAll(\".cancelled\")\n      .data(activeData.filter(d => d.inflectionSemantic===\"cancelled\"))\n      .join(\"path\")\n      .raise()\n      .attr(\"class\", \"cancelled pointer\")\n      .attr(\"d\", symbol(cancelledSymbol, radius*radius*5))\n      .attr(\"transform\", n => `translate(${generateScales(scales[n.scale]).x(n.x)}, ${yScale(n.y)})`)\n      .on(\"click\", (e, target) => {\n        if (toggle===\"cancelled\") {\n          const newNodes = [...data];\n          const node = newNodes.find(n => n.id === target.id);\n          delete node.inflectionSemantic;\n          setData(newNodes);\n        } else {\n          setInfo({position: [e.x, e.y], target: target}); //displays node properties when clicked\n        }\n        e.stopPropagation();\n      });\n      // .attr(\"transform\", \"rotate(90)\");\n\n\n    //---draw labels---//\n    svg\n      .selectAll(\".label\")\n      .data(activeData)\n      .join(\"text\")\n      .raise()\n      .attr(\"class\", \"label\")\n      .text(node => showLabel ? node.name : node.id)\n      .attr(\"x\", node => generateScales(scales[node.scale]).x(logic ? logicScale(node.x) : node.x))\n      .attr(\"y\", node => yScale(node.y + (rangeY>breakpoint ? rangeY*.06 : breakpoint/5))) //vertical offset. see scales\n      .attr(\"text-anchor\", \"middle\");\n      // .attr(\"font-size\", fontSize);\n\n\n    //---zoom---//\n    const zoomBehavior = zoom()\n      .scaleExtent([0.25, 5]) //can zoom 2x smaller and 5x bigger\n      .translateExtent([[-100, 0], [dimensions.width+100, dimensions.height]]) //limits how far graph can pan\n      .on(\"zoom\", e => {\n        const zoomState = e.transform; //returns zoom transformations as an object\n        setCurrentZoomState(zoomState);\n      });\n\n    svg.on(\"click\", () => setInfo(null));\n    svg.call(zoomBehavior);\n\n  }, [data, setData, intervals, scales, activeLayer, activeData, dimensions, links, logic, currentZoomState, setInfo, radius, showLabel]);\n\n  return (\n    <div ref={wrapperRef} className=\"svgWrapper\">\n      <svg id=\"graphic\" ref={svgRef}>\n        <g className=\"cancelled\" />\n      </svg>\n    </div>\n  );\n};\n\n\nexport default Graphic;\n"]},"metadata":{},"sourceType":"module"}