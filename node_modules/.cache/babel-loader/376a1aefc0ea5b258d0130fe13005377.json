{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewPointForm.js\";\nimport React from 'react';\n/*\n   UI for adding new points.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass NewPointForm extends React.Component {\n  //controlled component, meaning React is the \"single source of truth\"\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: '',\n      xValue: '',\n      yValue: '',\n      color: '',\n      endPoint: false,\n      targets: '',\n      lineColor: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    //if it's a checkbox, evaluate if checked. otherwise, evaluate the value\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n    ;\n    const name = e.target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    const nodes = this.props.src.nodes;\n    const tempx = parseFloat(e.target.xValue.value); //if y pos specified, convert to float. otherwise, return null\n\n    const tempy = e.target.yValue.value ? parseFloat(e.target.yValue.value) : null; //error handling. btw, isNan(null) === false\n\n    if (isNaN(tempx) && isNaN(tempy)) {\n      alert(\"Make sure Time and y Position are numbers!\");\n    } else if (isNaN(tempx)) {\n      alert(\"Make sure Time is a number!\");\n    } else if (isNaN(tempy)) {\n      alert(\"Make sure y Position is a number!\");\n    } else {\n      //send to server\n      const node = {\n        \"id\": nodes.length,\n        //todo\n        \"name\": e.target.label.value,\n        \"x\": tempx,\n        \"y\": e.target.yValue.value ? tempy : nodes[nodes.length - 1].y,\n        ...(e.target.color.value && {\n          \"color\": e.target.color.value\n        }),\n        ...(!this.state.endPoint ? //if not an endpoint AND has specified IDs, turn IDs into array\n        e.target.targets.value ? {\n          \"target\": e.target.targets.value.split(',').map(Number)\n        } : null //otherwise, return null\n        : {\n          \"target\": null\n        } //if endpoint, return target: null\n        ),\n        ...(!this.state.endPoint && e.target.lineColor.value && {\n          \"lineColor\": e.target.lineColor.value\n        })\n      };\n      const newNodes = [...nodes, node];\n      const newSrc = Object.assign({}, this.props.src, {\n        nodes: [...nodes, node]\n      });\n      console.log(newSrc); // this.props.setNodes(newNodes);\n    }\n\n    e.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Label\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red\",\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"label\",\n          placeholder: \"any unicode characters\",\n          value: this.state.label,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Time\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red\",\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"xValue\",\n          placeholder: \"numbers only\",\n          value: this.state.xValue,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"y Position\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"yValue\",\n          placeholder: \"numbers only\",\n          value: this.state.yValue,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Color\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"color\",\n          placeholder: \"blue, #4DA6FF, etc.\",\n          value: this.state.color,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End point?\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"endPoint\",\n          checked: this.state.endPoint,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), !this.state.endPoint && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Target(s)\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"targets\",\n            placeholder: \"point IDs ie: 4, 5\",\n            value: this.state.targets,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Line Color\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lineColor\",\n            placeholder: \"blue, #4DA6FF, etc.\",\n            value: this.state.lineColor,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default NewPointForm;","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewPointForm.js"],"names":["React","NewPointForm","Component","constructor","props","state","label","xValue","yValue","color","endPoint","targets","lineColor","handleChange","bind","handleSubmit","e","value","target","type","checked","name","setState","nodes","src","tempx","parseFloat","tempy","isNaN","alert","node","length","y","split","map","Number","newNodes","newSrc","Object","assign","console","log","preventDefault","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;;;;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AACzC;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,MAAM,EAAE,EAHG;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,QAAQ,EAAE,KALC;AAMXC,MAAAA,OAAO,EAAE,EANE;AAOXC,MAAAA,SAAS,EAAE;AAPA,KAAb;AAUA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACG,CAAD,EAAI;AACd;AACA,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,IAAT,KAAkB,UAAlB,GAA+BH,CAAC,CAACE,MAAF,CAASE,OAAxC,GAAkDJ,CAAC,CAACE,MAAF,CAASD,KAAzE;AAA+E;AAC/E,UAAMI,IAAI,GAAGL,CAAC,CAACE,MAAF,CAASG,IAAtB;AAEA,SAAKC,QAAL,CAAc;AACZ,OAACD,IAAD,GAAQJ;AADI,KAAd;AAGD;;AAEDF,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,UAAMO,KAAK,GAAG,KAAKnB,KAAL,CAAWoB,GAAX,CAAeD,KAA7B;AAEA,UAAME,KAAK,GAAGC,UAAU,CAACV,CAAC,CAACE,MAAF,CAASX,MAAT,CAAgBU,KAAjB,CAAxB,CAHc,CAId;;AACA,UAAMU,KAAK,GAAGX,CAAC,CAACE,MAAF,CAASV,MAAT,CAAgBS,KAAhB,GAAwBS,UAAU,CAACV,CAAC,CAACE,MAAF,CAASV,MAAT,CAAgBS,KAAjB,CAAlC,GAA4D,IAA1E,CALc,CAOd;;AACA,QAAIW,KAAK,CAACH,KAAD,CAAL,IAAgBG,KAAK,CAACD,KAAD,CAAzB,EAAkC;AAChCE,MAAAA,KAAK,CAAC,4CAAD,CAAL;AACD,KAFD,MAEO,IAAID,KAAK,CAACH,KAAD,CAAT,EAAkB;AACvBI,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACD,KAFM,MAEA,IAAID,KAAK,CAACD,KAAD,CAAT,EAAkB;AACvBE,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACD,KAFM,MAEA;AACL;AACA,YAAMC,IAAI,GAAG;AACX,cAAMP,KAAK,CAACQ,MADD;AACS;AACpB,gBAAQf,CAAC,CAACE,MAAF,CAASZ,KAAT,CAAeW,KAFZ;AAGX,aAAIQ,KAHO;AAIX,aAAKT,CAAC,CAACE,MAAF,CAASV,MAAT,CAAgBS,KAAhB,GAAwBU,KAAxB,GAAgCJ,KAAK,CAACA,KAAK,CAACQ,MAAN,GAAa,CAAd,CAAL,CAAsBC,CAJhD;AAKX,YAAIhB,CAAC,CAACE,MAAF,CAAST,KAAT,CAAeQ,KAAf,IAAwB;AAAC,mBAASD,CAAC,CAACE,MAAF,CAAST,KAAT,CAAeQ;AAAzB,SAA5B,CALW;AAMX,YACI,CAAC,KAAKZ,KAAL,CAAWK,QAAZ,GACA;AACAM,QAAAA,CAAC,CAACE,MAAF,CAASP,OAAT,CAAiBM,KAAjB,GAAyB;AAAC,oBAAUD,CAAC,CAACE,MAAF,CAASP,OAAT,CAAiBM,KAAjB,CAAuBgB,KAAvB,CAA6B,GAA7B,EAAkCC,GAAlC,CAAsCC,MAAtC;AAAX,SAAzB,GAAqF,IAFrF,CAE0F;AAF1F,UAGE;AAAC,oBAAU;AAAX,SAJN,CAIuB;AAJvB,SANW;AAYX,YAAK,CAAC,KAAK9B,KAAL,CAAWK,QAAZ,IAAwBM,CAAC,CAACE,MAAF,CAASN,SAAT,CAAmBK,KAA5C,IAAsD;AAAC,uBAAaD,CAAC,CAACE,MAAF,CAASN,SAAT,CAAmBK;AAAjC,SAA1D;AAZW,OAAb;AAcA,YAAMmB,QAAQ,GAAG,CAAC,GAAGb,KAAJ,EAAWO,IAAX,CAAjB;AACA,YAAMO,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKnC,KAAL,CAAWoB,GAA7B,EAAkC;AAACD,QAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ,EAAWO,IAAX;AAAR,OAAlC,CAAf;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAlBK,CAmBL;AACD;;AACDrB,IAAAA,CAAC,CAAC0B,cAAF;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,SAAS,EAAC,IAAhB;AAAqB,MAAA,QAAQ,EAAE,KAAK5B,YAApC;AAAA,8BACE;AAAA,yCACO;AAAM,UAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,WAAW,EAAC,wBAFd;AAGE,UAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,KAHpB;AAIE,UAAA,QAAQ,EAAE,KAAKO,YAJjB;AAKE,UAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUU;AAAA;AAAA;AAAA;AAAA,cAVV,eAWE;AAAA,wCACM;AAAM,UAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADN,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,WAAW,EAAC,cAHd;AAIE,UAAA,KAAK,EAAE,KAAKR,KAAL,CAAWE,MAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKM,YALjB;AAME,UAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAqBU;AAAA;AAAA;AAAA;AAAA,cArBV,eAsBE;AAAA,8CAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,WAAW,EAAC,cAHd;AAIE,UAAA,KAAK,EAAE,KAAKR,KAAL,CAAWG,MAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKK;AALjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,eA+BU;AAAA;AAAA;AAAA;AAAA,cA/BV,eAgCE;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,qBAHd;AAIE,UAAA,KAAK,EAAE,KAAKR,KAAL,CAAWI,KAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKI;AALjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCF,eAyCU;AAAA;AAAA;AAAA;AAAA,cAzCV,eA0CE;AAAA,8CAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,OAAO,EAAE,KAAKR,KAAL,CAAWK,QAHtB;AAIE,UAAA,QAAQ,EAAE,KAAKG;AAJjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA1CF,eAkDU;AAAA;AAAA;AAAA;AAAA,cAlDV,EAmDG,CAAC,KAAKR,KAAL,CAAWK,QAAZ,iBACC;AAAA,gCACE;AAAA,+CAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,SAFP;AAGE,YAAA,WAAW,EAAC,oBAHd;AAIE,YAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM,OAJpB;AAKE,YAAA,QAAQ,EAAE,KAAKE;AALjB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUU;AAAA;AAAA;AAAA;AAAA,gBAVV,eAWE;AAAA,gDAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,WAFP;AAGE,YAAA,WAAW,EAAC,qBAHd;AAIE,YAAA,KAAK,EAAE,KAAKR,KAAL,CAAWO,SAJpB;AAKE,YAAA,QAAQ,EAAE,KAAKC;AALjB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAoBU;AAAA;AAAA;AAAA;AAAA,gBApBV;AAAA,sBApDJ,eA2EE;AAAA;AAAA;AAAA;AAAA,cA3EF,eA4EE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cA5EF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgFD;;AAnJwC;;AAoJ1C;AAED,eAAeZ,YAAf","sourcesContent":["import React from 'react';\n\n/*\n   UI for adding new points.\n*/\n\nclass NewPointForm extends React.Component {\n  //controlled component, meaning React is the \"single source of truth\"\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: '',\n      xValue: '',\n      yValue: '',\n      color: '',\n      endPoint: false,\n      targets: '',\n      lineColor: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    //if it's a checkbox, evaluate if checked. otherwise, evaluate the value\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;;\n    const name = e.target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    const nodes = this.props.src.nodes;\n\n    const tempx = parseFloat(e.target.xValue.value);\n    //if y pos specified, convert to float. otherwise, return null\n    const tempy = e.target.yValue.value ? parseFloat(e.target.yValue.value) : null;\n\n    //error handling. btw, isNan(null) === false\n    if (isNaN(tempx) && isNaN(tempy)) {\n      alert(\"Make sure Time and y Position are numbers!\");\n    } else if (isNaN(tempx)) {\n      alert(\"Make sure Time is a number!\");\n    } else if (isNaN(tempy)) {\n      alert(\"Make sure y Position is a number!\");\n    } else {\n      //send to server\n      const node = {\n        \"id\": nodes.length, //todo\n        \"name\": e.target.label.value,\n        \"x\":tempx,\n        \"y\": e.target.yValue.value ? tempy : nodes[nodes.length-1].y,\n        ...(e.target.color.value && {\"color\": e.target.color.value}),\n        ...(\n            !this.state.endPoint ?\n            //if not an endpoint AND has specified IDs, turn IDs into array\n            e.target.targets.value ? {\"target\": e.target.targets.value.split(',').map(Number)} : null //otherwise, return null\n            : {\"target\": null} //if endpoint, return target: null\n          ),\n        ...((!this.state.endPoint && e.target.lineColor.value) && {\"lineColor\": e.target.lineColor.value})\n      };\n      const newNodes = [...nodes, node];\n      const newSrc = Object.assign({}, this.props.src, {nodes: [...nodes, node]});\n      console.log(newSrc);\n      // this.props.setNodes(newNodes);\n    }\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <form className=\"ui\" onSubmit={this.handleSubmit}>\n        <label>\n          Label<span className=\"red\">* </span>\n          <input type=\"text\"\n            name=\"label\"\n            placeholder=\"any unicode characters\"\n            value={this.state.label}\n            onChange={this.handleChange}\n            required\n          />\n        </label><br/>\n        <label>\n          Time<span className=\"red\">* </span>\n          <input\n            type=\"text\"\n            name=\"xValue\"\n            placeholder=\"numbers only\"\n            value={this.state.xValue}\n            onChange={this.handleChange}\n            required\n          />\n        </label><br/>\n        <label>\n          y Position\n          <input\n            type=\"text\"\n            name=\"yValue\"\n            placeholder=\"numbers only\"\n            value={this.state.yValue}\n            onChange={this.handleChange}\n          />\n        </label><br/>\n        <label>\n          Color\n          <input\n            type=\"text\"\n            name=\"color\"\n            placeholder=\"blue, #4DA6FF, etc.\"\n            value={this.state.color}\n            onChange={this.handleChange}\n          />\n        </label><br/>\n        <label>\n          End point?\n          <input\n            type=\"checkbox\"\n            name=\"endPoint\"\n            checked={this.state.endPoint}\n            onChange={this.handleChange}\n          />\n        </label><br/>\n        {!this.state.endPoint &&\n          <>\n            <label>\n              Target(s)\n              <input\n                type=\"text\"\n                name=\"targets\"\n                placeholder=\"point IDs ie: 4, 5\"\n                value={this.state.targets}\n                onChange={this.handleChange}\n              />\n            </label><br/>\n            <label>\n              Line Color\n              <input\n                type=\"text\"\n                name=\"lineColor\"\n                placeholder=\"blue, #4DA6FF, etc.\"\n                value={this.state.lineColor}\n                onChange={this.handleChange}\n              />\n            </label><br/>\n          </>\n        }\n        <br/>\n        <input type=\"submit\" value=\"Submit\"/>\n      </form>\n    );\n  }\n};\n\nexport default NewPointForm;\n"]},"metadata":{},"sourceType":"module"}