{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./data.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewPointForm from \"./components/NewPointForm\";\nimport NewIntervalForm from \"./components/NewIntervalForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\"; // import ImportDataForm from \"./components/ImportDataForm\";\n\nimport ToolsBar from \"./components/ToolsBar\";\nimport Layers from \"./components/Layers\";\nimport Scrubber from \"./components/Scrubber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Legend() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui absolute dropdown rightPos\",\n    children: [\"Legend\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: 'black'\n          },\n          children: \"\\u2003\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), \" Hank\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: 'red'\n          },\n          children: \"\\u2003\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), \" Peggy\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: '#4DA6FF'\n          },\n          children: \"\\u2003\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), \" Bobby\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Legend;\n\nfunction Certainty(props) {\n  console.log(props.target);\n\n  const handleSubmit = e => {\n    //generate new interval\n    const interval = {\n      \"id\": intervals.length ? intervals[intervals.length - 1].id + 1 : 0,\n      \"name\": label,\n      \"start\": parseFloat(start),\n      //cases where start > end?\n      \"end\": parseFloat(end),\n      ...(yStart && {\n        \"yStart\": yStart\n      }),\n      ...(yEnd && {\n        \"yEnd\": yEnd\n      }),\n      ...(color && {\n        \"color\": color\n      }),\n      ...(opacity && {\n        \"opacity\": opacity\n      })\n    };\n    const newIntervals = [...intervals, interval];\n    setIntervals(newIntervals);\n    setToggle(null);\n    e.preventDefault();\n  };\n\n  const handleClose = e => {\n    setToggle(null);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"right\",\n      onClick: handleClose,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Label\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"red\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"any unicode characters\",\n        value: label,\n        onChange: e => setLabel(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Time Start\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"red\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"#s, dates, logical operators\",\n        value: start,\n        onChange: e => setStart(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Time End\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"red\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"#s, dates, logical operators\",\n        value: end,\n        onChange: e => setEnd(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Y Start\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"#s, dates, logical operators\",\n        value: yStart,\n        onChange: e => setYStart(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Y End\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"#s, dates, logical operators\",\n        value: yEnd,\n        onChange: e => setYEnd(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Color\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"blue, #4DA6FF, etc.\",\n        value: color,\n        onChange: e => setColor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Opacity\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"0 (transparent) - 1 (opaque)\",\n        value: opacity,\n        onChange: e => setOpacity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Certainty;\n\nfunction App() {\n  _s();\n\n  //blank ChronoJSON template\n  const nullData = {\n    \"imgs\": [],\n    \"nodes\": [[]],\n    \"intervals\": []\n  }; //user defined\n\n  const radius = 5; //for the entire ChronoJSON\n\n  const [src, setSrc] = useState(Data); //for ChronoJSON history\n\n  const [history, setHistory] = useState([]); //for toggling the active data as used by scrubber\n\n  const [activeData, setActiveData] = useState(0); //for toggling the active layer\n\n  const [activeLayer, setActiveLayer] = useState(); //pertaining to datapoints only\n\n  const [data, setData] = useState(src.nodes[activeData]); //pertaining to intervals only\n\n  const [intervals, setIntervals] = useState(src.intervals); //pertaining to scales only\n\n  const [scales, setScales] = useState(src.scales); //toggles datapoint IDs vs labels\n\n  const [showLabel, setShowLabel] = useState(true); //UI window toggles\n\n  const [toggle, setToggle] = useState(); //UI info boxes for points, lines, etc.\n\n  const [info, setInfo] = useState(); //Inflection info\n\n  const [inflectTarget, setInflectTarget] = useState();\n  /*\n    TODO:\n    - for piecewise timeline, make function that generates different graphics\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToolsBar, {\n      toggle: toggle,\n      setToggle: setToggle,\n      data: data,\n      showLabel: showLabel,\n      setShowLabel: setShowLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), toggle === \"scrubber\" && /*#__PURE__*/_jsxDEV(Scrubber, {\n      activeData: activeData,\n      setActiveData: setActiveData,\n      src: src,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 31\n    }, this), toggle === \"addPoint\" && /*#__PURE__*/_jsxDEV(NewPointForm, {\n      data: data,\n      setData: setData,\n      setToggle: setToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 31\n    }, this), toggle === \"addInterval\" && /*#__PURE__*/_jsxDEV(NewIntervalForm, {\n      intervals: intervals,\n      setIntervals: setIntervals,\n      setToggle: setToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 34\n    }, this), toggle === \"save\" && /*#__PURE__*/_jsxDEV(ExportDataForm, {\n      src: src,\n      data: data,\n      activeData: activeData,\n      setToggle: setToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 27\n    }, this), toggle === \"legend\" && /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }, this), toggle === \"layers\" && /*#__PURE__*/_jsxDEV(Layers, {\n      activeLayer: activeLayer,\n      setActiveLayer: setActiveLayer,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }, this), \"// \", toggle === \"certainty\" && /*#__PURE__*/_jsxDEV(Certainty, {\n      target: inflectTarget\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      className: \"container fullHeight\",\n      children: [data.length ? /*#__PURE__*/_jsxDEV(Graphic, {\n        data: data,\n        setData: setData,\n        intervals: intervals,\n        setIntervals: setIntervals,\n        radius: radius,\n        info: info,\n        setInfo: setInfo,\n        setInflectTarget: setInflectTarget,\n        showLabel: showLabel,\n        activeLayer: activeLayer,\n        toggle: toggle,\n        scales: scales,\n        setScales: setScales\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexCenter\",\n        children: [\"Upload data or \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setToggle(\"addPoint\"),\n          children: \"Add new point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this), src.imgs.length > 0 && /*#__PURE__*/_jsxDEV(Image, {\n        urls: src.imgs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), info && /*#__PURE__*/_jsxDEV(InfoBox, {\n      info: info,\n      setInfo: setInfo,\n      data: data,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"UX7yc62I+5yWjZNAkUNxSTqrtrM=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Legend\");\n$RefreshReg$(_c2, \"Certainty\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js"],"names":["React","useState","Data","Graphic","Image","NewPointForm","NewIntervalForm","InfoBox","ExportDataForm","ToolsBar","Layers","Scrubber","Legend","backgroundColor","Certainty","props","console","log","target","handleSubmit","e","interval","intervals","length","id","label","parseFloat","start","end","yStart","yEnd","color","opacity","newIntervals","setIntervals","setToggle","preventDefault","handleClose","setLabel","value","setStart","setEnd","setYStart","setYEnd","setColor","setOpacity","App","nullData","radius","src","setSrc","history","setHistory","activeData","setActiveData","activeLayer","setActiveLayer","data","setData","nodes","scales","setScales","showLabel","setShowLabel","toggle","info","setInfo","inflectTarget","setInflectTarget","imgs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./data.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewPointForm from \"./components/NewPointForm\";\nimport NewIntervalForm from \"./components/NewIntervalForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\";\n// import ImportDataForm from \"./components/ImportDataForm\";\nimport ToolsBar from \"./components/ToolsBar\";\nimport Layers from \"./components/Layers\";\nimport Scrubber from \"./components/Scrubber\"\n\n\nfunction Legend() {\n  return (\n    <div className=\"ui absolute dropdown rightPos\">\n      Legend\n      <ul>\n        <li><span style={{backgroundColor: 'black'}}>&#8195;</span> Hank</li>\n        <li><span style={{backgroundColor: 'red'}}>&#8195;</span> Peggy</li>\n        <li><span style={{backgroundColor: '#4DA6FF'}}>&#8195;</span> Bobby</li>\n      </ul>\n    </div>\n  )\n}\n\nfunction Certainty(props) {\n  console.log(props.target);\n\n  const handleSubmit = (e) => {\n    //generate new interval\n    const interval = {\n      \"id\": intervals.length ? intervals[intervals.length-1].id + 1 : 0,\n      \"name\": label,\n      \"start\": parseFloat(start), //cases where start > end?\n      \"end\": parseFloat(end),\n      ...(yStart && {\"yStart\": yStart}),\n      ...(yEnd && {\"yEnd\": yEnd}),\n      ...(color && {\"color\": color}),\n      ...(opacity && {\"opacity\": opacity})\n    }\n    const newIntervals = [...intervals, interval];\n    setIntervals(newIntervals);\n    setToggle(null);\n    e.preventDefault();\n  };\n\n  const handleClose = (e) => {\n    setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"ui absolute center\" onSubmit={handleSubmit}>\n      <button className=\"right\" onClick={handleClose}>x</button><br/>\n      <label>\n        Label<span className=\"red\">* </span>\n        <input type=\"text\"\n          placeholder=\"any unicode characters\"\n          value={label}\n          onChange={(e) => setLabel(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        Time Start<span className=\"red\">* </span>\n        <input type=\"text\"\n          placeholder=\"#s, dates, logical operators\"\n          value={start}\n          onChange={(e) => setStart(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        Time End<span className=\"red\">* </span>\n        <input type=\"text\"\n          placeholder=\"#s, dates, logical operators\"\n          value={end}\n          onChange={(e) => setEnd(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        Y Start\n        <input\n          type=\"text\"\n          placeholder=\"#s, dates, logical operators\"\n          value={yStart}\n          onChange={(e) => setYStart(e.target.value)}\n        />\n      </label><br/>\n      <label>\n        Y End\n        <input\n          type=\"text\"\n          placeholder=\"#s, dates, logical operators\"\n          value={yEnd}\n          onChange={(e) => setYEnd(e.target.value)}\n        />\n      </label><br/>\n      <label>\n        Color\n        <input\n          type=\"text\"\n          placeholder=\"blue, #4DA6FF, etc.\"\n          value={color}\n          onChange={(e) => setColor(e.target.value)}\n        />\n      </label><br/>\n      <label>\n        Opacity\n        <input\n          type=\"number\"\n          placeholder=\"0 (transparent) - 1 (opaque)\"\n          value={opacity}\n          onChange={(e) => setOpacity(e.target.value)}\n        />\n      </label><br/>\n      <input type=\"submit\" value=\"Submit\"/>\n    </form>\n  )\n}\n\n\nfunction App() {\n  //blank ChronoJSON template\n  const nullData = {\n    \"imgs\": [],\n    \"nodes\":\n    [\n      []\n    ],\n    \"intervals\":\n    []\n  };\n\n  //user defined\n  const radius = 5;\n\n  //for the entire ChronoJSON\n  const [src, setSrc] = useState(Data);\n\n  //for ChronoJSON history\n  const [history, setHistory] = useState([])\n\n  //for toggling the active data as used by scrubber\n  const [activeData, setActiveData] = useState(0);\n  //for toggling the active layer\n  const [activeLayer, setActiveLayer] = useState();\n\n  //pertaining to datapoints only\n  const [data, setData] = useState(src.nodes[activeData]);\n  //pertaining to intervals only\n  const [intervals, setIntervals] = useState(src.intervals);\n  //pertaining to scales only\n  const [scales, setScales] = useState(src.scales);\n  //toggles datapoint IDs vs labels\n  const [showLabel, setShowLabel] = useState(true);\n\n  //UI window toggles\n  const [toggle, setToggle] = useState();\n  //UI info boxes for points, lines, etc.\n  const [info, setInfo] = useState();\n  //Inflection info\n  const [inflectTarget, setInflectTarget] = useState();\n\n  /*\n    TODO:\n    - for piecewise timeline, make function that generates different graphics\n  */\n\n  return (\n    <>\n      <ToolsBar toggle={toggle} setToggle={setToggle} data={data} showLabel={showLabel} setShowLabel={setShowLabel}/>\n      {toggle===\"scrubber\" && <Scrubber activeData={activeData} setActiveData={setActiveData} src={src} setData={setData}/>}\n      {toggle===\"addPoint\" && <NewPointForm data={data} setData={setData} setToggle={setToggle}/>}\n      {toggle===\"addInterval\" && <NewIntervalForm intervals={intervals} setIntervals={setIntervals} setToggle={setToggle}/>}\n      {toggle===\"save\" && <ExportDataForm src={src} data={data} activeData={activeData} setToggle={setToggle}/>}\n      {toggle===\"legend\" && <Legend/>}\n      {toggle===\"layers\" && <Layers activeLayer={activeLayer} setActiveLayer={setActiveLayer} data={data}/>}\n      // {toggle===\"certainty\" && <Certainty target={inflectTarget}/>}\n      <div id=\"main\" className=\"container fullHeight\">\n        {data.length ?\n          <Graphic\n            data={data}\n            setData={setData}\n            intervals={intervals}\n            setIntervals={setIntervals}\n            radius={radius}\n            info={info}\n            setInfo={setInfo}\n            setInflectTarget={setInflectTarget}\n            showLabel={showLabel}\n            activeLayer={activeLayer}\n            toggle={toggle}\n            scales={scales}\n            setScales={setScales}\n          />\n          : <div className=\"flexCenter\">Upload data or <button onClick={() => setToggle(\"addPoint\")}>Add new point</button></div>\n        }\n        {src.imgs.length>0 && <Image urls={src.imgs}/>}\n      </div>\n      {info && <InfoBox info={info} setInfo={setInfo} data={data} setData={setData}/>}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}