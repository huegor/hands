{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Graphic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { select, scaleLinear, axisBottom, linkHorizontal, format, drag, zoom } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport generateLinks from \"./generateLinks\";\nimport findMinMax from \"./findMinMax\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Graphic({\n  data,\n  setData,\n  intervals,\n  setintervals,\n  radius,\n  setInfo\n}) {\n  _s();\n\n  //all data is passed down from and synced to App.js\n  //initialize reference object to pass to svg in React Dom\n  const svgRef = useRef(); //svg wrapped in div bc otherwise resize observer callback won't work\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState(); //initialize links between nodes\n\n  const links = generateLinks(data);\n  const minMax = findMinMax(data); //initialize bottom axis label\n\n  const [axisLabel, setAxisLabel] = useState(\"Years (AD)\"); //all d3 shennanigans goes in this hook. called initially and on every data change\n\n  useEffect(() => {\n    const svg = select(svgRef.current); //\"svg\" is the current version of svgRef data\n    //prevents crashing when useResizeObserver returns null before svg is rendered\n\n    if (!dimensions) return; //prevents crashing before min and max are calculated\n\n    if (!minMax) return;\n    if (!links) return; //---scales---//\n\n    const padding = .05;\n    const breakpoint = 5;\n    const rangeX = minMax[1] - minMax[0]; //0 is minX, 1 is maxX (reference findMinMax)\n\n    const rangeY = minMax[3] - minMax[2];\n    const minRangeX = minMax[0] - rangeX * padding;\n    const maxRangeX = minMax[1] + rangeX * padding;\n    const minRangeY = minMax[2] - rangeY * padding; //leave space for toolbar\n\n    const maxRangeY = minMax[3] + rangeY * padding;\n    const xScale = scaleLinear().domain([minRangeX, maxRangeX]) //scaleLinear takes domain (data values) & maps onto range (screen pixel values)\n    .range([0, dimensions.width]);\n    const yScale = scaleLinear() //if difference in y vaules greater than 5, resize to min and max\n    .domain(rangeY > breakpoint ? [minRangeY, maxRangeY] : [minMax[2] - breakpoint, minMax[3] + breakpoint]).range([0, dimensions.height]); //inverse scales for drag behavior\n\n    const xScaleInverse = scaleLinear().domain([-dimensions.width, dimensions.width]).range([-(maxRangeX - minRangeX), maxRangeX - minRangeX]); //maxRangeX-minRangeX gives section of x values displayed onscreen\n\n    const yScaleInverse = scaleLinear().domain([-dimensions.height, dimensions.height]).range(rangeY > breakpoint ? [-(maxRangeY - minRangeY), maxRangeY - minRangeY] : [-breakpoint * 5, breakpoint * 5]);\n\n    if (currentZoomState) {\n      const newXScale = currentZoomState.rescaleX(xScale); //zoom state comes w methods for transformations\n\n      xScale.domain(newXScale.domain());\n      xScaleInverse.range([-(newXScale.domain()[1] - newXScale.domain()[0]), newXScale.domain()[1] - newXScale.domain()[0]]);\n    }\n\n    ; //---draw bottom axis---//\n\n    const xAxis = axisBottom(xScale).tickSize(-dimensions.height) //tick extends to entire height of svg\n    .tickFormat(format('')); //gets rid of , for 1000s groupings\n\n    svg.select(\".x-axis\") //selects and replaces .x-axis\n    .style(\"transform\", `translateY(${dimensions.height}px)`).call(xAxis).call(g => g.select(\".domain\") //removes solid black axis bar\n    .remove()).call(g => g.selectAll(\".tick line\") //styles individual ticks\n    .attr(\"stroke-opacity\", 0.5).attr(\"stroke-dasharray\", \"2,2\")).call(g => g.selectAll(\".tick text\").attr(\"y\", 10) //todo?\n    .attr(\"opacity\", 0.5)); // .attr(\"font-size\", fontSize*.8)); //replace class \"x-axis\" w xAxis\n    //TODO: enter & exit\n\n    svg // .selectAll(\".axislabel\")\n    // .data([1])\n    // .join(\"text\")\n    .enter().append(\"text\").text(axisLabel).attr(\"class\", \"axisLabel smallTxt\").attr(\"x\", dimensions.width / 2).attr(\"y\", dimensions.height * 1.08).attr(\"text-anchor\", \"middle\").attr(\"opacity\", 0.5).exit().remove(); //--drag behavior--//\n\n    const dragged = drag() // .on(\"start\", e => {\n    //   select(this).attr(\"stroke\", \"black\");\n    // })\n    .on(\"drag\", e => {\n      const dX = Math.round(xScaleInverse(e.dx) * 100) / 100;\n      const dY = Math.round(yScaleInverse(e.dy) * 100) / 100;\n      console.log(dX);\n      const newNodes = [...data]; //always make a copy when updating array\n      //find array element in data with matching ID and set new x y coordinates\n\n      newNodes.find(n => n.id === e.subject.id).x += dX;\n      newNodes.find(n => n.id === e.subject.id).y += yScaleInverse(e.dy);\n      console.log(newNodes.find(n => n.id === e.subject.id));\n      setData(newNodes);\n    }); //---draw intervals---//\n\n    if (intervals.length) {\n      svg.selectAll(\".intervals\").data(intervals).join(\"rect\").attr(\"class\", \"intervals\").attr(\"x\", n => xScale(n.start)) // .attr(\"y\", n => n.yStart ? yScale(n.yStart) : yScale(minMax[2]))\n      .attr(\"y\", n => n.yStart ? yScale(n.yStart) : 0) //todo\n      .attr(\"width\", n => xScale(n.end) - xScale(n.start)).attr(\"height\", n => {\n        if (n.yStart & n.yEnd) {\n          return yScale(n.yEnd) - yScale(n.yStart);\n        } else if (n.yStart) {\n          return yScale(minMax[3]) - yScale(n.yStart);\n        } else {\n          return yScale(minMax[3]); //todo\n          // return (yScale(minMax[3])-yScale(minMax[2]))\n        }\n      }).attr(\"opacity\", d => d.opacity ? d.opacity : 0.5).attr(\"fill\", d => d.color ? d.color : \"#999\");\n    } //---draw links---//\n\n\n    const linker = linkHorizontal().source(link => link.source).target(link => link.target).x(node => xScale(node.x)).y(node => yScale(node.y));\n    svg.selectAll(\".link\").data(links).join(\"path\").attr(\"class\", \"link pointer\").attr(\"d\", linker).attr(\"fill\", \"none\").attr(\"stroke\", n => n.color ? n.color : \"black\").attr(\"stroke-width\", n => n.width ? n.width : radius / 3).on(\"click\", (e, target) => {\n      setInfo({\n        position: [e.x, e.y],\n        target: target,\n        type: \"link\"\n      }); //displays line properties when clicked\n\n      e.stopPropagation();\n    }); //---draw points---//\n\n    svg.selectAll(\".node\").data(data).join(\"circle\").attr(\"class\", \"node pointer\").attr(\"r\", n => n.radius ? n.radius : radius) //todo for accessibility\n    .attr(\"fill\", d => d.color ? d.color : \"black\") //if it has a color other than black, use that\n    .attr(\"cx\", d => xScale(d.x)).attr(\"cy\", d => yScale(d.y)).call(dragged).on(\"click\", (e, target) => {\n      setInfo({\n        position: [e.x, e.y],\n        target: target\n      }); //displays node properties when clicked\n\n      e.stopPropagation(); //stops deselect when bg is clicked\n    }); //---draw labels---//\n\n    svg.selectAll(\".label\").data(data).join(\"text\").attr(\"class\", \"label\").text(node => node.name).attr(\"x\", node => xScale(node.x)).attr(\"y\", node => yScale(node.y + (rangeY > breakpoint ? rangeY * .06 : breakpoint / 5))) //vertical offset. see scales\n    .attr(\"text-anchor\", \"middle\"); // .attr(\"font-size\", fontSize);\n    //---zoom---//\n\n    const zoomBehavior = zoom().scaleExtent([0.25, 5]) //can zoom 2x smaller and 5x bigger\n    .translateExtent([[-100, 0], [dimensions.width + 100, dimensions.height]]) //limits how far graph can pan\n    .on(\"zoom\", e => {\n      const zoomState = e.transform; //returns zoom transformations as an object\n\n      setCurrentZoomState(zoomState);\n    });\n    svg.on(\"click\", () => setInfo(null));\n    svg.call(zoomBehavior);\n  }, [data, intervals, dimensions, currentZoomState, radius]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapperRef,\n    className: \"svgWrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"x-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Graphic, \"uoSQK9BPMmsdVoeMdL/E+s194Mk=\", false, function () {\n  return [useResizeObserver];\n});\n\n_c = Graphic;\n;\nexport default Graphic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graphic\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Graphic.js"],"names":["React","useState","useEffect","useRef","select","scaleLinear","axisBottom","linkHorizontal","format","drag","zoom","useResizeObserver","generateLinks","findMinMax","Graphic","data","setData","intervals","setintervals","radius","setInfo","svgRef","wrapperRef","dimensions","currentZoomState","setCurrentZoomState","links","minMax","axisLabel","setAxisLabel","svg","current","padding","breakpoint","rangeX","rangeY","minRangeX","maxRangeX","minRangeY","maxRangeY","xScale","domain","range","width","yScale","height","xScaleInverse","yScaleInverse","newXScale","rescaleX","xAxis","tickSize","tickFormat","style","call","g","remove","selectAll","attr","enter","append","text","exit","dragged","on","e","dX","Math","round","dx","dY","dy","console","log","newNodes","find","n","id","subject","x","y","length","join","start","yStart","end","yEnd","d","opacity","color","linker","source","link","target","node","position","type","stopPropagation","name","zoomBehavior","scaleExtent","translateExtent","zoomState","transform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { select, scaleLinear, axisBottom, linkHorizontal, format, drag, zoom } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport generateLinks from \"./generateLinks\";\nimport findMinMax from \"./findMinMax\";\n\nfunction Graphic({data, setData, intervals, setintervals, radius, setInfo}) {\n\n  //all data is passed down from and synced to App.js\n\n  //initialize reference object to pass to svg in React Dom\n  const svgRef = useRef();\n  //svg wrapped in div bc otherwise resize observer callback won't work\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState();\n\n  //initialize links between nodes\n  const links = generateLinks(data);\n  const minMax = findMinMax(data);\n\n  //initialize bottom axis label\n  const [axisLabel, setAxisLabel] = useState(\"Years (AD)\");\n\n  //all d3 shennanigans goes in this hook. called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current); //\"svg\" is the current version of svgRef data\n    //prevents crashing when useResizeObserver returns null before svg is rendered\n    if (!dimensions) return;\n    //prevents crashing before min and max are calculated\n    if (!minMax) return;\n    if (!links) return;\n\n    //---scales---//\n    const padding = .05;\n    const breakpoint = 5;\n\n    const rangeX = minMax[1]-minMax[0]; //0 is minX, 1 is maxX (reference findMinMax)\n    const rangeY = minMax[3]-minMax[2];\n    const minRangeX = minMax[0]-rangeX*padding;\n    const maxRangeX = minMax[1]+rangeX*padding;\n    const minRangeY = minMax[2]-rangeY*padding; //leave space for toolbar\n    const maxRangeY = minMax[3]+rangeY*padding;\n\n    const xScale = scaleLinear()\n      .domain([minRangeX, maxRangeX]) //scaleLinear takes domain (data values) & maps onto range (screen pixel values)\n      .range([0, dimensions.width]);\n    const yScale = scaleLinear()\n      //if difference in y vaules greater than 5, resize to min and max\n      .domain((rangeY>breakpoint) ? [minRangeY, maxRangeY] : [minMax[2]-breakpoint, minMax[3]+breakpoint])\n      .range([0, dimensions.height]);\n    //inverse scales for drag behavior\n    const xScaleInverse = scaleLinear()\n      .domain([-dimensions.width, dimensions.width])\n      .range([-(maxRangeX-minRangeX), maxRangeX-minRangeX]); //maxRangeX-minRangeX gives section of x values displayed onscreen\n    const yScaleInverse = scaleLinear()\n      .domain([-dimensions.height, dimensions.height])\n      .range((rangeY>breakpoint) ? [-(maxRangeY-minRangeY), maxRangeY-minRangeY] : [-breakpoint*5, breakpoint*5]);\n\n    if (currentZoomState) {\n      const newXScale = currentZoomState.rescaleX(xScale); //zoom state comes w methods for transformations\n      xScale.domain(newXScale.domain());\n      xScaleInverse.range([\n        -(newXScale.domain()[1]-newXScale.domain()[0]),\n        (newXScale.domain()[1]-newXScale.domain()[0])\n      ]);\n    };\n\n    //---draw bottom axis---//\n    const xAxis = axisBottom(xScale)\n      .tickSize(-dimensions.height) //tick extends to entire height of svg\n      .tickFormat(format('')); //gets rid of , for 1000s groupings\n\n    svg\n      .select(\".x-axis\") //selects and replaces .x-axis\n      .style(\"transform\", `translateY(${dimensions.height}px)`)\n      .call(xAxis)\n      .call(g => g.select(\".domain\") //removes solid black axis bar\n        .remove())\n      .call(g => g.selectAll(\".tick line\") //styles individual ticks\n        .attr(\"stroke-opacity\", 0.5)\n        .attr(\"stroke-dasharray\", \"2,2\"))\n      .call(g => g.selectAll(\".tick text\")\n        .attr(\"y\", 10) //todo?\n        .attr(\"opacity\", 0.5));\n        // .attr(\"font-size\", fontSize*.8)); //replace class \"x-axis\" w xAxis\n\n    //TODO: enter & exit\n    svg\n      // .selectAll(\".axislabel\")\n      // .data([1])\n      // .join(\"text\")\n      .enter().append(\"text\")\n      .text(axisLabel)\n      .attr(\"class\", \"axisLabel smallTxt\")\n      .attr(\"x\", dimensions.width/2)\n      .attr(\"y\", dimensions.height*1.08)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"opacity\", 0.5)\n      .exit().remove();\n\n    //--drag behavior--//\n    const dragged = drag()\n      // .on(\"start\", e => {\n      //   select(this).attr(\"stroke\", \"black\");\n      // })\n      .on(\"drag\", e => {\n        const dX = Math.round(xScaleInverse(e.dx)*100)/100;\n        const dY = Math.round(yScaleInverse(e.dy)*100)/100;\n        console.log(dX);\n        const newNodes = [...data]; //always make a copy when updating array\n\n        //find array element in data with matching ID and set new x y coordinates\n        newNodes.find(n => n.id === e.subject.id).x += dX;\n        newNodes.find(n => n.id === e.subject.id).y += yScaleInverse(e.dy);\n        console.log(newNodes.find(n => n.id === e.subject.id))\n        setData(newNodes);\n      });\n\n    //---draw intervals---//\n    if (intervals.length) {\n      svg\n      .selectAll(\".intervals\")\n      .data(intervals)\n      .join(\"rect\")\n      .attr(\"class\", \"intervals\")\n      .attr(\"x\", n => xScale(n.start))\n      // .attr(\"y\", n => n.yStart ? yScale(n.yStart) : yScale(minMax[2]))\n      .attr(\"y\", n => n.yStart ? yScale(n.yStart) : 0) //todo\n      .attr(\"width\", n => xScale(n.end)-xScale(n.start))\n      .attr(\"height\", n => {\n        if (n.yStart & n.yEnd) {\n          return (yScale(n.yEnd)-yScale(n.yStart))\n        } else if (n.yStart) {\n          return (yScale(minMax[3])-yScale(n.yStart))\n        } else {\n          return (yScale(minMax[3])) //todo\n          // return (yScale(minMax[3])-yScale(minMax[2]))\n        }})\n      .attr(\"opacity\", d => d.opacity ? d.opacity : 0.5)\n      .attr(\"fill\", d => d.color ? d.color : \"#999\");\n    }\n\n\n    //---draw links---//\n    const linker = linkHorizontal()\n      .source(link => link.source)\n      .target(link => link.target)\n      .x(node => xScale(node.x))\n      .y(node => yScale(node.y));\n\n    svg\n      .selectAll(\".link\")\n      .data(links)\n      .join(\"path\")\n      .attr(\"class\", \"link pointer\")\n      .attr(\"d\", linker)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", n => n.color? n.color : \"black\")\n      .attr(\"stroke-width\", n => n.width? n.width : radius/3)\n      .on(\"click\", (e, target) => {\n        setInfo({position: [e.x, e.y], target: target, type: \"link\"}); //displays line properties when clicked\n        e.stopPropagation();\n      });\n\n\n    //---draw points---//\n    svg\n      .selectAll(\".node\")\n      .data(data)\n      .join(\"circle\")\n      .attr(\"class\", \"node pointer\")\n      .attr(\"r\", n => n.radius? n.radius : radius) //todo for accessibility\n      .attr(\"fill\", d => d.color ? d.color : \"black\") //if it has a color other than black, use that\n      .attr(\"cx\", d => xScale(d.x))\n      .attr(\"cy\", d => yScale(d.y))\n      .call(dragged)\n      .on(\"click\", (e, target) => {\n        setInfo({position: [e.x, e.y], target: target}); //displays node properties when clicked\n        e.stopPropagation(); //stops deselect when bg is clicked\n      });\n\n\n    //---draw labels---//\n    svg\n      .selectAll(\".label\")\n      .data(data)\n      .join(\"text\")\n      .attr(\"class\", \"label\")\n      .text(node => node.name)\n      .attr(\"x\", node => xScale(node.x))\n      .attr(\"y\", node => yScale(node.y + (rangeY>breakpoint ? rangeY*.06 : breakpoint/5))) //vertical offset. see scales\n      .attr(\"text-anchor\", \"middle\");\n      // .attr(\"font-size\", fontSize);\n\n\n    //---zoom---//\n    const zoomBehavior = zoom()\n      .scaleExtent([0.25, 5]) //can zoom 2x smaller and 5x bigger\n      .translateExtent([[-100, 0], [dimensions.width+100, dimensions.height]]) //limits how far graph can pan\n      .on(\"zoom\", e => {\n        const zoomState = e.transform; //returns zoom transformations as an object\n        setCurrentZoomState(zoomState);\n      });\n\n\n    svg.on(\"click\", () => setInfo(null));\n    svg.call(zoomBehavior);\n\n  }, [data, intervals, dimensions, currentZoomState, radius]);\n\n  return (\n    <div ref={wrapperRef} className=\"svgWrapper\">\n      <svg ref={svgRef}>\n        <g className=\"x-axis\" />\n      </svg>\n    </div>\n  );\n};\n\n\nexport default Graphic;\n"]},"metadata":{},"sourceType":"module"}