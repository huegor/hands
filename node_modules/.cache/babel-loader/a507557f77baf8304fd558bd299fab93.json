{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/EditForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ReactComponent as IconEdit } from \"@svgr/webpack?-svgo,+titleProp,+ref!../icons/edit.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditForm(props) {\n  _s();\n\n  const [editMode, setEditMode] = useState(false);\n  const [value, setValue] = useState(props.data[props.k[0]][props.k[1]]);\n\n  const handleEdit = e => {\n    /*\n    1. clicking edit replaces text with a field with value = og value\n    2. edit button changes into submit\n    3. upon submit, locate property in JSON via key\n    4. then set key value to field value\n    */\n    e.preventDefault();\n    const newData = { ...props.data\n    };\n\n    if (props.check === \"num\") {\n      //number check\n      const tempValue = parseFloat(value);\n\n      if (isNaN(tempValue)) {\n        alert(\"Make sure value is a number!\");\n        return;\n      }\n\n      newData[props.k[0]][props.k[1]] = tempValue;\n    } else {\n      newData[props.k[0]][props.k[1]] = value;\n    }\n\n    props.setData(newData);\n    setEditMode(false);\n  };\n\n  return editMode ? /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleEdit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: props.inputType,\n      placeholder: props.placeholder,\n      value: value,\n      onChange: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      disabled: !value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEditMode(false),\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", props.data[props.k[0]][props.k[1]], \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"editButton\",\n      onClick: () => setEditMode(true),\n      children: /*#__PURE__*/_jsxDEV(IconEdit, {\n        className: \"editIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 112\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 47\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditForm, \"MrC592EqINMruR84FnjxLXh7N0w=\");\n\n_c = EditForm;\n;\nexport default EditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/EditForm.js"],"names":["React","useState","EditForm","props","editMode","setEditMode","value","setValue","data","k","handleEdit","e","preventDefault","newData","check","tempValue","parseFloat","isNaN","alert","setData","inputType","placeholder","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACE,KAAK,CAACK,IAAN,CAAWL,KAAK,CAACM,CAAN,CAAQ,CAAR,CAAX,EAAuBN,KAAK,CAACM,CAAN,CAAQ,CAAR,CAAvB,CAAD,CAAlC;;AAEA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACxB;AACJ;AACA;AACA;AACA;AACA;AACIA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,OAAO,GAAG,EAAC,GAAGV,KAAK,CAACK;AAAV,KAAhB;;AAEA,QAAIL,KAAK,CAACW,KAAN,KAAc,KAAlB,EAAyB;AAAE;AACzB,YAAMC,SAAS,GAAGC,UAAU,CAACV,KAAD,CAA5B;;AACA,UAAIW,KAAK,CAACF,SAAD,CAAT,EAAsB;AACpBG,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACA;AACD;;AACDL,MAAAA,OAAO,CAACV,KAAK,CAACM,CAAN,CAAQ,CAAR,CAAD,CAAP,CAAoBN,KAAK,CAACM,CAAN,CAAQ,CAAR,CAApB,IAAkCM,SAAlC;AACD,KAPD,MAOO;AACLF,MAAAA,OAAO,CAACV,KAAK,CAACM,CAAN,CAAQ,CAAR,CAAD,CAAP,CAAoBN,KAAK,CAACM,CAAN,CAAQ,CAAR,CAApB,IAAkCH,KAAlC;AACD;;AAEDH,IAAAA,KAAK,CAACgB,OAAN,CAAcN,OAAd;AACAR,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAvBD;;AAyBA,SACED,QAAQ,gBACR;AAAM,IAAA,QAAQ,EAAEM,UAAhB;AAAA,4BACE;AACE,MAAA,IAAI,EAAEP,KAAK,CAACiB,SADd;AAEE,MAAA,WAAW,EAAEjB,KAAK,CAACkB,WAFrB;AAGE,MAAA,KAAK,EAAEf,KAHT;AAIE,MAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACW,MAAF,CAAShB,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,YADF,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,eAOE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,QAAQ,EAAE,CAACA;AAA/C;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAQ,MAAA,OAAO,EAAE,MAAMD,WAAW,CAAC,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADQ,gBAWN;AAAA,oBAAIF,KAAK,CAACK,IAAN,CAAWL,KAAK,CAACM,CAAN,CAAQ,CAAR,CAAX,EAAuBN,KAAK,CAACM,CAAN,CAAQ,CAAR,CAAvB,CAAJ,oBAAwC;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAE,MAAMJ,WAAW,CAAC,IAAD,CAAzD;AAAA,6BAAiE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AAAjE;AAAA;AAAA;AAAA;AAAA,YAAxC;AAAA,kBAZJ;AAcD;;GA3CQH,Q;;KAAAA,Q;AA2CR;AAED,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { ReactComponent as IconEdit } from '../icons/edit.svg';\n\nfunction EditForm(props) {\n  const [editMode, setEditMode] = useState(false);\n  const [value, setValue] = useState(props.data[props.k[0]][props.k[1]]);\n\n  const handleEdit = (e) => {\n    /*\n    1. clicking edit replaces text with a field with value = og value\n    2. edit button changes into submit\n    3. upon submit, locate property in JSON via key\n    4. then set key value to field value\n    */\n    e.preventDefault();\n    const newData = {...props.data};\n\n    if (props.check===\"num\") { //number check\n      const tempValue = parseFloat(value);\n      if (isNaN(tempValue)) {\n        alert(\"Make sure value is a number!\");\n        return;\n      }\n      newData[props.k[0]][props.k[1]] = tempValue;\n    } else {\n      newData[props.k[0]][props.k[1]] = value;\n    }\n\n    props.setData(newData);\n    setEditMode(false);\n  }\n\n  return (\n    editMode ?\n    <form onSubmit={handleEdit}>\n      <input\n        type={props.inputType}\n        placeholder={props.placeholder}\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      /><br/>\n      <input type=\"submit\" value=\"Submit\" disabled={!value}/>\n      <button onClick={() => setEditMode(false)}>Cancel</button>\n    </form>\n    : <> {props.data[props.k[0]][props.k[1]]} <button className=\"editButton\" onClick={() => setEditMode(true)}><IconEdit className=\"editIcon\"/></button></>\n  )\n};\n\nexport default EditForm;\n"]},"metadata":{},"sourceType":"module"}