{"ast":null,"code":"/*\n   generates intervals between all intervaled instants and\n   returns a interval object with interval properties.\n*/function generateIntervals(data){// console.log(data[8])\n/*\n    expand to standalone paths? bezier curve: https://svg-path-visualizer.netlify.app/bezier-curve/\n    - start: can specify point or enter coordinate values directly (run thru xScale)\n    - control: ???\n    - end: same as start\n    output: M startX,startY C controlX1,controlY1 controlX2,controlY2 endX, endY\n  */var intervals=[];//array of all instant intervals\nObject.entries(data).forEach(function(item){var key=item[0];var value=item[1];if(!value.target){//if the instant does not have a target, skip generating interval\nreturn;}else{value.target.forEach(function(n){var instant=[n,data[n]];if(instant[1]){//does instant exist?\nintervals.push({source:item,target:instant,text:value.intervalText,color:value.intervalColor?value.intervalColor:value.color?value.color:null,//if not specified, use point color. otherwise, null\nwidth:value.intervalWidth,opacity:value.intervalOpacity?value.intervalOpacity:null,dashed:value.intervalDashed});}});}});return intervals;};export default generateIntervals;","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/chronovis/src/components/generateIntervals.js"],"names":["generateIntervals","data","intervals","Object","entries","forEach","item","key","value","target","n","instant","push","source","text","intervalText","color","intervalColor","width","intervalWidth","opacity","intervalOpacity","dashed","intervalDashed"],"mappings":"AAAA;AACA;AACA;AACA,EAEA,QAASA,CAAAA,iBAAT,CAA2BC,IAA3B,CAAiC,CACjC;AACE;AACF;AACA;AACA;AACA;AACA;AACA,IAEE,GAAMC,CAAAA,SAAS,CAAG,EAAlB,CAAsB;AAEtBC,MAAM,CAACC,OAAP,CAAeH,IAAf,EAAqBI,OAArB,CAA6B,SAACC,IAAD,CAAU,CACrC,GAAMC,CAAAA,GAAG,CAAGD,IAAI,CAAC,CAAD,CAAhB,CACA,GAAME,CAAAA,KAAK,CAAGF,IAAI,CAAC,CAAD,CAAlB,CAEA,GAAI,CAACE,KAAK,CAACC,MAAX,CAAmB,CACjB;AACA,OACD,CAHD,IAGO,CACLD,KAAK,CAACC,MAAN,CAAaJ,OAAb,CAAqB,SAACK,CAAD,CAAO,CAC1B,GAAMC,CAAAA,OAAO,CAAG,CAACD,CAAD,CAAIT,IAAI,CAACS,CAAD,CAAR,CAAhB,CACA,GAAIC,OAAO,CAAC,CAAD,CAAX,CAAgB,CAAE;AAChBT,SAAS,CAACU,IAAV,CAAe,CACbC,MAAM,CAACP,IADM,CAEbG,MAAM,CAACE,OAFM,CAGbG,IAAI,CAAEN,KAAK,CAACO,YAHC,CAIbC,KAAK,CAACR,KAAK,CAACS,aAAN,CAAsBT,KAAK,CAACS,aAA5B,CAA4CT,KAAK,CAACQ,KAAN,CAAcR,KAAK,CAACQ,KAApB,CAA4B,IAJjE,CAIuE;AACpFE,KAAK,CAACV,KAAK,CAACW,aALC,CAMbC,OAAO,CAACZ,KAAK,CAACa,eAAN,CAAwBb,KAAK,CAACa,eAA9B,CAAgD,IAN3C,CAObC,MAAM,CAAEd,KAAK,CAACe,cAPD,CAAf,EASD,CACF,CAbD,EAcD,CACF,CAvBD,EAwBA,MAAOrB,CAAAA,SAAP,CACD,EAED,cAAeF,CAAAA,iBAAf","sourcesContent":["/*\n   generates intervals between all intervaled instants and\n   returns a interval object with interval properties.\n*/\n\nfunction generateIntervals(data) {\n// console.log(data[8])\n  /*\n    expand to standalone paths? bezier curve: https://svg-path-visualizer.netlify.app/bezier-curve/\n    - start: can specify point or enter coordinate values directly (run thru xScale)\n    - control: ???\n    - end: same as start\n    output: M startX,startY C controlX1,controlY1 controlX2,controlY2 endX, endY\n  */\n\n  const intervals = []; //array of all instant intervals\n\n  Object.entries(data).forEach((item) => {\n    const key = item[0];\n    const value = item[1];\n\n    if (!value.target) {\n      //if the instant does not have a target, skip generating interval\n      return\n    } else {\n      value.target.forEach((n) => {\n        const instant = [n, data[n]];\n        if (instant[1]) { //does instant exist?\n          intervals.push({\n            source:item,\n            target:instant,\n            text: value.intervalText,\n            color:value.intervalColor ? value.intervalColor : value.color ? value.color : null, //if not specified, use point color. otherwise, null\n            width:value.intervalWidth,\n            opacity:value.intervalOpacity ? value.intervalOpacity : null,\n            dashed: value.intervalDashed\n          });\n        }\n      });\n    }\n  });\n  return intervals;\n};\n\nexport default generateIntervals;\n"]},"metadata":{},"sourceType":"module"}