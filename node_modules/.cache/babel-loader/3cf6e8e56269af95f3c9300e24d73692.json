{"ast":null,"code":"import _objectSpread from\"/Users/skye/Desktop/Portfolio/chronovis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/skye/Desktop/Portfolio/chronovis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';/*\n  For saving and downloading JSON data onto computer.\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ExportDataForm(_ref){var src=_ref.src,setSrc=_ref.setSrc,zones=_ref.zones,scales=_ref.scales,data=_ref.data,activeData=_ref.activeData,setToggle=_ref.setToggle,fileName=_ref.fileName;var _useState=useState(fileName),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var handleSave=function handleSave(e){e.preventDefault();//syncs changes in nodes data with src\nvar newSrc=_objectSpread({},src);newSrc.instants[activeData]=data;//TODO: update src every time change activeData\nnewSrc.zones=zones;newSrc.scales=scales;setSrc(newSrc);//saves synced src as a file\nvar fileData=JSON.stringify(newSrc);var blob=new Blob([fileData],{type:\"text/plain\"});var url=URL.createObjectURL(blob);var link=document.createElement('a');link.download=\"\".concat(name,\".json\");link.href=url;link.click();};var handleClose=function handleClose(e){e.preventDefault();setToggle(null);};return/*#__PURE__*/_jsxs(\"form\",{className:\"ui absolute center\",onSubmit:handleSave,children:[/*#__PURE__*/_jsx(\"button\",{className:\"right\",onClick:handleClose,children:\"x\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"File Name \",/*#__PURE__*/_jsx(\"span\",{className:\"redText\",children:\"* \"}),\":\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:name,onChange:function onChange(e){return setName(e.target.value);},required:true})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Save Data\"})]});}export default ExportDataForm;","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/chronovis/src/components/ExportDataForm.js"],"names":["React","useState","ExportDataForm","src","setSrc","zones","scales","data","activeData","setToggle","fileName","name","setName","handleSave","e","preventDefault","newSrc","instants","fileData","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","download","href","click","handleClose","target","value"],"mappings":"2TAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA;AACA;AACA,E,wFAEA,QAASC,CAAAA,cAAT,MAA6F,IAApEC,CAAAA,GAAoE,MAApEA,GAAoE,CAA/DC,MAA+D,MAA/DA,MAA+D,CAAvDC,KAAuD,MAAvDA,KAAuD,CAAhDC,MAAgD,MAAhDA,MAAgD,CAAxCC,IAAwC,MAAxCA,IAAwC,CAAlCC,UAAkC,MAAlCA,UAAkC,CAAtBC,SAAsB,MAAtBA,SAAsB,CAAXC,QAAW,MAAXA,QAAW,CAC3F,cAAwBT,QAAQ,CAACS,QAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,CAAD,CAAO,CACxBA,CAAC,CAACC,cAAF,GACA;AACA,GAAMC,CAAAA,MAAM,kBAAOb,GAAP,CAAZ,CACAa,MAAM,CAACC,QAAP,CAAgBT,UAAhB,EAA8BD,IAA9B,CAAoC;AACpCS,MAAM,CAACX,KAAP,CAAeA,KAAf,CACAW,MAAM,CAACV,MAAP,CAAgBA,MAAhB,CACAF,MAAM,CAACY,MAAD,CAAN,CAEA;AACA,GAAME,CAAAA,QAAQ,CAAGC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAjB,CACA,GAAMK,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,CAAS,CAACJ,QAAD,CAAT,CAAqB,CAACK,IAAI,CAAE,YAAP,CAArB,CAAb,CACA,GAAMC,CAAAA,GAAG,CAAGC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAZ,CACA,GAAMM,CAAAA,IAAI,CAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb,CACAF,IAAI,CAACG,QAAL,WAAmBnB,IAAnB,UACAgB,IAAI,CAACI,IAAL,CAAYP,GAAZ,CACAG,IAAI,CAACK,KAAL,GACD,CAjBD,CAmBA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACnB,CAAD,CAAO,CACzBA,CAAC,CAACC,cAAF,GACAN,SAAS,CAAC,IAAD,CAAT,CAED,CAJD,CAMA,mBACE,cAAM,SAAS,CAAC,oBAAhB,CAAqC,QAAQ,CAAEI,UAA/C,wBACE,eAAQ,SAAS,CAAC,OAAlB,CAA0B,OAAO,CAAEoB,WAAnC,eADF,cAC4D,aAD5D,cAEE,mDACY,aAAM,SAAS,CAAC,SAAhB,gBADZ,kBAEE,cACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAEtB,IAFT,CAGE,QAAQ,CAAE,kBAACG,CAAD,QAAOF,CAAAA,OAAO,CAACE,CAAC,CAACoB,MAAF,CAASC,KAAV,CAAd,EAHZ,CAIE,QAAQ,KAJV,EAFF,GAFF,cAUU,aAVV,cAUe,aAVf,cAWE,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,WAA3B,EAXF,GADF,CAeD,CAED,cAAejC,CAAAA,cAAf","sourcesContent":["import React, { useState } from 'react';\n\n/*\n  For saving and downloading JSON data onto computer.\n*/\n\nfunction ExportDataForm({src, setSrc, zones, scales, data, activeData, setToggle, fileName}) {\n  const [name, setName] = useState(fileName);\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    //syncs changes in nodes data with src\n    const newSrc = {...src};\n    newSrc.instants[activeData] = data; //TODO: update src every time change activeData\n    newSrc.zones = zones;\n    newSrc.scales = scales;\n    setSrc(newSrc);\n    \n    //saves synced src as a file\n    const fileData = JSON.stringify(newSrc);\n    const blob = new Blob([fileData], {type: \"text/plain\"});\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.download = `${name}.json`;\n    link.href = url;\n    link.click();\n  };\n\n  const handleClose = (e) => {\n    e.preventDefault();\n    setToggle(null);\n\n  }\n\n  return (\n    <form className=\"ui absolute center\" onSubmit={handleSave}>\n      <button className=\"right\" onClick={handleClose}>x</button><br/>\n      <label>\n        File Name <span className=\"redText\">* </span>:\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n        />\n      </label><br/><br/>\n      <input type=\"submit\" value=\"Save Data\"/>\n    </form>\n  );\n}\n\nexport default ExportDataForm;\n"]},"metadata":{},"sourceType":"module"}