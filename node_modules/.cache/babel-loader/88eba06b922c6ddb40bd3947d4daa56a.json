{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./data.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewPointForm from \"./components/NewPointForm\";\nimport NewIntervalForm from \"./components/NewIntervalForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\";\nimport ToolsBar from \"./components/ToolsBar\"; // import findMinMax from \"./components/findMinMax\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Legend() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui absolute dropdown rightPos\",\n    children: [\"Legend\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: 'black'\n          },\n          children: \"\\u2003\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), \" Hank\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: 'red'\n          },\n          children: \"\\u2003\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), \" Peggy\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: '#4DA6FF'\n          },\n          children: \"\\u2003\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), \" Bobby\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Legend;\n\nfunction Layers({\n  activeLayer,\n  setActiveLayer,\n  data\n}) {\n  const numbers = () => data.forEach(item => {\n    return item.layer ? item.layer : null;\n  });\n\n  console.log(numbers());\n\n  const handleClick = e => {\n    const parent = e.target.parentNode;\n    console.log(parent.id);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui absolute dropdown rightPos\",\n    children: [\"Layers\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"All layers \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        id: \"1\",\n        children: [\"Layer 1 \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Layers;\n\nfunction Scrubber({\n  activeData,\n  setActiveData,\n  src,\n  setData\n}) {\n  const handleClick = e => {\n    if (e.target.id === \"foward\") {\n      setActiveData(activeData += 1);\n    } else {\n      setActiveData(activeData -= 1);\n    } // console.log(src.nodes.length-1);\n    // console.log(activeData);\n\n\n    setData(src.nodes[activeData]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui absolute center\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"back\",\n      onClick: handleClick,\n      disabled: activeData === 0,\n      children: \"<\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"foward\",\n      onClick: handleClick,\n      disabled: activeData === src.nodes.length - 1,\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Scrubber;\n\nfunction App() {\n  _s();\n\n  //blank ChronoJSON template\n  const defaultJSON = {\n    \"imgs\": [],\n    \"nodes\": [[]],\n    \"intervals\": []\n  }; //user defined\n\n  const radius = 5; //for the entire ChronoJSON\n\n  const [src, setSrc] = useState(Data); //for ChronoJSON history\n\n  const [history, setHistory] = useState([]); // //for toggling the active data as used by scrubber\n\n  const [activeData, setActiveData] = useState(0); //for toggling the active layer\n\n  const [activeLayer, setActiveLayer] = useState(); //pertaining to datapoints only\n\n  const [data, setData] = useState(src.nodes[activeData]); //todo: comparative timelines, layering\n  //pertaining to intervals only\n\n  const [intervals, setIntervals] = useState(src.intervals); //toggles datapoint IDs vs labels\n\n  const [showLabel, setShowLabel] = useState(true); //UI window toggles\n\n  const [toggle, setToggle] = useState(); //UI info boxes for points, lines, etc.\n\n  const [info, setInfo] = useState();\n  /*\n    TODO:\n    - findMinMax() adjust less frequently. ie: if new data can be panned to, no need to adjust viewport\n    - for piecewise timeline, make function that generates different graphics\n    - create a master array of all snapshots of data (for scrubber)\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToolsBar, {\n      setToggle: setToggle,\n      data: data,\n      showLabel: showLabel,\n      setShowLabel: setShowLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), toggle === \"scrubber\" && /*#__PURE__*/_jsxDEV(Scrubber, {\n      activeData: activeData,\n      setActiveData: setActiveData,\n      src: src,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 31\n    }, this), toggle === \"addPoint\" && /*#__PURE__*/_jsxDEV(NewPointForm, {\n      data: data,\n      setData: setData,\n      setToggle: setToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 31\n    }, this), toggle === \"addInterval\" && /*#__PURE__*/_jsxDEV(NewIntervalForm, {\n      intervals: intervals,\n      setIntervals: setIntervals,\n      setToggle: setToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 34\n    }, this), toggle === \"save\" && /*#__PURE__*/_jsxDEV(ExportDataForm, {\n      src: src,\n      data: data,\n      activeData: activeData,\n      setToggle: setToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 27\n    }, this), toggle === \"legend\" && /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }, this), toggle === \"layers\" && /*#__PURE__*/_jsxDEV(Layers, {\n      activeLayer: activeLayer,\n      setActiveLayer: setActiveLayer,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      className: \"container fullHeight\",\n      children: [data.length ? /*#__PURE__*/_jsxDEV(Graphic, {\n        data: data,\n        setData: setData,\n        intervals: intervals,\n        setIntervals: setIntervals,\n        radius: radius,\n        setInfo: setInfo,\n        showLabel: showLabel,\n        activeLayer: activeLayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexCenter\",\n        children: [\"Upload data or \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setToggle(\"addPoint\"),\n          children: \"Add new point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), src.imgs.length && /*#__PURE__*/_jsxDEV(Image, {\n        urls: src.imgs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), info && /*#__PURE__*/_jsxDEV(InfoBox, {\n      info: info,\n      setInfo: setInfo,\n      data: data,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"jygfKJ1EJECGhjXhcJfr2jy1Z00=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Legend\");\n$RefreshReg$(_c2, \"Layers\");\n$RefreshReg$(_c3, \"Scrubber\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js"],"names":["React","useState","Data","Graphic","Image","NewPointForm","NewIntervalForm","InfoBox","ExportDataForm","ToolsBar","Legend","backgroundColor","Layers","activeLayer","setActiveLayer","data","numbers","forEach","item","layer","console","log","handleClick","e","parent","target","parentNode","id","preventDefault","Scrubber","activeData","setActiveData","src","setData","nodes","length","App","defaultJSON","radius","setSrc","history","setHistory","intervals","setIntervals","showLabel","setShowLabel","toggle","setToggle","info","setInfo","imgs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./data.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewPointForm from \"./components/NewPointForm\";\nimport NewIntervalForm from \"./components/NewIntervalForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\";\nimport ToolsBar from \"./components/ToolsBar\";\n\n// import findMinMax from \"./components/findMinMax\";\n\nfunction Legend() {\n  return (\n    <div className=\"ui absolute dropdown rightPos\">\n      Legend\n      <ul>\n        <li><span style={{backgroundColor: 'black'}}>&#8195;</span> Hank</li>\n        <li><span style={{backgroundColor: 'red'}}>&#8195;</span> Peggy</li>\n        <li><span style={{backgroundColor: '#4DA6FF'}}>&#8195;</span> Bobby</li>\n      </ul>\n    </div>\n  )\n}\n\nfunction Layers({activeLayer, setActiveLayer, data}){\n\n  const numbers = () => data.forEach((item) => {\n    return (item.layer ? item.layer : null);\n  });\n\n  console.log(numbers());\n\n  const handleClick = (e) => {\n    const parent = e.target.parentNode;\n\n    console.log(parent.id);\n    e.preventDefault();\n  }\n\n  return (\n    <div className=\"ui absolute dropdown rightPos\">\n      Layers\n      <ul>\n        <li>All layers <button onClick={handleClick}>Select</button></li>\n        <li id=\"1\" >Layer 1 <button onClick={handleClick}>Select</button></li>\n      </ul>\n    </div>\n  )\n}\n\nfunction Scrubber({activeData, setActiveData, src, setData}) {\n  const handleClick = (e) => {\n    if (e.target.id === \"foward\") {\n      setActiveData(activeData += 1);\n    } else {\n      setActiveData(activeData -= 1);\n    }\n    // console.log(src.nodes.length-1);\n    // console.log(activeData);\n    setData(src.nodes[activeData]);\n  }\n\n  return (\n    <div className=\"ui absolute center\">\n      <button id=\"back\" onClick={handleClick} disabled={activeData===0}>&lt;</button>\n      <button id=\"foward\" onClick={handleClick} disabled={activeData===src.nodes.length-1}>&gt;</button>\n    </div>\n  );\n}\n\nfunction App() {\n\n  //blank ChronoJSON template\n  const defaultJSON = {\n    \"imgs\": [],\n    \"nodes\":\n    [\n      []\n    ],\n    \"intervals\":\n    []\n  };\n\n  //user defined\n  const radius = 5;\n\n  //for the entire ChronoJSON\n  const [src, setSrc] = useState(Data);\n\n  //for ChronoJSON history\n  const [history, setHistory] = useState([])\n\n  // //for toggling the active data as used by scrubber\n  const [activeData, setActiveData] = useState(0);\n  //for toggling the active layer\n  const [activeLayer, setActiveLayer] = useState();\n\n  //pertaining to datapoints only\n  const [data, setData] = useState(src.nodes[activeData]); //todo: comparative timelines, layering\n  //pertaining to intervals only\n  const [intervals, setIntervals] = useState(src.intervals);\n  //toggles datapoint IDs vs labels\n  const [showLabel, setShowLabel] = useState(true);\n\n  //UI window toggles\n  const [toggle, setToggle] = useState();\n  //UI info boxes for points, lines, etc.\n  const [info, setInfo] = useState();\n\n\n  /*\n    TODO:\n    - findMinMax() adjust less frequently. ie: if new data can be panned to, no need to adjust viewport\n    - for piecewise timeline, make function that generates different graphics\n    - create a master array of all snapshots of data (for scrubber)\n  */\n\n  return (\n    <>\n      <ToolsBar setToggle={setToggle} data={data} showLabel={showLabel} setShowLabel={setShowLabel}/>\n      {toggle===\"scrubber\" && <Scrubber activeData={activeData} setActiveData={setActiveData} src={src} setData={setData}/>}\n      {toggle===\"addPoint\" && <NewPointForm data={data} setData={setData} setToggle={setToggle}/>}\n      {toggle===\"addInterval\" && <NewIntervalForm intervals={intervals} setIntervals={setIntervals} setToggle={setToggle}/>}\n      {toggle===\"save\" && <ExportDataForm src={src} data={data} activeData={activeData} setToggle={setToggle}/>}\n      {toggle===\"legend\" && <Legend/>}\n      {toggle===\"layers\" && <Layers activeLayer={activeLayer} setActiveLayer={setActiveLayer} data={data}/>}\n      <div id=\"main\" className=\"container fullHeight\">\n        {data.length ?\n          <Graphic\n            data={data}\n            setData={setData}\n            intervals={intervals}\n            setIntervals={setIntervals}\n            radius={radius}\n            setInfo={setInfo}\n            showLabel={showLabel}\n            activeLayer={activeLayer}\n          />\n          : <div className=\"flexCenter\">Upload data or <button onClick={() => setToggle(\"addPoint\")}>Add new point</button></div>\n        }\n        {src.imgs.length && <Image urls={src.imgs}/>}\n      </div>\n      {info && <InfoBox info={info} setInfo={setInfo} data={data} setData={setData}/>}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}