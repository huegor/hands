{"ast":null,"code":"/*\n   generates intervals between all intervaled instants and\n   returns a interval object with interval properties.\n*/\nfunction generateIntervals(data) {\n  // console.log(data[8])\n\n  /*\n    expand to standalone paths? bezier curve: https://svg-path-visualizer.netlify.app/bezier-curve/\n    - start: can specify point or enter coordinate values directly (run thru xScale)\n    - control: ???\n    - end: same as start\n    output: M startX,startY C controlX1,controlY1 controlX2,controlY2 endX, endY\n  */\n  const intervals = []; //array of all instant intervals\n\n  Object.entries(data).forEach(([key, item]) => {\n    if (!item.target) {\n      //if the instant does not have a target, skip generating interval\n      return;\n    } else {\n      item.target.forEach(n => {\n        const instant = data[n];\n\n        if (instant) {\n          //does instant exist?\n          intervals.push({\n            source: item,\n            target: instant,\n            color: item.intervalColor ? item.intervalColor : item.color ? item.color : null,\n            //if not specified, use point color. otherwise, null\n            width: item.intervalWidth,\n            opacity: item.intervalOpacity ? item.intervalOpacity : item.opacity ? item.opacity : null,\n            dashed: item.intervalDashed\n          });\n        }\n      });\n    }\n  }); // return intervals;\n}\n\n;\nexport default generateIntervals;","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/generateIntervals.js"],"names":["generateIntervals","data","intervals","Object","entries","forEach","key","item","target","n","instant","push","source","color","intervalColor","width","intervalWidth","opacity","intervalOpacity","dashed","intervalDashed"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AACjC;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AAEE,QAAMC,SAAS,GAAG,EAAlB,CAV+B,CAUT;;AAEtBC,EAAAA,MAAM,CAACC,OAAP,CAAeH,IAAf,EAAqBI,OAArB,CAA6B,CAAC,CAACC,GAAD,EAAMC,IAAN,CAAD,KAAiB;AAC5C,QAAI,CAACA,IAAI,CAACC,MAAV,EAAkB;AAChB;AACA;AACD,KAHD,MAGO;AACLD,MAAAA,IAAI,CAACC,MAAL,CAAYH,OAAZ,CAAqBI,CAAD,IAAO;AACzB,cAAMC,OAAO,GAAGT,IAAI,CAACQ,CAAD,CAApB;;AACA,YAAIC,OAAJ,EAAa;AAAE;AACbR,UAAAA,SAAS,CAACS,IAAV,CAAe;AACbC,YAAAA,MAAM,EAACL,IADM;AAEbC,YAAAA,MAAM,EAACE,OAFM;AAGbG,YAAAA,KAAK,EAACN,IAAI,CAACO,aAAL,GAAqBP,IAAI,CAACO,aAA1B,GAA0CP,IAAI,CAACM,KAAL,GAAaN,IAAI,CAACM,KAAlB,GAA0B,IAH7D;AAGmE;AAChFE,YAAAA,KAAK,EAACR,IAAI,CAACS,aAJE;AAKbC,YAAAA,OAAO,EAACV,IAAI,CAACW,eAAL,GAAuBX,IAAI,CAACW,eAA5B,GAA8CX,IAAI,CAACU,OAAL,GAAeV,IAAI,CAACU,OAApB,GAA8B,IALvE;AAMbE,YAAAA,MAAM,EAACZ,IAAI,CAACa;AANC,WAAf;AAQD;AACF,OAZD;AAaD;AACF,GAnBD,EAZ+B,CAgC/B;AACD;;AAAA;AAED,eAAepB,iBAAf","sourcesContent":["/*\n   generates intervals between all intervaled instants and\n   returns a interval object with interval properties.\n*/\n\nfunction generateIntervals(data) {\n// console.log(data[8])\n  /*\n    expand to standalone paths? bezier curve: https://svg-path-visualizer.netlify.app/bezier-curve/\n    - start: can specify point or enter coordinate values directly (run thru xScale)\n    - control: ???\n    - end: same as start\n    output: M startX,startY C controlX1,controlY1 controlX2,controlY2 endX, endY\n  */\n\n  const intervals = []; //array of all instant intervals\n\n  Object.entries(data).forEach(([key, item]) => {\n    if (!item.target) {\n      //if the instant does not have a target, skip generating interval\n      return\n    } else {\n      item.target.forEach((n) => {\n        const instant = data[n];\n        if (instant) { //does instant exist?\n          intervals.push({\n            source:item,\n            target:instant,\n            color:item.intervalColor ? item.intervalColor : item.color ? item.color : null, //if not specified, use point color. otherwise, null\n            width:item.intervalWidth,\n            opacity:item.intervalOpacity ? item.intervalOpacity : item.opacity ? item.opacity : null,\n            dashed:item.intervalDashed\n          });\n        }\n      });\n    }\n  });\n  // return intervals;\n};\n\nexport default generateIntervals;\n"]},"metadata":{},"sourceType":"module"}