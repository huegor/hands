{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewIntervalForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport findMinMax from \"./findMinMax\";\n/*\n   UI for adding new intervals.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewIntervalForm({\n  intervals,\n  setIntervals,\n  setToggle\n}) {\n  _s();\n\n  const [label, setLabel] = useState(\"\");\n  const [start, setStart] = useState();\n  const [end, setEnd] = useState(); //optional parameters\n\n  const [yStart, setYStart] = useState(0);\n  const [yEnd, setYEnd] = useState(findMinMax(data)[3] + 10);\n  const [color, setColor] = useState(\"black\");\n  const [opacity, setOpacity] = useState(1); // const handleChange = (e) => {\n  //   //if it's a checkbox, evaluate if checked. otherwise, evaluate the value\n  //   const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n  //   const name = e.target.name;\n  //   // console.log(value);\n  //   // setLabel(value);\n  //   this[\"set\"+name](value);\n  //\n  //   // setValue({\n  //   //   [name]: value\n  //   // });\n  // }\n\n  const handleSubmit = e => {\n    //generate new interval\n\n    /*\n    \"id\": 1,\n    \"name\": \"interval2\",\n    \"start\":1623,\n    \"end\":1630,\n    \"yStart\": 10,\n    \"yEnd\":30,\n    \"color\": \"green\",\n    \"opacity\": 0.25\n    */\n    const interval = {\n      \"id\": intervals.length ? intervals[intervals.length - 1].id + 1 : 0,\n      \"name\": label,\n      \"start\": start,\n      \"end\": end,\n      \"yStart\": yStart,\n      \"yEnd\": yEnd,\n      \"color\": color,\n      \"opacity\": opacity\n    };\n    e.preventDefault();\n  };\n\n  const handleClose = e => {\n    setToggle(null);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"right\",\n      onClick: handleClose,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Label\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"red\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"any unicode characters\",\n        value: label,\n        onChange: e => setFileName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewIntervalForm, \"EKjTzU7cCBbELRWQx+Y5E7vRlVY=\");\n\n_c = NewIntervalForm;\n;\nexport default NewIntervalForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewIntervalForm\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewIntervalForm.js"],"names":["React","useState","findMinMax","NewIntervalForm","intervals","setIntervals","setToggle","label","setLabel","start","setStart","end","setEnd","yStart","setYStart","yEnd","setYEnd","data","color","setColor","opacity","setOpacity","handleSubmit","e","interval","length","id","preventDefault","handleClose","setFileName","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA;AACA;AACA;;;;AAEA,SAASC,eAAT,CAAyB;AAACC,EAAAA,SAAD;AAAYC,EAAAA,YAAZ;AAA0BC,EAAAA;AAA1B,CAAzB,EAA+D;AAAA;;AAC7D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,EAA9B,CAH6D,CAI7D;;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAACC,UAAU,CAACe,IAAD,CAAV,CAAiB,CAAjB,IAAsB,EAAvB,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,OAAD,CAAlC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,CAAD,CAAtC,CAR6D,CAU7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMqB,YAAY,GAAIC,CAAD,IAAO;AAC1B;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,UAAMC,QAAQ,GAAG;AACf,YAAMpB,SAAS,CAACqB,MAAV,GAAmBrB,SAAS,CAACA,SAAS,CAACqB,MAAV,GAAiB,CAAlB,CAAT,CAA8BC,EAA9B,GAAmC,CAAtD,GAA0D,CADjD;AAEf,cAAQnB,KAFO;AAGf,eAASE,KAHM;AAIf,aAAOE,GAJQ;AAKf,gBAAUE,MALK;AAMf,cAAQE,IANO;AAOf,eAASG,KAPM;AAQf,iBAAWE;AARI,KAAjB;AAUAG,IAAAA,CAAC,CAACI,cAAF;AACD,GAvBD;;AAyBA,QAAMC,WAAW,GAAIL,CAAD,IAAO;AACzBjB,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAiB,IAAAA,CAAC,CAACI,cAAF;AACD,GAHD;;AAKA,sBACE;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAqC,IAAA,QAAQ,EAAEL,YAA/C;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,OAAlB;AAA0B,MAAA,OAAO,EAAEM,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAC4D;AAAA;AAAA;AAAA;AAAA,YAD5D,eAEE;AAAA,uCACO;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADP,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AACE,QAAA,WAAW,EAAC,wBADd;AAEE,QAAA,KAAK,EAAErB,KAFT;AAGE,QAAA,QAAQ,EAAGgB,CAAD,IAAOM,WAAW,CAACN,CAAC,CAACO,MAAF,CAASC,KAAV,CAH9B;AAIE,QAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAUU;AAAA;AAAA;AAAA;AAAA,YAVV,eAWE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GApEQ5B,e;;KAAAA,e;AAoER;AAED,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\nimport findMinMax from \"./findMinMax\";\n\n/*\n   UI for adding new intervals.\n*/\n\nfunction NewIntervalForm({intervals, setIntervals, setToggle}) {\n  const [label, setLabel] = useState(\"\");\n  const [start, setStart] = useState();\n  const [end, setEnd] = useState();\n  //optional parameters\n  const [yStart, setYStart] = useState(0);\n  const [yEnd, setYEnd] = useState(findMinMax(data)[3] + 10);\n  const [color, setColor] = useState(\"black\");\n  const [opacity, setOpacity] = useState(1);\n\n  // const handleChange = (e) => {\n  //   //if it's a checkbox, evaluate if checked. otherwise, evaluate the value\n  //   const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n  //   const name = e.target.name;\n  //   // console.log(value);\n  //   // setLabel(value);\n  //   this[\"set\"+name](value);\n  //\n  //   // setValue({\n  //   //   [name]: value\n  //   // });\n  // }\n\n  const handleSubmit = (e) => {\n    //generate new interval\n    /*\n    \"id\": 1,\n    \"name\": \"interval2\",\n    \"start\":1623,\n    \"end\":1630,\n    \"yStart\": 10,\n    \"yEnd\":30,\n    \"color\": \"green\",\n    \"opacity\": 0.25\n    */\n    const interval = {\n      \"id\": intervals.length ? intervals[intervals.length-1].id + 1 : 0,\n      \"name\": label,\n      \"start\": start,\n      \"end\": end,\n      \"yStart\": yStart,\n      \"yEnd\": yEnd,\n      \"color\": color,\n      \"opacity\": opacity\n    }\n    e.preventDefault();\n  };\n\n  const handleClose = (e) => {\n    setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"ui absolute center\" onSubmit={handleSubmit}>\n      <button className=\"right\" onClick={handleClose}>x</button><br/>\n      <label>\n        Label<span className=\"red\">* </span>\n        <input type=\"text\"\n          placeholder=\"any unicode characters\"\n          value={label}\n          onChange={(e) => setFileName(e.target.value)}\n          required\n        />\n      </label><br/>\n      <input type=\"submit\" value=\"Submit\"/>\n    </form>\n  )\n};\n\nexport default NewIntervalForm;\n"]},"metadata":{},"sourceType":"module"}