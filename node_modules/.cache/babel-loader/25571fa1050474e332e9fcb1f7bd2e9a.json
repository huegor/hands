{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Hands.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport HandsFree from 'handsfree'; // import hands from '@mediapipe/hands';\n//https://handsfree.js.org\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Hands(props) {\n  _s();\n\n  //init\n  useEffect(() => {\n    const handsFree = new HandsFree({\n      hands: {\n        enabled: true,\n        maxNumHands: 2\n      }\n    });\n    handsFree.enablePlugins('browser');\n    handsFree.start(() => {\n      handsFree.pause();\n    }); //initializes loop but pauses it instantly\n  }, []); //camera on\n  // handsFree.on('gotUserMedia', () => console.log(\"streaming\"));\n  // handsFree.start(()=>{handsFree.pause()}); //initializes loop but pauses it instantly\n  // handsFree.isLooping = props.enabled; //manually stop the loop\n  //cleanup/unsubscribe function?\n\n  const handleClick = e => {\n    e.preventDefault();\n\n    if (!props.enabled) {\n      props.setEnabled(true); // handsFree.start()\n\n      handsFree.unpause();\n      console.log(handsFree);\n      handsFree.on('data', data => {\n        console.log(data.hands ? data.hands.pointer : null); // console.log(data.hands.pointer);\n      });\n    } else {\n      handsFree.pause(); // handsFree.stop(); //just refreshes the whole damn thing\n\n      props.setEnabled(false);\n    }\n  };\n  /*\n    TODO:\n    - draw palm Positions\n      - shrink for click\n      - something for drag (oblong?)\n    - add \"click\" plugin\n      - create plugin for \"horns\" hand gesture\n      - on horns, new MouseEvent\n    - add \"pause\" plugin\n      - on fist, pause/stop handsFree\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: props.enabled ? `disable hands` : `enable hands`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Hands, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Hands;\n;\nexport default Hands;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hands\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Hands.js"],"names":["React","useEffect","HandsFree","Hands","props","handsFree","hands","enabled","maxNumHands","enablePlugins","start","pause","handleClick","e","preventDefault","setEnabled","unpause","console","log","on","data","pointer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CACA;AAEA;;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,SAAS,GAAG,IAAIH,SAAJ,CAAc;AAC9BI,MAAAA,KAAK,EAAC;AACJC,QAAAA,OAAO,EAAE,IADL;AAEJC,QAAAA,WAAW,EAAE;AAFT;AADwB,KAAd,CAAlB;AAMAH,IAAAA,SAAS,CAACI,aAAV,CAAwB,SAAxB;AACAJ,IAAAA,SAAS,CAACK,KAAV,CAAgB,MAAI;AAACL,MAAAA,SAAS,CAACM,KAAV;AAAkB,KAAvC,EARc,CAQ4B;AAE3C,GAVQ,EAUN,EAVM,CAAT,CAFoB,CAcpB;AACA;AACA;AACA;AACA;;AAEA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACV,KAAK,CAACG,OAAX,EAAmB;AACjBH,MAAAA,KAAK,CAACW,UAAN,CAAiB,IAAjB,EADiB,CAEjB;;AACAV,MAAAA,SAAS,CAACW,OAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;AACAA,MAAAA,SAAS,CAACc,EAAV,CAAa,MAAb,EAAsBC,IAAD,IAAU;AAC7BH,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACd,KAAL,GAAWc,IAAI,CAACd,KAAL,CAAWe,OAAtB,GAA8B,IAA1C,EAD6B,CAE7B;AACD,OAHD;AAID,KATD,MASO;AACLhB,MAAAA,SAAS,CAACM,KAAV,GADK,CAEL;;AACAP,MAAAA,KAAK,CAACW,UAAN,CAAiB,KAAjB;AACD;AACF,GAhBD;AAkBA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGE,sBACE;AAAQ,IAAA,OAAO,EAAEH,WAAjB;AAAA,cACGR,KAAK,CAACG,OAAN,GAAe,eAAf,GAA+B;AADlC;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxDQJ,K;;KAAAA,K;AAwDR;AAED,eAAeA,KAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport HandsFree from 'handsfree';\n// import hands from '@mediapipe/hands';\n\n//https://handsfree.js.org\n\nfunction Hands(props) {\n  //init\n  useEffect(() => {\n    const handsFree = new HandsFree({\n      hands:{\n        enabled: true,\n        maxNumHands: 2\n      }\n    });\n    handsFree.enablePlugins('browser');\n    handsFree.start(()=>{handsFree.pause()}); //initializes loop but pauses it instantly\n\n  }, []);\n\n  //camera on\n  // handsFree.on('gotUserMedia', () => console.log(\"streaming\"));\n  // handsFree.start(()=>{handsFree.pause()}); //initializes loop but pauses it instantly\n  // handsFree.isLooping = props.enabled; //manually stop the loop\n  //cleanup/unsubscribe function?\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    if (!props.enabled){\n      props.setEnabled(true);\n      // handsFree.start()\n      handsFree.unpause();\n      console.log(handsFree);\n      handsFree.on('data', (data) => {\n        console.log(data.hands?data.hands.pointer:null);\n        // console.log(data.hands.pointer);\n      });\n    } else {\n      handsFree.pause();\n      // handsFree.stop(); //just refreshes the whole damn thing\n      props.setEnabled(false);\n    }\n  }\n\n  /*\n    TODO:\n    - draw palm Positions\n      - shrink for click\n      - something for drag (oblong?)\n    - add \"click\" plugin\n      - create plugin for \"horns\" hand gesture\n      - on horns, new MouseEvent\n    - add \"pause\" plugin\n      - on fist, pause/stop handsFree\n\n  */\n\n  return (\n    <button onClick={handleClick}>\n      {props.enabled?`disable hands`:`enable hands`}\n    </button>\n  )\n};\n\nexport default Hands;\n"]},"metadata":{},"sourceType":"module"}