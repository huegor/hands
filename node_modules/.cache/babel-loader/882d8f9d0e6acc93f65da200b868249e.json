{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./history.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewPointForm from \"./components/NewPointForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\"; // import findMinMax from \"./components/findMinMax\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ToolsBar(props) {\n  const [toggleLabel, setToggleLabel] = true;\n\n  const handleClick = e => {\n    switch (e.target.id) {\n      case 'toggleLabel':\n        toggleLabel ? setToggleLabel(false) : setToggleLabel(true);\n        break;\n\n      case 'addTemporalObject':\n        console.log(\"hi\");\n        break;\n      // case 'save': //save JSON as file to computer\n      //   // console.log(this.props.src);\n      //   const fileData = JSON.stringify(this.props.src);\n      //   const blob = new Blob([fileData], {type: \"text/plain\"});\n      //   const url = URL.createObjectURL(blob);\n      //   const link = document.createElement('a');\n      //   link.download = `data.json`;\n      //   link.href = url;\n      //   link.click();\n      // break\n\n      default:\n        props.setToggle(e.target.id);\n        console.log(props.data);\n    }\n\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"ui relative\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addTemporalObject\",\n          onClick: handleClick,\n          children: \"Add Temporal Object\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"toggleLabel\",\n          onClick: handleClick,\n          children: toggleLabel ? \"Toggle IDs\" : \"Toggle Labels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"settings\",\n          onClick: handleClick,\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"import\",\n          onClick: handleClick,\n          children: \"Import\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"save\",\n          onClick: handleClick,\n          children: \"Save & Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ToolsBar;\n\nfunction App() {\n  _s();\n\n  //blank ChronoJSON template\n  const defaultJSON = {\n    \"imgs\": [],\n    \"nodes\": [[]],\n    \"intervals\": []\n  }; //user defined\n\n  const radius = 5; //for the entire ChronoJSON\n\n  const [src, setSrc] = useState(Data); //for ChronoJSON history\n\n  const [history, setHistory] = useState([]); //for toggling the active dataset\n\n  const [activeData, setActiveData] = useState(0); //pertaining to datapoints only\n\n  const [data, setData] = useState(src.nodes[activeData]); //todo: comparative timelines, layering\n  //pertaining to intervals only\n\n  const [intervals, setIntervals] = useState(src.intervals); //UI window toggles\n\n  const [toggle, setToggle] = useState(); //UI info boxes for points, lines, etc.\n\n  const [info, setInfo] = useState();\n  /*\n    TODO:\n    - findMinMax() adjust less frequently. ie: if new data can be panned to, no need to adjust viewport\n    - for piecewise timeline, make function that generates different graphics\n    - create a master array of all snapshots of data (for scrubber)\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToolsBar, {\n      setToggle: setToggle,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), toggle === \"addPoint\" ? /*#__PURE__*/_jsxDEV(NewPointForm, {\n      data: data,\n      setData: setData,\n      setToggle: setToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 30\n    }, this) : null, toggle === \"save\" ? /*#__PURE__*/_jsxDEV(ExportDataForm, {\n      src: src,\n      data: data,\n      activeData: activeData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 26\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      className: \"container fullHeight\",\n      children: [data.length ? /*#__PURE__*/_jsxDEV(Graphic, {\n        data: data,\n        setData: setData,\n        intervals: intervals,\n        setIntervals: setIntervals,\n        radius: radius,\n        setInfo: setInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexCenter\",\n        children: [\"Upload data or \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setToggle(\"addPoint\"),\n          children: \"Add new point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), src.imgs.length ? /*#__PURE__*/_jsxDEV(Image, {\n        urls: src.imgs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 28\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), info ? /*#__PURE__*/_jsxDEV(InfoBox, {\n      info: info,\n      data: data,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(App, \"ayZ+TZc6AAY1LWqLlM0lcwb299E=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ToolsBar\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js"],"names":["React","useState","Data","Graphic","Image","NewPointForm","InfoBox","ExportDataForm","ToolsBar","props","toggleLabel","setToggleLabel","handleClick","e","target","id","console","log","setToggle","data","preventDefault","App","defaultJSON","radius","src","setSrc","history","setHistory","activeData","setActiveData","setData","nodes","intervals","setIntervals","toggle","info","setInfo","length","imgs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./history.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewPointForm from \"./components/NewPointForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\";\n// import findMinMax from \"./components/findMinMax\";\n\n\n\nfunction ToolsBar(props) {\n  const [toggleLabel, setToggleLabel] = true;\n\n  const handleClick = (e) => {\n    switch (e.target.id) {\n      case 'toggleLabel':\n        toggleLabel ?\n          setToggleLabel(false)\n        : setToggleLabel(true);\n      break\n      case 'addTemporalObject':\n        console.log(\"hi\");\n      break\n      // case 'save': //save JSON as file to computer\n      //   // console.log(this.props.src);\n      //   const fileData = JSON.stringify(this.props.src);\n      //   const blob = new Blob([fileData], {type: \"text/plain\"});\n      //   const url = URL.createObjectURL(blob);\n      //   const link = document.createElement('a');\n      //   link.download = `data.json`;\n      //   link.href = url;\n      //   link.click();\n      // break\n      default:\n        props.setToggle(e.target.id);\n        console.log(props.data);\n    }\n    e.preventDefault();\n  }\n\n  return (\n\n    <nav className=\"ui relative\">\n      <ul>\n        <li><button id=\"addTemporalObject\" onClick={handleClick}>Add Temporal Object</button></li>\n        <li><button id=\"toggleLabel\" onClick={handleClick}>{toggleLabel ? \"Toggle IDs\" : \"Toggle Labels\"}</button></li>\n        <li><button id=\"settings\" onClick={handleClick}>Settings</button></li>\n        <li><button id=\"import\" onClick={handleClick}>Import</button></li>\n        <li><button id=\"save\" onClick={handleClick}>Save & Export</button></li>\n      </ul>\n    </nav>\n\n  );\n}\n\n\nfunction App() {\n\n  //blank ChronoJSON template\n  const defaultJSON = {\n    \"imgs\": [],\n    \"nodes\":\n    [\n      []\n    ],\n    \"intervals\":\n    []\n  };\n\n  //user defined\n  const radius = 5;\n\n  //for the entire ChronoJSON\n  const [src, setSrc] = useState(Data);\n\n  //for ChronoJSON history\n  const [history, setHistory] = useState([])\n\n  //for toggling the active dataset\n  const [activeData, setActiveData] = useState(0);\n  //pertaining to datapoints only\n  const [data, setData] = useState(src.nodes[activeData]); //todo: comparative timelines, layering\n  //pertaining to intervals only\n  const [intervals, setIntervals] = useState(src.intervals);\n  //UI window toggles\n  const [toggle, setToggle] = useState();\n  //UI info boxes for points, lines, etc.\n  const [info, setInfo] = useState();\n\n  /*\n    TODO:\n    - findMinMax() adjust less frequently. ie: if new data can be panned to, no need to adjust viewport\n    - for piecewise timeline, make function that generates different graphics\n    - create a master array of all snapshots of data (for scrubber)\n  */\n\n  return (\n    <>\n      <ToolsBar setToggle={setToggle} data={data}/>\n      {toggle===\"addPoint\" ? <NewPointForm data={data} setData={setData} setToggle={setToggle}/> : null}\n      {toggle===\"save\" ? <ExportDataForm src={src} data={data} activeData={activeData}/> : null}\n      <div id=\"main\" className=\"container fullHeight\">\n        {data.length ?\n          <Graphic\n            data={data}\n            setData={setData}\n            intervals={intervals}\n            setIntervals={setIntervals}\n            radius={radius}\n            setInfo={setInfo}\n          />\n          : <div className=\"flexCenter\">Upload data or <button onClick={() => setToggle(\"addPoint\")}>Add new point</button></div>\n        }\n        {src.imgs.length ? <Image urls={src.imgs}/> : null}\n      </div>\n      {info ? <InfoBox info={info} data={data} setData={setData}/> : null}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}