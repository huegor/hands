{"ast":null,"code":"import React from 'react';\n/*\n   process raw data in function that extract following arrays:\n   0: of all nodes excluding loose points\n   1: from 1, all links between nodes, {source, target, color}\n\n   Graphic component will be passed these for use in this way:\n   - [1] for drawing linkHorizontal\n   - Data.nodes for drawing cirlces and labels\n*/\n\nfunction generateLinks(data) {\n  // const nodes = []; //array of all nodes that are NOT detached\n  const links = []; //array of all node links\n  /// IMPORTANT: all ending nodes must be marked w target:null ///\n\n  data.forEach((item, i) => {\n    if (item.target !== null) {\n      //detached points are defined w target: null as opposed to being undefined\n      // nodes.push(item);\n      if (item.target) {\n        //for nodes w multiple targets, create link for each target\n        item.target.forEach(n => {\n          links.push({\n            source: item,\n            target: data[n],\n            color: item.lineColor\n          });\n        });\n      } else {\n        links.push({\n          source: item,\n          target: data[i + 1],\n          color: item.lineColor\n        });\n      }\n\n      ;\n    }\n  });\n  return links;\n}\n\n;\nexport default generateLinks;","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/generateLinks.js"],"names":["React","generateLinks","data","links","forEach","item","i","target","n","push","source","color","lineColor"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B;AACA,QAAMC,KAAK,GAAG,EAAd,CAF2B,CAET;AAElB;;AAEAD,EAAAA,IAAI,CAACE,OAAL,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AACxB,QAAID,IAAI,CAACE,MAAL,KAAgB,IAApB,EAA0B;AAAE;AAC1B;AACA,UAAIF,IAAI,CAACE,MAAT,EAAiB;AAAE;AACjBF,QAAAA,IAAI,CAACE,MAAL,CAAYH,OAAZ,CAAqBI,CAAD,IAAO;AACzBL,UAAAA,KAAK,CAACM,IAAN,CAAW;AAACC,YAAAA,MAAM,EAACL,IAAR;AAAcE,YAAAA,MAAM,EAACL,IAAI,CAACM,CAAD,CAAzB;AAA8BG,YAAAA,KAAK,EAACN,IAAI,CAACO;AAAzC,WAAX;AACD,SAFD;AAGD,OAJD,MAIO;AACLT,QAAAA,KAAK,CAACM,IAAN,CAAW;AAACC,UAAAA,MAAM,EAACL,IAAR;AAAcE,UAAAA,MAAM,EAACL,IAAI,CAACI,CAAC,GAAC,CAAH,CAAzB;AAAgCK,UAAAA,KAAK,EAACN,IAAI,CAACO;AAA3C,SAAX;AACD;;AAAA;AACF;AACF,GAXD;AAYA,SAAOT,KAAP;AACD;;AAAA;AAED,eAAeF,aAAf","sourcesContent":["import React from 'react';\n\n/*\n   process raw data in function that extract following arrays:\n   0: of all nodes excluding loose points\n   1: from 1, all links between nodes, {source, target, color}\n\n   Graphic component will be passed these for use in this way:\n   - [1] for drawing linkHorizontal\n   - Data.nodes for drawing cirlces and labels\n*/\n\nfunction generateLinks(data) {\n  // const nodes = []; //array of all nodes that are NOT detached\n  const links = []; //array of all node links\n\n  /// IMPORTANT: all ending nodes must be marked w target:null ///\n\n  data.forEach((item, i) => {\n    if (item.target !== null) { //detached points are defined w target: null as opposed to being undefined\n      // nodes.push(item);\n      if (item.target) { //for nodes w multiple targets, create link for each target\n        item.target.forEach((n) => {\n          links.push({source:item, target:data[n], color:item.lineColor});\n        });\n      } else {\n        links.push({source:item, target:data[i+1], color:item.lineColor})\n      };\n    }\n  });\n  return links;\n};\n\nexport default generateLinks;\n"]},"metadata":{},"sourceType":"module"}