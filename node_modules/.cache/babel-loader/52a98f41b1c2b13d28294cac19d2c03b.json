{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./data.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewPointForm from \"./components/NewPointForm\";\nimport NewIntervalForm from \"./components/NewIntervalForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\"; // import ImportDataForm from \"./components/ImportDataForm\";\n\nimport ToolsBar from \"./components/ToolsBar\";\nimport Layers from \"./components/Layers\";\nimport Scrubber from \"./components/Scrubber\";\nimport generateLinks from \"./components/generateLinks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Legend() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui absolute dropdown rightPos\",\n    children: [\"Legend\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: 'black'\n          },\n          children: \"\\u2003\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), \" Hank\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: 'red'\n          },\n          children: \"\\u2003\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), \" Peggy\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: '#4DA6FF'\n          },\n          children: \"\\u2003\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), \" Bobby\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Legend;\n\nfunction SelectedDisplay(props) {\n  if (!props.target) {\n    //no selection\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Selected: None\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  } else if (props.target.source) {\n    //link\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected: \", props.target.source.name, \" (\", props.target.source.id, \") \\u2013 \", props.target.target.name, \" (\", props.target.target.id, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  } else if (props.target.start) {\n    //interval\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected: \", props.target.name, \" (\", props.target.start, \" - \", props.target.end, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  } else {\n    //node\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected: \", props.target.name, \" (\", props.target.id, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_c2 = SelectedDisplay;\n;\n\nfunction Certainty(props) {\n  _s();\n\n  // console.log(props.target);\n  const [input, setInput] = useState(); //set opacity of target\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (props.target.start) {\n      //interval\n      const newIntervals = [...props.intervals];\n      const interval = newIntervals.find(n => n.id === props.target.id);\n      interval.opacity = parseFloat(input);\n      props.setIntervals(newIntervals);\n      return;\n    }\n\n    const newNodes = [...props.data];\n\n    if (props.target.source) {\n      //link\n      const node = newNodes.find(n => n.id === props.target.source.id);\n      node.lineOpacity = parseFloat(input);\n      console.log(node);\n    } else {\n      //node\n      const node = newNodes.find(n => n.id === props.target.id);\n      node.opacity = parseFloat(input);\n    }\n\n    props.setData(newNodes);\n  };\n\n  const handleClose = e => {\n    props.setToggle(null);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"right\",\n      onClick: handleClose,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(SelectedDisplay, {\n      target: props.target\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Certainty\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"0 (never) - 1 (certain)\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Certainty, \"+E2veEehVihf73G+Rv7Nq0ryIOw=\");\n\n_c3 = Certainty;\n\nfunction Importance(props) {\n  _s2();\n\n  //TODO: lines, negatives, \"steps\"\n  const [input, setInput] = useState(); // const [selectionDisplay, setSD] = useState();\n  // // const selectionDisplay = () => {\n  // //   // switch (props.target) {\n  // //   //   case !props.target:\n  // //   //     \"None\"\n  // //   //   break\n  // //   //   case\n  // //   // }\n  //   if (!props.target) { //no selection\n  //     setSD(\"None\");\n  //   } else if (props.target.source) { //link\n  //     setSD(`${props.target.source.name} (${props.target.source.id}) â€“ ${props.target.target.name} (${props.target.target.id})`);\n  //   } else if (props.target.start) { //interval\n  //     setSD(`${props.target.name} (${props.target.start} - ${props.target.end})`);\n  //   } else { //node\n  //     setSD(`${props.target.name} (${props.target.id})`);\n  //   }\n  // // };\n  //todo: make for line also\n\n  const handleSubmit = e => {\n    e.preventDefault(); //set opacity of target\n\n    const newNodes = [...props.data];\n    const node = newNodes.find(n => n.id === props.target.id);\n    node.radius = node.radius ? node.radius * (1 + input / 2) : props.radius * (1 + input / 2); //if radius defined, multiply. otherwise, use default radius\n\n    props.setData(newNodes);\n  };\n\n  const handleClose = e => {\n    props.setToggle(null);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"right\",\n      onClick: handleClose,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(SelectedDisplay, {\n      target: props.target\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Importance\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"ints relative to 0 (+ and -)\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Importance, \"+E2veEehVihf73G+Rv7Nq0ryIOw=\");\n\n_c4 = Importance;\n\nfunction App() {\n  _s3();\n\n  //blank ChronoJSON template\n  const nullData = {\n    \"imgs\": [],\n    \"nodes\": [[]],\n    \"intervals\": []\n  }; //user defined\n\n  const radius = 5; //for the entire ChronoJSON\n\n  const [src, setSrc] = useState(Data); //for ChronoJSON history\n\n  const [history, setHistory] = useState([]); //for toggling the active data as used by scrubber\n\n  const [activeData, setActiveData] = useState(0); //for toggling the active layer\n\n  const [activeLayer, setActiveLayer] = useState(); //initialize datapoints\n\n  const [data, setData] = useState(src.nodes[activeData]); //initialize lines\n  // const [links, setLinks] = useState(generateLinks(src.nodes[activeData]))\n  //initialize intervals\n\n  const [intervals, setIntervals] = useState(src.intervals); //initialize scales\n\n  const [scales, setScales] = useState(src.scales); //toggles datapoint IDs vs labels\n\n  const [showLabel, setShowLabel] = useState(true); //UI window toggles\n\n  const [toggle, setToggle] = useState(); //UI info boxes for points, lines, etc.\n\n  const [info, setInfo] = useState(); //Inflection info\n\n  const [inflectTarget, setInflectTarget] = useState(); // console.log(info);\n\n  /*\n    TODO:\n    - for piecewise timeline, make function that generates different graphics\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToolsBar, {\n      toggle: toggle,\n      setToggle: setToggle,\n      data: data,\n      showLabel: showLabel,\n      setShowLabel: setShowLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), toggle === \"scrubber\" && /*#__PURE__*/_jsxDEV(Scrubber, {\n      activeData: activeData,\n      setActiveData: setActiveData,\n      src: src,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 31\n    }, this), toggle === \"addPoint\" && /*#__PURE__*/_jsxDEV(NewPointForm, {\n      data: data,\n      setData: setData,\n      setToggle: setToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 31\n    }, this), toggle === \"addInterval\" && /*#__PURE__*/_jsxDEV(NewIntervalForm, {\n      intervals: intervals,\n      setIntervals: setIntervals,\n      setToggle: setToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 34\n    }, this), toggle === \"save\" && /*#__PURE__*/_jsxDEV(ExportDataForm, {\n      src: src,\n      data: data,\n      activeData: activeData,\n      setToggle: setToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 27\n    }, this), toggle === \"legend\" && /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 29\n    }, this), toggle === \"layers\" && /*#__PURE__*/_jsxDEV(Layers, {\n      activeLayer: activeLayer,\n      setActiveLayer: setActiveLayer,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 29\n    }, this), toggle === \"certainty\" && /*#__PURE__*/_jsxDEV(Certainty, {\n      target: inflectTarget,\n      setToggle: setToggle,\n      data: data,\n      setData: setData,\n      intervals: intervals,\n      setIntervals: setIntervals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), toggle === \"importance\" && /*#__PURE__*/_jsxDEV(Importance, {\n      target: inflectTarget,\n      setToggle: setToggle,\n      data: data,\n      setData: setData,\n      intervals: intervals,\n      setIntervals: setIntervals,\n      radius: radius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      className: \"container fullHeight\",\n      children: [data.length ? /*#__PURE__*/_jsxDEV(Graphic, {\n        data: data,\n        setData: setData,\n        intervals: intervals,\n        setIntervals: setIntervals,\n        radius: radius,\n        info: info,\n        setInfo: setInfo,\n        setInflectTarget: setInflectTarget,\n        showLabel: showLabel,\n        activeLayer: activeLayer,\n        toggle: toggle,\n        scales: scales,\n        setScales: setScales,\n        links: links\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexCenter\",\n        children: [\"Upload data or \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setToggle(\"addPoint\"),\n          children: \"Add new point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }, this), src.imgs.length > 0 && /*#__PURE__*/_jsxDEV(Image, {\n        urls: src.imgs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), info && /*#__PURE__*/_jsxDEV(InfoBox, {\n      info: info,\n      setInfo: setInfo,\n      data: data,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n}\n\n_s3(App, \"UX7yc62I+5yWjZNAkUNxSTqrtrM=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Legend\");\n$RefreshReg$(_c2, \"SelectedDisplay\");\n$RefreshReg$(_c3, \"Certainty\");\n$RefreshReg$(_c4, \"Importance\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js"],"names":["React","useState","Data","Graphic","Image","NewPointForm","NewIntervalForm","InfoBox","ExportDataForm","ToolsBar","Layers","Scrubber","generateLinks","Legend","backgroundColor","SelectedDisplay","props","target","source","name","id","start","end","Certainty","input","setInput","handleSubmit","e","preventDefault","newIntervals","intervals","interval","find","n","opacity","parseFloat","setIntervals","newNodes","data","node","lineOpacity","console","log","setData","handleClose","setToggle","value","Importance","radius","App","nullData","src","setSrc","history","setHistory","activeData","setActiveData","activeLayer","setActiveLayer","nodes","scales","setScales","showLabel","setShowLabel","toggle","info","setInfo","inflectTarget","setInflectTarget","length","links","imgs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./data.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewPointForm from \"./components/NewPointForm\";\nimport NewIntervalForm from \"./components/NewIntervalForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\";\n// import ImportDataForm from \"./components/ImportDataForm\";\nimport ToolsBar from \"./components/ToolsBar\";\nimport Layers from \"./components/Layers\";\nimport Scrubber from \"./components/Scrubber\"\nimport generateLinks from \"./components/generateLinks\";\n\n\n\nfunction Legend() {\n  return (\n    <div className=\"ui absolute dropdown rightPos\">\n      Legend\n      <ul>\n        <li><span style={{backgroundColor: 'black'}}>&#8195;</span> Hank</li>\n        <li><span style={{backgroundColor: 'red'}}>&#8195;</span> Peggy</li>\n        <li><span style={{backgroundColor: '#4DA6FF'}}>&#8195;</span> Bobby</li>\n      </ul>\n    </div>\n  )\n}\n\nfunction SelectedDisplay(props){\n  if (!props.target) { //no selection\n    return <p>Selected: None</p>;\n  } else if (props.target.source) { //link\n    return <p>Selected: {props.target.source.name} ({props.target.source.id}) â€“ {props.target.target.name} ({props.target.target.id})</p>;\n  } else if (props.target.start) { //interval\n    return <p>Selected: {props.target.name} ({props.target.start} - {props.target.end})</p>;\n  } else { //node\n    return <p>Selected: {props.target.name} ({props.target.id})</p>;\n  }\n};\n\nfunction Certainty(props) {\n  // console.log(props.target);\n\n  const [input, setInput] = useState();\n\n  //set opacity of target\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (props.target.start) { //interval\n      const newIntervals = [...props.intervals];\n      const interval = newIntervals.find(n => n.id === props.target.id);\n      interval.opacity = parseFloat(input);\n      props.setIntervals(newIntervals);\n      return;\n    }\n\n    const newNodes = [...props.data];\n\n    if (props.target.source) { //link\n      const node = newNodes.find(n => n.id === props.target.source.id);\n      node.lineOpacity = parseFloat(input);\n      console.log(node)\n    } else { //node\n      const node = newNodes.find(n => n.id === props.target.id);\n      node.opacity = parseFloat(input);\n    }\n    props.setData(newNodes);\n  };\n\n  const handleClose = (e) => {\n    props.setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"ui absolute center\" onSubmit={handleSubmit}>\n      <button className=\"right\" onClick={handleClose}>x</button><br/>\n      <SelectedDisplay target={props.target}/>\n      <label>\n        Certainty\n        <input type=\"text\"\n          placeholder=\"0 (never) - 1 (certain)\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          required\n        />\n      </label><br/>\n      <input type=\"submit\" value=\"Submit\"/>\n    </form>\n  )\n}\n\nfunction Importance(props) { //TODO: lines, negatives, \"steps\"\n\n  const [input, setInput] = useState();\n  // const [selectionDisplay, setSD] = useState();\n  // // const selectionDisplay = () => {\n  // //   // switch (props.target) {\n  // //   //   case !props.target:\n  // //   //     \"None\"\n  // //   //   break\n  // //   //   case\n  // //   // }\n  //   if (!props.target) { //no selection\n  //     setSD(\"None\");\n  //   } else if (props.target.source) { //link\n  //     setSD(`${props.target.source.name} (${props.target.source.id}) â€“ ${props.target.target.name} (${props.target.target.id})`);\n  //   } else if (props.target.start) { //interval\n  //     setSD(`${props.target.name} (${props.target.start} - ${props.target.end})`);\n  //   } else { //node\n  //     setSD(`${props.target.name} (${props.target.id})`);\n  //   }\n  // // };\n\n  //todo: make for line also\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    //set opacity of target\n    const newNodes = [...props.data];\n    const node = newNodes.find(n => n.id === props.target.id);\n    node.radius = node.radius ? node.radius*(1+input/2) : props.radius*(1+input/2); //if radius defined, multiply. otherwise, use default radius\n    props.setData(newNodes);\n\n  };\n\n  const handleClose = (e) => {\n    props.setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"ui absolute center\" onSubmit={handleSubmit}>\n      <button className=\"right\" onClick={handleClose}>x</button><br/>\n      <SelectedDisplay target={props.target}/>\n      <label>\n        Importance\n        <input type=\"number\"\n          placeholder=\"ints relative to 0 (+ and -)\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          required\n        />\n      </label><br/>\n      <input type=\"submit\" value=\"Submit\"/>\n    </form>\n  )\n}\n\n\nfunction App() {\n  //blank ChronoJSON template\n  const nullData = {\n    \"imgs\": [],\n    \"nodes\":\n    [\n      []\n    ],\n    \"intervals\":\n    []\n  };\n\n  //user defined\n  const radius = 5;\n\n  //for the entire ChronoJSON\n  const [src, setSrc] = useState(Data);\n\n  //for ChronoJSON history\n  const [history, setHistory] = useState([])\n\n  //for toggling the active data as used by scrubber\n  const [activeData, setActiveData] = useState(0);\n  //for toggling the active layer\n  const [activeLayer, setActiveLayer] = useState();\n\n  //initialize datapoints\n  const [data, setData] = useState(src.nodes[activeData]);\n  //initialize lines\n  // const [links, setLinks] = useState(generateLinks(src.nodes[activeData]))\n  //initialize intervals\n  const [intervals, setIntervals] = useState(src.intervals);\n  //initialize scales\n  const [scales, setScales] = useState(src.scales);\n  //toggles datapoint IDs vs labels\n  const [showLabel, setShowLabel] = useState(true);\n\n  //UI window toggles\n  const [toggle, setToggle] = useState();\n  //UI info boxes for points, lines, etc.\n  const [info, setInfo] = useState();\n  //Inflection info\n  const [inflectTarget, setInflectTarget] = useState();\n\n  // console.log(info);\n  /*\n    TODO:\n    - for piecewise timeline, make function that generates different graphics\n  */\n\n  return (\n    <>\n      <ToolsBar toggle={toggle} setToggle={setToggle} data={data} showLabel={showLabel} setShowLabel={setShowLabel}/>\n      {toggle===\"scrubber\" && <Scrubber activeData={activeData} setActiveData={setActiveData} src={src} setData={setData}/>}\n      {toggle===\"addPoint\" && <NewPointForm data={data} setData={setData} setToggle={setToggle}/>}\n      {toggle===\"addInterval\" && <NewIntervalForm intervals={intervals} setIntervals={setIntervals} setToggle={setToggle}/>}\n      {toggle===\"save\" && <ExportDataForm src={src} data={data} activeData={activeData} setToggle={setToggle}/>}\n      {toggle===\"legend\" && <Legend/>}\n      {toggle===\"layers\" && <Layers activeLayer={activeLayer} setActiveLayer={setActiveLayer} data={data}/>}\n      {toggle===\"certainty\" &&\n        <Certainty\n          target={inflectTarget}\n          setToggle={setToggle}\n          data={data}\n          setData={setData}\n          intervals={intervals}\n          setIntervals={setIntervals}\n        />\n      }\n      {toggle===\"importance\" &&\n        <Importance\n          target={inflectTarget}\n          setToggle={setToggle}\n          data={data}\n          setData={setData}\n          intervals={intervals}\n          setIntervals={setIntervals}\n          radius={radius}\n        />\n      }\n      <div id=\"main\" className=\"container fullHeight\">\n        {data.length ?\n          <Graphic\n            data={data}\n            setData={setData}\n            intervals={intervals}\n            setIntervals={setIntervals}\n            radius={radius}\n            info={info}\n            setInfo={setInfo}\n            setInflectTarget={setInflectTarget}\n            showLabel={showLabel}\n            activeLayer={activeLayer}\n            toggle={toggle}\n            scales={scales}\n            setScales={setScales}\n            links={links}\n          />\n          : <div className=\"flexCenter\">Upload data or <button onClick={() => setToggle(\"addPoint\")}>Add new point</button></div>\n        }\n        {src.imgs.length>0 && <Image urls={src.imgs}/>}\n      </div>\n      {info && <InfoBox info={info} setInfo={setInfo} data={data} setData={setData}/>}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}