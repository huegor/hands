{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InfoBox.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n// import DeletePoint from \"./DeletePoint\";\n\n/*\n  - pass object info and mouseclick position to component\n  - component is a div set at mouseclick position and displays object info as text\n*/\nfunction InfoBox({\n  info,\n  data,\n  setData\n}) {\n  const target = info.target;\n  var content = null;\n  /*\n    deleting point i:\n    - find data[i-1] and set its target to data[i+1]. then remove data[i] from array\n    - if data[i] is first point, just remove from array\n    - if data[i-1] is null, remove from array and update ID of every node after\n     - no prevNode => just delete\n    - prevNode exists but is not linked => just delete\n    - prevNode exists and is linked, but no nextNode => set prevNode target to null, then delete\n    - prevNode exists, is linked, and has next node => set prevNode target to nextNode, then delete\n    - prevNode exists, is linked to multiple nodes => remove target node from prevNode, then delete\n  */\n\n  const handleDelete = e => {\n    e.preventDefault(); // const newData = [...data]; //always practice data hygine\n\n    const prevNode = data.find(n => n.id === target.id - 1);\n    const nextNode = data.find(n => n.id === target.id + 1); //if node has\n\n    function newData() {\n      if (prevNode && prevNode.target) {\n        const updatedData = data.map(n => {\n          if (n === prevNode) {\n            return \"true\"; // return (nextNode ? {...n, \"target\": target.id+1} : {...n, \"target\": null});\n          } else if (Array.isArray(n.target)) {\n            return \"true\";\n          } else {\n            return n;\n          }\n        }); // return updatedData.filter(n => n !== target);\n      } else {\n        return data.filter(n => n !== target);\n      }\n    }\n\n    console.log(newData()); // setData(newData);\n  };\n\n  switch (info.type) {\n    case 'link':\n      content = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"From: \", target.source.name, \" (\", target.source.id, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 58\n        }, this), \"To: \", target.target.name, \" (\", target.target.id, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 56\n        }, this), \"Color: \", target.color ? target.color : \"Black\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 57\n        }, this), \"Width: \", target.width ? target.width : \"1.67 (default)\"]\n      }, void 0, true);\n      break;\n\n    default:\n      content = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"ID: \", target.id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 26\n        }, this), \"Time: \", target.x, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 27\n        }, this), \"Y Position: \", target.y, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }, this), \"Target(s): \", target.target ? target.target : \"N/A\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 61\n        }, this), \"Color: \", target.color ? target.color : \"Black\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 57\n        }, this), \"Radius: \", target.radius ? target.radius : \"5 (default)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"Delete Point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui absolute\",\n    style: {\n      left: info.position[0] + 'px',\n      top: info.position[1] + 'px'\n    },\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_c = InfoBox;\nexport default InfoBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoBox\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InfoBox.js"],"names":["InfoBox","info","data","setData","target","content","handleDelete","e","preventDefault","prevNode","find","n","id","nextNode","newData","updatedData","map","Array","isArray","filter","console","log","type","source","name","color","width","x","y","radius","left","position","top"],"mappings":"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","sourcesContent":["// import DeletePoint from \"./DeletePoint\";\n/*\n  - pass object info and mouseclick position to component\n  - component is a div set at mouseclick position and displays object info as text\n*/\n\nfunction InfoBox({info, data, setData}) {\n  const target = info.target;\n  var content = null;\n\n  /*\n    deleting point i:\n    - find data[i-1] and set its target to data[i+1]. then remove data[i] from array\n    - if data[i] is first point, just remove from array\n    - if data[i-1] is null, remove from array and update ID of every node after\n\n    - no prevNode => just delete\n    - prevNode exists but is not linked => just delete\n    - prevNode exists and is linked, but no nextNode => set prevNode target to null, then delete\n    - prevNode exists, is linked, and has next node => set prevNode target to nextNode, then delete\n    - prevNode exists, is linked to multiple nodes => remove target node from prevNode, then delete\n  */\n  const handleDelete = (e) => {\n    e.preventDefault();\n    // const newData = [...data]; //always practice data hygine\n    const prevNode = data.find(n => n.id === target.id-1);\n    const nextNode = data.find(n => n.id === target.id+1);\n\n//if node has\n    function newData(){\n      if (prevNode && prevNode.target) {\n        const updatedData = data.map(n =>\n          {\n            if (n === prevNode) {\n              return (\"true\")\n              // return (nextNode ? {...n, \"target\": target.id+1} : {...n, \"target\": null});\n            } else if (Array.isArray(n.target)) {\n              return (\"true\")\n            } else {\n              return n\n            }\n          }\n        )\n        // return updatedData.filter(n => n !== target);\n      } else {\n        return data.filter(n => n !== target);\n      }\n    }\n\n    console.log(newData());\n    // setData(newData);\n  }\n\n  switch (info.type) {\n    case 'link':\n      content =\n        <>\n          From: {target.source.name} ({target.source.id})<br/>\n          To: {target.target.name} ({target.target.id})<br/>\n          Color: {target.color ? target.color : \"Black\"}<br/>\n          Width: {target.width ? target.width : \"1.67 (default)\"}\n        </>\n    break\n    default:\n      content =\n        <>\n          ID: {target.id}<br/>\n          Time: {target.x}<br/>\n          Y Position: {target.y}<br/>\n          Target(s): {target.target ? target.target : \"N/A\"}<br/>\n          Color: {target.color ? target.color : \"Black\"}<br/>\n          Radius: {target.radius ? target.radius : \"5 (default)\"}<br/>\n          <button onClick={handleDelete}>Delete Point</button>\n        </>\n  };\n\n  return (\n    <div className=\"ui absolute\" style={{left: info.position[0] + 'px', top: info.position[1] + 'px'}}>\n      {content}\n    </div>\n  );\n}\n\nexport default InfoBox;\n"]},"metadata":{},"sourceType":"module"}