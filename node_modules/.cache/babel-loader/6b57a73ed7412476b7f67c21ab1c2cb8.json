{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./data.json\";\nimport TagVisData from \"./tagVis_data.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewInstantForm from \"./components/NewInstantForm\";\nimport NewIntervalForm from \"./components/NewIntervalForm\";\nimport NewZoneForm from \"./components/NewZoneForm\";\nimport NewScaleForm from \"./components/NewScaleForm\";\nimport EditScaleForm from \"./components/EditScaleForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\";\nimport ImportDataForm from \"./components/ImportDataForm\";\nimport NavBar from \"./components/NavBar\";\nimport Layers from \"./components/Layers\";\nimport Scrubber from \"./components/Scrubber\";\nimport Legend from \"./components/Legend\";\nimport Certainty from \"./components/Certainty\";\nimport Importance from \"./components/Importance\";\nimport Connection from \"./components/Connection\";\nimport WelcomeMessage from \"./components/WelcomeMessage\";\nimport generateIntervals from \"./components/generateIntervals\";\nimport EmptyProj from \"./components/EmptyProj\"; //for installation\n\nimport Hands from './components/Hands';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction translateData({\n  data,\n  nullData\n}) {\n  const newData = { ...nullData\n  };\n  const newInst = newData.instants[0];\n  const scaleName = \"calendarDate\";\n  const xValues = [];\n  const segments = []; // var key = 0;\n\n  var segmentMin = null; //TODO: automated scale generation\n\n  for (const datum of data) {\n    newInst[`${datum.id}`] = {\n      \"x\": datum.calendarDate,\n      \"y\": datum.cy,\n      \"scale\": datum.calendarDate < 0 ? \"early\" : scaleName,\n      \"target\": [datum.targets[datum.targets.length - 1]],\n      //???\n      \"text\": datum.innerText // ...(e.target.color && {\"color\": e.target.color.value}), //if color is specified, create color entry in data\n      // ...(e.target.radius && {\"radius\": e.target.radius.value}),\n      // ...(e.target.opacity && {\"opacity\": e.target.opacity.value})\n\n    };\n    xValues.push(datum.calendarDate); // key++;\n  }\n\n  xValues.sort((a, b) => a - b); //smallest to largest\n  // //TODO: automated scale generation\n  // xValues.forEach((val, i) => {\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) {\n  //     segments.push({\n  //       \"min\": segmentMin,\n  //       \"max\":xValues[i]\n  //     })\n  //     segmentMin = xValues[i+1];\n  //   } else if ((segments.length) && (i===xValues.length-1)){ //if there are segments and this is the last value\n  //     segments.push({\n  //       \"min\": segmentMin,\n  //       \"max\": null\n  //     })\n  //   };\n  // });\n  // for (let i; i=0; i++) {\n  //   console.log(xValues[i]+Math.abs(xValues[i])<xValues[i+1]);\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) { //if a value is less than 1/2 of the next value, create a segment\n  //     // segments.push({\n  //     //   \"min\": segmentMin,\n  //     //   \"max\":xValues[i]\n  //     // })\n  //     // segmentMin = xValues[i+1];\n  //   }\n  // }\n\n  newData.scales[\"early\"] = {\n    \"min\": xValues[0] - 10,\n    \"max\": xValues[0] + 1000,\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"hideLabel\": true,\n    \"segments\": [{\n      max: xValues[0]\n    }] //todo\n\n  };\n  newData.scales[`${scaleName}`] = {\n    \"min\": xValues[2] - 90,\n    \"max\": xValues[xValues.length - 1],\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"segments\": [{\n      min: xValues[2]\n    }] //todo\n\n  }; // console.log(minX, maxX);\n  // console.log(newData.scales);\n\n  return newData;\n} // function scalesList(scales) {\n//   Object.keys(scales).map((key, i) => {\n//     return <option value={key} key={i}>{key}</option>\n//   });\n// }\n\n\nfunction App() {\n  _s();\n\n  //blank ChronoJSON template\n  const nullData = {\n    \"imgs\": [],\n    \"instants\": [{}],\n    \"zones\": [],\n    \"scales\": {\n      \"x\": {},\n      \"y\": {}\n    }\n  };\n  const scaleData = {\n    \"imgs\": [],\n    \"instants\": [[]],\n    \"zones\": [],\n    \"scales\": {\n      \"x\": {\n        \"Egyptian Dynasties\": {\n          \"min\": -3100,\n          \"max\": -30,\n          \"units\": \"Years BCE\",\n          \"yPos\": 1,\n          \"tickValues\": [],\n          \"segments\": [{\n            \"max\": -2686,\n            \"label\": \"Early Dynastic\"\n          }, {\n            \"min\": -2686,\n            \"max\": -2181,\n            \"label\": \"Old Kingdom\"\n          }, {\n            \"min\": -2181,\n            \"max\": -2040,\n            \"label\": \"First Intermediate Period\"\n          }, {\n            \"min\": -2040,\n            \"max\": -1649,\n            \"label\": \"Middle Kingdom\"\n          }, {\n            \"min\": -1649,\n            \"max\": -1550,\n            \"label\": \"Second Intermediate Period\"\n          }, {\n            \"min\": -1550,\n            \"max\": -1077,\n            \"label\": \"New Kingdom\"\n          }, {\n            \"min\": -1077,\n            \"max\": -656,\n            \"label\": \"Third Intermediate Period\"\n          }, {\n            \"min\": -656,\n            \"max\": -332,\n            \"label\": \"Late Period\"\n          }, {\n            \"min\": -332,\n            \"label\": \"Graeco-Roman\"\n          }]\n        }\n      },\n      \"y\": {\n        \"Place in Text\": {\n          \"min\": 3,\n          \"max\": 11,\n          \"units\": \"paragraph\"\n        }\n      }\n    }\n  }; //for installation\n\n  const [enabled, setEnabled] = useState(false); //user defined\n\n  const radius = 5; //for entire project\n\n  const [proj, setProj] = useState(false);\n  const [fileName, setFileName] = useState(\"\"); //for the entire ChronoJSON\n\n  const [src, setSrc] = useState(Data); //for ChronoJSON history. for undo and redo\n\n  const [history, setHistory] = useState([]); //--- copies of the source data. altering visual views does not necessarily change src data---//\n  //for toggling the active data as used by scrubber\n\n  const [activeData, setActiveData] = useState(0); //for toggling the active layer\n\n  const [activeLayer, setActiveLayer] = useState(); //for active tool modes\n\n  const [activeTool, setActiveTool] = useState(); //initialize datapoints\n\n  const [data, setData] = useState(src.instants[activeData]); //links are initialized in Graphic.js\n  // const [links, setLinks] = useState(generateLinks(src.instants[activeData]))\n  //initialize zones\n\n  const [zones, setZones] = useState(src.zones); //initialize scales\n\n  const [scales, setScales] = useState(src.scales); //toggles datapoint IDs vs labels\n\n  const [showLabel, setShowLabel] = useState(true); //for toggling the active scale\n\n  const [activeScale, setActiveScale] = useState([Object.keys(scales.x)[0], Object.keys(scales.y)[0]]); //---UI stuff---//\n  //UI window toggles\n\n  const [toggle, setToggle] = useState(); //UI info boxes for points, intervals, etc.\n\n  const [info, setInfo] = useState(); //Inflection info\n\n  const [inflectTarget, setInflectTarget] = useState(); //Syntactic inflections order\n\n  const [syntacticOrder, setSyntacticOrder] = useState([null, null, null]); //[target1, target2, #]. # dictates order, switches b/w 0 and 1\n  //--- functions ---//\n\n  const updateSrc = (newData, key) => {\n    setHistory([...history, src]); //history.length-1 is last src before this\n\n    const newSrc = src; //why is console.log(data) before & after the same, but new data point still shows up\n    //have a function where, if incoming data greater than scale max or less than scale min, set that to scale max/min\n\n    if (key === \"zones\") {\n      setZones(newData);\n      newSrc.zones = zones;\n    } else if (key === \"scales\") {\n      setScales(newData);\n      newSrc.scales = newData;\n    } else {\n      setData(newData);\n      newSrc.instants[activeData] = data;\n    }\n\n    setSrc(newSrc);\n    setToggle(null);\n  }; // console.log(info);\n\n  /*\n    TODO:\n    - for piecewise timeline, make function that generates different graphics\n  */\n  //<Hands enabled={enabled} setEnabled={setEnabled}/>\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [info && /*#__PURE__*/_jsxDEV(InfoBox, {\n      info: info,\n      setInfo: setInfo,\n      history: history,\n      setHistory: setHistory,\n      data: data,\n      setData: setData,\n      src: src,\n      setSrc: setSrc,\n      updateSrc: updateSrc,\n      zones: zones\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      toggle: toggle,\n      setToggle: setToggle,\n      data: data,\n      showLabel: showLabel,\n      setShowLabel: setShowLabel,\n      hasScales: Object.keys(scales.y).length,\n      fileName: fileName,\n      setFileName: setFileName,\n      proj: proj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), toggle === \"scrubber\" && /*#__PURE__*/_jsxDEV(Scrubber, {\n      activeData: activeData,\n      setActiveData: setActiveData,\n      src: src,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 31\n    }, this), toggle === \"NewInstantForm\" && /*#__PURE__*/_jsxDEV(NewInstantForm, {\n      data: data,\n      setData: setData,\n      target: inflectTarget,\n      setToggle: setToggle,\n      scales: src.scales,\n      activeScale: activeScale,\n      activeData: activeData,\n      history: history,\n      setHistory: setHistory,\n      updateSrc: updateSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this), toggle === \"editScale\" && /*#__PURE__*/_jsxDEV(EditScaleForm, {\n      scales: scales,\n      updateSrc: updateSrc,\n      setToggle: setToggle,\n      activeScale: activeScale,\n      setActiveScale: setActiveScale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 32\n    }, this), toggle === \"addZone\" && /*#__PURE__*/_jsxDEV(NewZoneForm, {\n      zones: zones,\n      setZones: setZones,\n      setToggle: setToggle,\n      scales: scales,\n      activeScale: activeScale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 30\n    }, this), toggle === \"addInterval\" && /*#__PURE__*/_jsxDEV(NewIntervalForm, {\n      data: data,\n      setData: setData,\n      setToggle: setToggle,\n      scales: scales,\n      activeScale: activeScale,\n      history: history,\n      setHistory: setHistory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 34\n    }, this), toggle === \"addScale\" && /*#__PURE__*/_jsxDEV(NewScaleForm, {\n      src: src,\n      updateSrc: updateSrc,\n      setToggle: setToggle,\n      setActiveScale: setActiveScale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 31\n    }, this), toggle === \"save\" && /*#__PURE__*/_jsxDEV(ExportDataForm, {\n      src: src,\n      setSrc: setSrc,\n      data: data,\n      zones: zones,\n      scales: scales,\n      activeData: activeData,\n      setToggle: setToggle,\n      fileName: fileName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this), toggle === \"legend\" && /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 29\n    }, this), toggle === \"layers\" && /*#__PURE__*/_jsxDEV(Layers, {\n      activeLayer: activeLayer,\n      setActiveLayer: setActiveLayer,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 29\n    }, this), toggle === \"import\" && /*#__PURE__*/_jsxDEV(ImportDataForm, {\n      setSrc: setSrc,\n      setScales: setScales,\n      setZones: setZones,\n      setData: setData,\n      activeData: activeData,\n      setToggle: setToggle,\n      setFileName: setFileName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }, this), toggle === \"certainty\" && /*#__PURE__*/_jsxDEV(Certainty, {\n      target: inflectTarget,\n      setToggle: setToggle,\n      data: data,\n      setData: setData,\n      zones: zones,\n      setZones: setZones\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }, this), toggle === \"importance\" && /*#__PURE__*/_jsxDEV(Importance, {\n      target: inflectTarget,\n      setToggle: setToggle,\n      data: data,\n      setData: setData,\n      zones: zones,\n      setZones: setZones,\n      radius: radius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this), toggle === \"connection\" && /*#__PURE__*/_jsxDEV(Connection, {\n      target: syntacticOrder,\n      setToggle: setToggle,\n      data: data,\n      setData: setData,\n      zones: zones,\n      setZones: setZones\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }, this), proj ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      className: \"container fullHeight\",\n      children: [Object.keys(scales.x).length ? /*#__PURE__*/_jsxDEV(Graphic, {\n        data: data,\n        setData: setData,\n        zones: zones,\n        setZones: setZones,\n        radius: radius,\n        info: info,\n        setInfo: setInfo,\n        setInflectTarget: setInflectTarget,\n        showLabel: showLabel,\n        activeLayer: activeLayer,\n        toggle: toggle,\n        setToggle: setToggle,\n        scales: scales,\n        setScales: setScales,\n        syntacticOrder: syntacticOrder,\n        setSyntacticOrder: setSyntacticOrder,\n        activeScale: activeScale\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(EmptyProj, {\n        setToggle: setToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 15\n      }, this), src.imgs.length > 0 && /*#__PURE__*/_jsxDEV(Image, {\n        urls: src.imgs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WelcomeMessage, {\n      setProj: setProj,\n      setFileName: setFileName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"VHmiOtu92AOA1G2SheU4VX3SIew=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js"],"names":["React","useState","Data","TagVisData","Graphic","Image","NewInstantForm","NewIntervalForm","NewZoneForm","NewScaleForm","EditScaleForm","InfoBox","ExportDataForm","ImportDataForm","NavBar","Layers","Scrubber","Legend","Certainty","Importance","Connection","WelcomeMessage","generateIntervals","EmptyProj","Hands","translateData","data","nullData","newData","newInst","instants","scaleName","xValues","segments","segmentMin","datum","id","calendarDate","cy","targets","length","innerText","push","sort","a","b","scales","max","min","App","scaleData","enabled","setEnabled","radius","proj","setProj","fileName","setFileName","src","setSrc","history","setHistory","activeData","setActiveData","activeLayer","setActiveLayer","activeTool","setActiveTool","setData","zones","setZones","setScales","showLabel","setShowLabel","activeScale","setActiveScale","Object","keys","x","y","toggle","setToggle","info","setInfo","inflectTarget","setInflectTarget","syntacticOrder","setSyntacticOrder","updateSrc","key","newSrc","imgs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./data.json\";\nimport TagVisData from \"./tagVis_data.json\"\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewInstantForm from \"./components/NewInstantForm\";\nimport NewIntervalForm from \"./components/NewIntervalForm\";\nimport NewZoneForm from \"./components/NewZoneForm\";\nimport NewScaleForm from \"./components/NewScaleForm\";\nimport EditScaleForm from \"./components/EditScaleForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\";\nimport ImportDataForm from \"./components/ImportDataForm\";\nimport NavBar from \"./components/NavBar\";\nimport Layers from \"./components/Layers\";\nimport Scrubber from \"./components/Scrubber\";\nimport Legend from \"./components/Legend\";\nimport Certainty from \"./components/Certainty\";\nimport Importance from \"./components/Importance\";\nimport Connection from \"./components/Connection\";\nimport WelcomeMessage from \"./components/WelcomeMessage\";\nimport generateIntervals from \"./components/generateIntervals\";\nimport EmptyProj from \"./components/EmptyProj\";\n//for installation\nimport Hands from './components/Hands';\n\n\nfunction translateData({data, nullData}) {\n  const newData = {...nullData};\n  const newInst = newData.instants[0];\n  const scaleName = \"calendarDate\";\n  const xValues = [];\n  const segments = [];\n  // var key = 0;\n  var segmentMin = null;\n\n  //TODO: automated scale generation\n  for (const datum of data) {\n    newInst[`${datum.id}`] = {\n      \"x\": datum.calendarDate,\n      \"y\": datum.cy,\n      \"scale\": (datum.calendarDate<0)?\"early\":scaleName,\n      \"target\": [datum.targets[datum.targets.length-1]], //???\n      \"text\": datum.innerText,\n      // ...(e.target.color && {\"color\": e.target.color.value}), //if color is specified, create color entry in data\n      // ...(e.target.radius && {\"radius\": e.target.radius.value}),\n      // ...(e.target.opacity && {\"opacity\": e.target.opacity.value})\n    };\n    xValues.push(datum.calendarDate);\n    // key++;\n  }\n\n  xValues.sort((a, b) => a-b); //smallest to largest\n\n  // //TODO: automated scale generation\n  // xValues.forEach((val, i) => {\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) {\n  //     segments.push({\n  //       \"min\": segmentMin,\n  //       \"max\":xValues[i]\n  //     })\n  //     segmentMin = xValues[i+1];\n  //   } else if ((segments.length) && (i===xValues.length-1)){ //if there are segments and this is the last value\n  //     segments.push({\n  //       \"min\": segmentMin,\n  //       \"max\": null\n  //     })\n  //   };\n  // });\n  // for (let i; i=0; i++) {\n  //   console.log(xValues[i]+Math.abs(xValues[i])<xValues[i+1]);\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) { //if a value is less than 1/2 of the next value, create a segment\n  //     // segments.push({\n  //     //   \"min\": segmentMin,\n  //     //   \"max\":xValues[i]\n  //     // })\n  //     // segmentMin = xValues[i+1];\n  //   }\n  // }\n  newData.scales[\"early\"] = {\n    \"min\": xValues[0]-10,\n    \"max\": xValues[0]+1000,\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"hideLabel\":true,\n    \"segments\": [{max: xValues[0]}] //todo\n  }\n\n  newData.scales[`${scaleName}`] = {\n    \"min\": xValues[2]-90,\n    \"max\": xValues[xValues.length-1],\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"segments\": [{min:xValues[2]}] //todo\n  }\n\n\n  // console.log(minX, maxX);\n  // console.log(newData.scales);\n  return newData;\n}\n\n\n// function scalesList(scales) {\n//   Object.keys(scales).map((key, i) => {\n//     return <option value={key} key={i}>{key}</option>\n//   });\n// }\n\nfunction App() {\n  //blank ChronoJSON template\n  const nullData = {\n    \"imgs\": [],\n    \"instants\":\n    [\n      {}\n    ],\n    \"zones\":\n    [],\n    \"scales\":{\n      \"x\":{},\n      \"y\":{}\n    }\n  };\n\n  const scaleData = {\n    \"imgs\": [],\n    \"instants\":\n    [\n      []\n    ],\n    \"zones\":\n    [],\n    \"scales\":\n    {\n      \"x\":{\n        \"Egyptian Dynasties\": {\n          \"min\": -3100,\n          \"max\": -30,\n          \"units\": \"Years BCE\",\n          \"yPos\": 1,\n          \"tickValues\": [],\n          \"segments\": [\n            {\"max\": -2686, \"label\": \"Early Dynastic\"},\n            {\"min\": -2686, \"max\": -2181, \"label\": \"Old Kingdom\"},\n            {\"min\": -2181, \"max\": -2040, \"label\": \"First Intermediate Period\"},\n            {\"min\": -2040, \"max\": -1649, \"label\": \"Middle Kingdom\"},\n            {\"min\": -1649, \"max\": -1550, \"label\": \"Second Intermediate Period\"},\n            {\"min\": -1550, \"max\": -1077, \"label\": \"New Kingdom\"},\n            {\"min\": -1077, \"max\": -656, \"label\": \"Third Intermediate Period\"},\n            {\"min\": -656, \"max\": -332, \"label\": \"Late Period\"},\n            {\"min\": -332, \"label\": \"Graeco-Roman\"}\n          ]\n        }\n      },\n      \"y\":{\n        \"Place in Text\": {\n          \"min\": 3,\n          \"max\": 11,\n          \"units\": \"paragraph\"\n        }\n      }\n    }\n  };\n\n  //for installation\n  const [enabled, setEnabled] = useState(false);\n\n  //user defined\n  const radius = 5;\n\n  //for entire project\n  const [proj, setProj] = useState(false);\n  const [fileName, setFileName] = useState(\"\");\n\n  //for the entire ChronoJSON\n  const [src, setSrc] = useState(Data);\n  //for ChronoJSON history. for undo and redo\n  const [history, setHistory] = useState([])\n\n  //--- copies of the source data. altering visual views does not necessarily change src data---//\n  //for toggling the active data as used by scrubber\n  const [activeData, setActiveData] = useState(0);\n  //for toggling the active layer\n  const [activeLayer, setActiveLayer] = useState();\n  //for active tool modes\n  const [activeTool, setActiveTool] = useState();\n\n  //initialize datapoints\n  const [data, setData] = useState(src.instants[activeData]);\n  //links are initialized in Graphic.js\n  // const [links, setLinks] = useState(generateLinks(src.instants[activeData]))\n  //initialize zones\n  const [zones, setZones] = useState(src.zones);\n  //initialize scales\n  const [scales, setScales] = useState(src.scales);\n\n  //toggles datapoint IDs vs labels\n  const [showLabel, setShowLabel] = useState(true);\n\n  //for toggling the active scale\n  const [activeScale, setActiveScale] = useState([Object.keys(scales.x)[0],Object.keys(scales.y)[0]])\n\n  //---UI stuff---//\n  //UI window toggles\n  const [toggle, setToggle] = useState();\n  //UI info boxes for points, intervals, etc.\n  const [info, setInfo] = useState();\n  //Inflection info\n  const [inflectTarget, setInflectTarget] = useState();\n  //Syntactic inflections order\n  const [syntacticOrder, setSyntacticOrder] = useState([null, null, null]); //[target1, target2, #]. # dictates order, switches b/w 0 and 1\n\n  //--- functions ---//\n  const updateSrc = (newData, key) => {\n    setHistory([...history, src]); //history.length-1 is last src before this\n    const newSrc = src;\n    //why is console.log(data) before & after the same, but new data point still shows up\n    //have a function where, if incoming data greater than scale max or less than scale min, set that to scale max/min\n    if (key===\"zones\") {\n      setZones(newData);\n      newSrc.zones = zones;\n    } else if (key===\"scales\") {\n      setScales(newData);\n      newSrc.scales = newData;\n    } else {\n      setData(newData);\n      newSrc.instants[activeData] = data;\n    }\n    setSrc(newSrc);\n    setToggle(null);\n  }\n\n\n\n  // console.log(info);\n  /*\n    TODO:\n    - for piecewise timeline, make function that generates different graphics\n  */\n//<Hands enabled={enabled} setEnabled={setEnabled}/>\n  return (\n    <>\n      {info && <InfoBox\n        info={info}\n        setInfo={setInfo}\n        history={history} setHistory={setHistory}\n        data={data} setData={setData}\n        src={src} setSrc={setSrc}\n        updateSrc={updateSrc}\n        zones={zones}\n      />}\n      <NavBar\n        toggle={toggle}\n        setToggle={setToggle}\n        data={data} showLabel={showLabel}\n        setShowLabel={setShowLabel}\n        hasScales={Object.keys(scales.y).length}\n        fileName={fileName}\n        setFileName={setFileName}\n        proj={proj}\n      />\n      {toggle===\"scrubber\" && <Scrubber activeData={activeData} setActiveData={setActiveData} src={src} setData={setData}/>}\n      {toggle===\"NewInstantForm\" &&\n        <NewInstantForm\n          data={data}\n          setData={setData}\n          target={inflectTarget}\n          setToggle={setToggle}\n          scales={src.scales}\n          activeScale={activeScale}\n          activeData={activeData}\n          history={history}\n          setHistory={setHistory}\n          updateSrc={updateSrc}\n        />\n      }\n      {toggle===\"editScale\" && <EditScaleForm scales={scales} updateSrc={updateSrc} setToggle={setToggle} activeScale={activeScale} setActiveScale={setActiveScale}/>}\n      {toggle===\"addZone\" && <NewZoneForm zones={zones} setZones={setZones} setToggle={setToggle} scales={scales} activeScale={activeScale}/>}\n      {toggle===\"addInterval\" && <NewIntervalForm data={data} setData={setData} setToggle={setToggle} scales={scales} activeScale={activeScale} history={history} setHistory={setHistory}/>}\n      {toggle===\"addScale\" && <NewScaleForm src={src} updateSrc={updateSrc} setToggle={setToggle} setActiveScale={setActiveScale}/>}\n      {toggle===\"save\" &&\n        <ExportDataForm\n          src={src}\n          setSrc={setSrc}\n          data={data}\n          zones={zones}\n          scales={scales}\n          activeData={activeData}\n          setToggle={setToggle}\n          fileName={fileName}\n        />\n      }\n      {toggle===\"legend\" && <Legend/>}\n      {toggle===\"layers\" && <Layers activeLayer={activeLayer} setActiveLayer={setActiveLayer} data={data}/>}\n      {toggle===\"import\" &&\n        <ImportDataForm\n          setSrc={setSrc}\n          setScales={setScales}\n          setZones={setZones}\n          setData={setData}\n          activeData={activeData}\n          setToggle={setToggle}\n          setFileName={setFileName}\n        />\n      }\n      {toggle===\"certainty\" &&\n        <Certainty\n          target={inflectTarget}\n          setToggle={setToggle}\n          data={data}\n          setData={setData}\n          zones={zones}\n          setZones={setZones}\n        />\n      }\n      {toggle===\"importance\" &&\n        <Importance\n          target={inflectTarget}\n          setToggle={setToggle}\n          data={data}\n          setData={setData}\n          zones={zones}\n          setZones={setZones}\n          radius={radius}\n        />\n      }\n      {toggle===\"connection\" &&\n        <Connection\n          target={syntacticOrder}\n          setToggle={setToggle}\n          data={data}\n          setData={setData}\n          zones={zones}\n          setZones={setZones}\n        />\n      }\n\n      {proj ?\n        <div id=\"main\" className=\"container fullHeight\">\n          {Object.keys(scales.x).length ?\n            <Graphic\n              data={data}\n              setData={setData}\n              zones={zones}\n              setZones={setZones}\n              radius={radius}\n              info={info}\n              setInfo={setInfo}\n              setInflectTarget={setInflectTarget}\n              showLabel={showLabel}\n              activeLayer={activeLayer}\n              toggle={toggle}\n              setToggle={setToggle}\n              scales={scales}\n              setScales={setScales}\n              syntacticOrder={syntacticOrder}\n              setSyntacticOrder={setSyntacticOrder}\n              activeScale={activeScale}\n            />\n            : <EmptyProj setToggle={setToggle}/>\n          }\n          {src.imgs.length>0 && <Image urls={src.imgs}/>}\n        </div> :\n        <WelcomeMessage setProj={setProj} setFileName={setFileName}/>\n      }\n\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}