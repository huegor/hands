{"ast":null,"code":"/*\n   generates links between all linked instants and\n   returns a link object with link properties.\n*/\nfunction generateLinks(data) {\n  /*\n    expand to standalone paths? bezier curve: https://svg-path-visualizer.netlify.app/bezier-curve/\n    - start: can specify point or enter coordinate values directly (run thru xScale)\n    - control: ???\n    - end: same as start\n    output: M startX,startY C controlX1,controlY1 controlX2,controlY2 endX, endY\n  */\n  const links = []; //array of all instant links\n\n  data.forEach((item, i) => {\n    if (!item.target) {\n      //if the instant does not have a target, skip generating link\n      return;\n    } else {\n      item.target.forEach(n => {\n        const instant = data.find(x => x.id === n);\n\n        if (data.indexOf(instant) > -1) {\n          //does instant exist?\n          links.push({\n            source: item,\n            target: instant,\n            color: item.lineColor ? item.lineColor : item.color ? item.color : null,\n            //if not specified, use point color. otherwise, null\n            width: item.lineWidth,\n            opacity: item.lineOpacity ? item.lineOpacity : item.opacity ? item.opacity : null,\n            dashed: item.lineDashed\n          });\n        }\n      });\n    }\n  });\n  return links;\n}\n\n;\nexport default generateLinks;","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/generateLinks.js"],"names":["generateLinks","data","links","forEach","item","i","target","n","instant","find","x","id","indexOf","push","source","color","lineColor","width","lineWidth","opacity","lineOpacity","dashed","lineDashed"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAE3B;AACF;AACA;AACA;AACA;AACA;AACA;AAEE,QAAMC,KAAK,GAAG,EAAd,CAV2B,CAUT;;AAElBD,EAAAA,IAAI,CAACE,OAAL,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AACxB,QAAI,CAACD,IAAI,CAACE,MAAV,EAAkB;AAChB;AACA;AACD,KAHD,MAGO;AACLF,MAAAA,IAAI,CAACE,MAAL,CAAYH,OAAZ,CAAqBI,CAAD,IAAO;AACzB,cAAMC,OAAO,GAAGP,IAAI,CAACQ,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASJ,CAAxB,CAAhB;;AACA,YAAIN,IAAI,CAACW,OAAL,CAAaJ,OAAb,IAAwB,CAAC,CAA7B,EAAgC;AAAE;AAChCN,UAAAA,KAAK,CAACW,IAAN,CAAW;AACTC,YAAAA,MAAM,EAACV,IADE;AAETE,YAAAA,MAAM,EAACE,OAFE;AAGTO,YAAAA,KAAK,EAACX,IAAI,CAACY,SAAL,GAAiBZ,IAAI,CAACY,SAAtB,GAAkCZ,IAAI,CAACW,KAAL,GAAaX,IAAI,CAACW,KAAlB,GAA0B,IAHzD;AAG+D;AACxEE,YAAAA,KAAK,EAACb,IAAI,CAACc,SAJF;AAKTC,YAAAA,OAAO,EAACf,IAAI,CAACgB,WAAL,GAAmBhB,IAAI,CAACgB,WAAxB,GAAsChB,IAAI,CAACe,OAAL,GAAef,IAAI,CAACe,OAApB,GAA8B,IALnE;AAMTE,YAAAA,MAAM,EAACjB,IAAI,CAACkB;AANH,WAAX;AAQD;AACF,OAZD;AAaD;AACF,GAnBD;AAoBA,SAAOpB,KAAP;AACD;;AAAA;AAED,eAAeF,aAAf","sourcesContent":["/*\n   generates links between all linked instants and\n   returns a link object with link properties.\n*/\n\nfunction generateLinks(data) {\n\n  /*\n    expand to standalone paths? bezier curve: https://svg-path-visualizer.netlify.app/bezier-curve/\n    - start: can specify point or enter coordinate values directly (run thru xScale)\n    - control: ???\n    - end: same as start\n    output: M startX,startY C controlX1,controlY1 controlX2,controlY2 endX, endY\n  */\n\n  const links = []; //array of all instant links\n\n  data.forEach((item, i) => {\n    if (!item.target) {\n      //if the instant does not have a target, skip generating link\n      return\n    } else {\n      item.target.forEach((n) => {\n        const instant = data.find(x => x.id === n);\n        if (data.indexOf(instant) > -1) { //does instant exist?\n          links.push({\n            source:item,\n            target:instant,\n            color:item.lineColor ? item.lineColor : item.color ? item.color : null, //if not specified, use point color. otherwise, null\n            width:item.lineWidth,\n            opacity:item.lineOpacity ? item.lineOpacity : item.opacity ? item.opacity : null,\n            dashed:item.lineDashed\n          });\n        }\n      });\n    }\n  });\n  return links;\n};\n\nexport default generateLinks;\n"]},"metadata":{},"sourceType":"module"}