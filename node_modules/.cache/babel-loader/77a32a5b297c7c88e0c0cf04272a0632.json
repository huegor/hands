{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Hands.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport HandsFree from 'handsfree'; // import hands from '@mediapipe/hands';\n//https://handsfree.js.org\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Hands(props) {\n  _s();\n\n  //init\n  const handsFree = new HandsFree({\n    hands: {\n      enabled: true,\n      maxNumHands: 2\n    }\n  });\n  handsFree.enablePlugins('browser'); //only runs on component mount & dismount\n\n  useEffect(() => {\n    console.log(handsFree);\n    handsFree.start(() => {\n      handsFree.pause();\n    }); //initializes loop but pauses it instantly'\n    //unmount\n\n    return () => handsFree.stop();\n  }, []); // useEffect(() => {\n  //   handsFree.on('data', (e) => {\n  //     // console.log(e.hands?e.hands.pointer:null);\n  //\n  //   });\n  // }, [props.enabled]);\n\n  const handleClick = e => {\n    e.preventDefault();\n\n    if (!props.enabled) {\n      props.setEnabled(true);\n      handsFree.unpause();\n      console.log(handsFree.isLooping);\n    } else {\n      props.setEnabled(false);\n      handsFree.pause();\n      console.log(handsFree.isLooping);\n    }\n  };\n  /*\n    TODO:\n    - draw palm Positions\n      - shrink for click\n      - something for drag (oblong?)\n    - add \"click\" plugin\n      - create plugin for \"horns\" hand gesture\n      - on horns, new MouseEvent\n    - add \"pause\" plugin\n      - on fist, pause/stop handsFree\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: props.enabled ? `disable hands` : `enable hands`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Hands, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Hands;\n;\nexport default Hands;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hands\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Hands.js"],"names":["React","useEffect","HandsFree","Hands","props","handsFree","hands","enabled","maxNumHands","enablePlugins","console","log","start","pause","stop","handleClick","e","preventDefault","setEnabled","unpause","isLooping"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CACA;AAEA;;;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB;AACA,QAAMC,SAAS,GAAG,IAAIH,SAAJ,CAAc;AAC9BI,IAAAA,KAAK,EAAC;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,WAAW,EAAE;AAFT;AADwB,GAAd,CAAlB;AAMAH,EAAAA,SAAS,CAACI,aAAV,CAAwB,SAAxB,EARoB,CAUtB;;AACER,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACAA,IAAAA,SAAS,CAACO,KAAV,CAAgB,MAAI;AAACP,MAAAA,SAAS,CAACQ,KAAV;AAAkB,KAAvC,EAFc,CAE4B;AAC1C;;AACA,WAAO,MAAMR,SAAS,CAACS,IAAV,EAAb;AACD,GALQ,EAKN,EALM,CAAT,CAXoB,CAkBpB;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACb,KAAK,CAACG,OAAX,EAAmB;AACjBH,MAAAA,KAAK,CAACc,UAAN,CAAiB,IAAjB;AACAb,MAAAA,SAAS,CAACc,OAAV;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYN,SAAS,CAACe,SAAtB;AACD,KAJD,MAIO;AACLhB,MAAAA,KAAK,CAACc,UAAN,CAAiB,KAAjB;AACAb,MAAAA,SAAS,CAACQ,KAAV;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYN,SAAS,CAACe,SAAtB;AACD;AACF,GAXD;AAeA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGE,sBACE;AAAQ,IAAA,OAAO,EAAEL,WAAjB;AAAA,cACGX,KAAK,CAACG,OAAN,GAAe,eAAf,GAA+B;AADlC;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA1DQJ,K;;KAAAA,K;AA0DR;AAED,eAAeA,KAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport HandsFree from 'handsfree';\n// import hands from '@mediapipe/hands';\n\n//https://handsfree.js.org\n\n\nfunction Hands(props) {\n  //init\n  const handsFree = new HandsFree({\n    hands:{\n      enabled: true,\n      maxNumHands: 2\n    }\n  });\n  handsFree.enablePlugins('browser');\n\n//only runs on component mount & dismount\n  useEffect(() => {\n    console.log(handsFree);\n    handsFree.start(()=>{handsFree.pause()}); //initializes loop but pauses it instantly'\n    //unmount\n    return () => handsFree.stop();\n  }, []);\n\n  // useEffect(() => {\n  //   handsFree.on('data', (e) => {\n  //     // console.log(e.hands?e.hands.pointer:null);\n  //\n  //   });\n  // }, [props.enabled]);\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    if (!props.enabled){\n      props.setEnabled(true);\n      handsFree.unpause();\n      console.log(handsFree.isLooping);\n    } else {\n      props.setEnabled(false);\n      handsFree.pause();\n      console.log(handsFree.isLooping);\n    }\n  }\n\n\n\n  /*\n    TODO:\n    - draw palm Positions\n      - shrink for click\n      - something for drag (oblong?)\n    - add \"click\" plugin\n      - create plugin for \"horns\" hand gesture\n      - on horns, new MouseEvent\n    - add \"pause\" plugin\n      - on fist, pause/stop handsFree\n\n  */\n\n  return (\n    <button onClick={handleClick}>\n      {props.enabled?`disable hands`:`enable hands`}\n    </button>\n  )\n};\n\nexport default Hands;\n"]},"metadata":{},"sourceType":"module"}