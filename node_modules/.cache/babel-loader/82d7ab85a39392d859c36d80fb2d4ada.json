{"ast":null,"code":"/*\n   generates intervals between all intervaled instants and\n   returns a interval object with interval properties.\n*/\nfunction generateIntervals(data) {\n  // console.log(data[8])\n\n  /*\n    expand to standalone paths? bezier curve: https://svg-path-visualizer.netlify.app/bezier-curve/\n    - start: can specify point or enter coordinate values directly (run thru xScale)\n    - control: ???\n    - end: same as start\n    output: M startX,startY C controlX1,controlY1 controlX2,controlY2 endX, endY\n  */\n  const intervals = []; //array of all instant intervals\n\n  Object.entries(data).forEach(item => {\n    console.log(item);\n    const key = item[0];\n    const value = item[1];\n\n    if (!value.target) {\n      //if the instant does not have a target, skip generating interval\n      return;\n    } else {\n      value.target.forEach(n => {\n        const instant = data[n];\n\n        if (instant) {\n          //does instant exist?\n          intervals.push({\n            source: item,\n            target: instant,\n            color: value.intervalColor ? value.intervalColor : value.color ? value.color : null,\n            //if not specified, use point color. otherwise, null\n            width: value.intervalWidth,\n            opacity: value.intervalOpacity ? value.intervalOpacity : value.opacity ? value.opacity : null,\n            dashed: value.intervalDashed\n          });\n        }\n      });\n    }\n  });\n  return intervals;\n}\n\n;\nexport default generateIntervals;","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/generateIntervals.js"],"names":["generateIntervals","data","intervals","Object","entries","forEach","item","console","log","key","value","target","n","instant","push","source","color","intervalColor","width","intervalWidth","opacity","intervalOpacity","dashed","intervalDashed"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AACjC;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AAEE,QAAMC,SAAS,GAAG,EAAlB,CAV+B,CAUT;;AAEtBC,EAAAA,MAAM,CAACC,OAAP,CAAeH,IAAf,EAAqBI,OAArB,CAA8BC,IAAD,IAAU;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAMG,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAhB;AACA,UAAMI,KAAK,GAAGJ,IAAI,CAAC,CAAD,CAAlB;;AAEA,QAAI,CAACI,KAAK,CAACC,MAAX,EAAmB;AACjB;AACA;AACD,KAHD,MAGO;AACLD,MAAAA,KAAK,CAACC,MAAN,CAAaN,OAAb,CAAsBO,CAAD,IAAO;AAC1B,cAAMC,OAAO,GAAGZ,IAAI,CAACW,CAAD,CAApB;;AACA,YAAIC,OAAJ,EAAa;AAAE;AACbX,UAAAA,SAAS,CAACY,IAAV,CAAe;AACbC,YAAAA,MAAM,EAACT,IADM;AAEbK,YAAAA,MAAM,EAACE,OAFM;AAGbG,YAAAA,KAAK,EAACN,KAAK,CAACO,aAAN,GAAsBP,KAAK,CAACO,aAA5B,GAA4CP,KAAK,CAACM,KAAN,GAAcN,KAAK,CAACM,KAApB,GAA4B,IAHjE;AAGuE;AACpFE,YAAAA,KAAK,EAACR,KAAK,CAACS,aAJC;AAKbC,YAAAA,OAAO,EAACV,KAAK,CAACW,eAAN,GAAwBX,KAAK,CAACW,eAA9B,GAAgDX,KAAK,CAACU,OAAN,GAAgBV,KAAK,CAACU,OAAtB,GAAgC,IAL3E;AAMbE,YAAAA,MAAM,EAACZ,KAAK,CAACa;AANA,WAAf;AAQD;AACF,OAZD;AAaD;AACF,GAvBD;AAwBA,SAAOrB,SAAP;AACD;;AAAA;AAED,eAAeF,iBAAf","sourcesContent":["/*\n   generates intervals between all intervaled instants and\n   returns a interval object with interval properties.\n*/\n\nfunction generateIntervals(data) {\n// console.log(data[8])\n  /*\n    expand to standalone paths? bezier curve: https://svg-path-visualizer.netlify.app/bezier-curve/\n    - start: can specify point or enter coordinate values directly (run thru xScale)\n    - control: ???\n    - end: same as start\n    output: M startX,startY C controlX1,controlY1 controlX2,controlY2 endX, endY\n  */\n\n  const intervals = []; //array of all instant intervals\n\n  Object.entries(data).forEach((item) => {\n    console.log(item)\n    const key = item[0];\n    const value = item[1];\n\n    if (!value.target) {\n      //if the instant does not have a target, skip generating interval\n      return\n    } else {\n      value.target.forEach((n) => {\n        const instant = data[n];\n        if (instant) { //does instant exist?\n          intervals.push({\n            source:item,\n            target:instant,\n            color:value.intervalColor ? value.intervalColor : value.color ? value.color : null, //if not specified, use point color. otherwise, null\n            width:value.intervalWidth,\n            opacity:value.intervalOpacity ? value.intervalOpacity : value.opacity ? value.opacity : null,\n            dashed:value.intervalDashed\n          });\n        }\n      });\n    }\n  });\n  return intervals;\n};\n\nexport default generateIntervals;\n"]},"metadata":{},"sourceType":"module"}