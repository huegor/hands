{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./history.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewPointForm from \"./components/NewPointForm\";\nimport InfoBox from \"./components/InfoBox\"; // import findMinMax from \"./components/findMinMax\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ToolsBar extends React.Component {\n  constructor(props) {\n    super(props); // Don't call this.setState() here!\n\n    this.state = {\n      toggleLabel: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    switch (e.target.id) {\n      case 'toggleLabel':\n        this.state.toggleLabel ? this.setState({\n          toggleLabel: false\n        }) : this.setState({\n          toggleLabel: true\n        });\n        break;\n      // case 'save': //save JSON as file to computer\n      //   // console.log(this.props.src);\n      //   const fileData = JSON.stringify(this.props.src);\n      //   const blob = new Blob([fileData], {type: \"text/plain\"});\n      //   const url = URL.createObjectURL(blob);\n      //   const link = document.createElement('a');\n      //   link.download = `data.json`;\n      //   link.href = url;\n      //   link.click();\n      // break\n\n      default:\n        this.props.setToggle(e.target.id);\n    }\n\n    e.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"ui relative\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"addPoint\",\n            onClick: this.handleClick,\n            children: \"Add Point\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"toggleLabel\",\n            onClick: this.handleClick,\n            children: this.state.toggleLabel ? \"Toggle IDs\" : \"Toggle Labels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"settings\",\n            onClick: this.handleClick,\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"import\",\n            onClick: this.handleClick,\n            children: \"Import\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"save\",\n            onClick: this.handleClick,\n            children: \"Save & Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction ExportData({\n  src,\n  data\n}) {\n  _s();\n\n  const [fileName, setFileName] = useState(\"\");\n\n  const handleSave = e => {\n    console.log(fileName);\n    const newSrc = // const fileData = JSON.stringify(jsonData);\n    // const blob = new Blob([fileData], {type: \"text/plain\"});\n    // const url = URL.createObjectURL(blob);\n    // const link = document.createElement('a');\n    // link.download = `${fileName}.json`;\n    // link.href = url;\n    // link.click();\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center\",\n    onSubmit: handleSave,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"File Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: fileName,\n        onChange: e => setFileName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Save Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExportData, \"qmgMVFP5VOwUOxztcZ5P9gagwnE=\");\n\n_c = ExportData;\n\nfunction App() {\n  _s2();\n\n  //user defined\n  const radius = 5; //for the entire ChronoJSON\n\n  const [src, setSrc] = useState(Data); //for toggling the active dataset\n\n  const [active, setActive] = useState(0); //pertaining to datapoints only\n\n  const [data, setData] = useState(src.nodes[active]); //todo: comparative timelines, layering\n  //pertaining to intervals only\n\n  const [intervals, setIntervals] = useState(src.intervals); //UI window toggles\n\n  const [toggle, setToggle] = useState(); //UI info boxes for points, lines, etc.\n\n  const [info, setInfo] = useState();\n  /*\n    TODO:\n    - findMinMax() adjust less frequently. ie: if new data can be panned to, no need to adjust viewport\n    - for piecewise timeline, make function that generates different graphics\n    - create a master array of all snapshots of data (for scrubber)\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToolsBar, {\n      setToggle: setToggle,\n      src: src,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), toggle === \"addPoint\" ? /*#__PURE__*/_jsxDEV(NewPointForm, {\n      data: data,\n      setData: setData,\n      setToggle: setToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 30\n    }, this) : null, toggle === \"save\" ? /*#__PURE__*/_jsxDEV(ExportData, {\n      src: src,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 26\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      className: \"container fullHeight\",\n      children: [src.nodes.length ? /*#__PURE__*/_jsxDEV(Graphic, {\n        data: data,\n        setData: setData,\n        intervals: intervals,\n        setIntervals: setIntervals,\n        radius: radius,\n        setInfo: setInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexCenter\",\n        children: \"Upload data or create point below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), src.imgs.length ? /*#__PURE__*/_jsxDEV(Image, {\n        urls: src.imgs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 28\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), info ? /*#__PURE__*/_jsxDEV(InfoBox, {\n      data: info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s2(App, \"P0k44SAb9Sv5k9tX/25UPvsdvtg=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ExportData\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js"],"names":["React","useState","Data","Graphic","Image","NewPointForm","InfoBox","ToolsBar","Component","constructor","props","state","toggleLabel","handleClick","bind","e","target","id","setState","setToggle","preventDefault","render","ExportData","src","data","fileName","setFileName","handleSave","console","log","newSrc","value","App","radius","setSrc","active","setActive","setData","nodes","intervals","setIntervals","toggle","info","setInfo","length","imgs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./history.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewPointForm from \"./components/NewPointForm\";\nimport InfoBox from \"./components/InfoBox\";\n// import findMinMax from \"./components/findMinMax\";\n\n\n\nclass ToolsBar extends React.Component {\n  constructor(props) {\n    super(props);\n    // Don't call this.setState() here!\n    this.state = {\n      toggleLabel: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    switch (e.target.id) {\n      case 'toggleLabel':\n        this.state.toggleLabel ?\n          this.setState({toggleLabel: false})\n        : this.setState({toggleLabel: true});\n      break\n      // case 'save': //save JSON as file to computer\n      //   // console.log(this.props.src);\n      //   const fileData = JSON.stringify(this.props.src);\n      //   const blob = new Blob([fileData], {type: \"text/plain\"});\n      //   const url = URL.createObjectURL(blob);\n      //   const link = document.createElement('a');\n      //   link.download = `data.json`;\n      //   link.href = url;\n      //   link.click();\n      // break\n      default:\n        this.props.setToggle(e.target.id);\n    }\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <nav className=\"ui relative\">\n        <ul>\n          <li><button id=\"addPoint\" onClick={this.handleClick}>Add Point</button></li>\n          <li><button id=\"toggleLabel\" onClick={this.handleClick}>{this.state.toggleLabel ? \"Toggle IDs\" : \"Toggle Labels\"}</button></li>\n          <li><button id=\"settings\" onClick={this.handleClick}>Settings</button></li>\n          <li><button id=\"import\" onClick={this.handleClick}>Import</button></li>\n          <li><button id=\"save\" onClick={this.handleClick}>Save & Export</button></li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nfunction ExportData({src, data}) {\n  const [fileName, setFileName] = useState(\"\");\n\n  const handleSave = (e) => {\n    console.log(fileName);\n\n    const newSrc =\n\n    // const fileData = JSON.stringify(jsonData);\n    // const blob = new Blob([fileData], {type: \"text/plain\"});\n    // const url = URL.createObjectURL(blob);\n    // const link = document.createElement('a');\n    // link.download = `${fileName}.json`;\n    // link.href = url;\n    // link.click();\n    e.preventDefault();\n  };\n\n  return (\n    <form className=\"ui absolute center\" onSubmit={handleSave}>\n      <label>\n        File Name:\n        <input\n          type=\"text\"\n          value={fileName}\n          onChange={(e) => setFileName(e.target.value)}\n        />\n      </label><br/><br/>\n      <input type=\"submit\" value=\"Save Data\"/>\n    </form>\n  );\n}\n\n\n\nfunction App() {\n\n  //user defined\n  const radius = 5;\n\n  //for the entire ChronoJSON\n  const [src, setSrc] = useState(Data);\n  //for toggling the active dataset\n  const [active, setActive] = useState(0);\n  //pertaining to datapoints only\n  const [data, setData] = useState(src.nodes[active]); //todo: comparative timelines, layering\n  //pertaining to intervals only\n  const [intervals, setIntervals] = useState(src.intervals);\n  //UI window toggles\n  const [toggle, setToggle] = useState();\n  //UI info boxes for points, lines, etc.\n  const [info, setInfo] = useState();\n\n  /*\n    TODO:\n    - findMinMax() adjust less frequently. ie: if new data can be panned to, no need to adjust viewport\n    - for piecewise timeline, make function that generates different graphics\n    - create a master array of all snapshots of data (for scrubber)\n  */\n\n  return (\n    <>\n      <ToolsBar setToggle={setToggle} src={src} data={data}/>\n      {toggle===\"addPoint\" ? <NewPointForm data={data} setData={setData} setToggle={setToggle}/> : null}\n      {toggle===\"save\" ? <ExportData src={src} data={data}/> : null}\n      <div id=\"main\" className=\"container fullHeight\">\n        {src.nodes.length ?\n          <Graphic\n            data={data}\n            setData={setData}\n            intervals={intervals}\n            setIntervals={setIntervals}\n            radius={radius}\n            setInfo={setInfo}\n          />\n          : <div className=\"flexCenter\">Upload data or create point below</div>\n        }\n        {src.imgs.length ? <Image urls={src.imgs}/> : null}\n      </div>\n      {info ? <InfoBox data={info}/> : null}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}