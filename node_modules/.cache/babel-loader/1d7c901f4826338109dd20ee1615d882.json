{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InfoBox.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n// import DeletePoint from \"./DeletePoint\";\n\n/*\n  - pass object info and mouseclick position to component\n  - component is a div set at mouseclick position and displays object info as text\n*/\nfunction InfoBox({\n  info,\n  setInfo,\n  data,\n  setData\n}) {\n  const target = info.target;\n  var content = null;\n  /*\n    deleting point i:\n    - find data[i-1] and set its target to data[i+1]. then remove data[i] from array\n    - if data[i] is first point, just remove from array\n     - if first point => just delete\n    - prevNode exists but is not linked => just delete\n    - prevNode exists and is linked, but no nextNode => set prevNode target to null, then delete\n    - prevNode exists, is linked, and has next node => set prevNode target to nextNode, then delete\n    - prevNode exists, is linked to multiple nodes => remove target node from prevNode, then delete\n  */\n\n  const handleDelete = e => {\n    e.preventDefault();\n    const node = data.find(n => n.id === target.id);\n    const prevNode = data[data.indexOf(node) - 1];\n    const nextNode = data[data.indexOf(node) + 1];\n\n    const newData = () => {\n      if (node === data[0]) {\n        //if this is the fist node, delete point and return data\n        return data.filter(n => n !== target);\n      } else {\n        const updatedData = data.map(n => {\n          if (Array.isArray(n.target) && n.target.includes(target.id)) {\n            //for each data entry n, does n.target include id of deleted point?\n            if (n.target.length > 1) {\n              //if multiple targets, delete only point\n              return { ...n,\n                \"target\": n.target.filter(x => x !== target.id)\n              };\n            } else if (nextNode) {\n              //if there's a next node, set it as the new target then delete point\n              return { ...n,\n                \"target\": [target.id + 1]\n              };\n            } else {\n              //if there are no more nodes after this, set target to null\n              return { ...n,\n                \"target\": null\n              };\n            }\n          } else {\n            return n;\n          }\n        });\n        return updatedData.filter(n => n !== target);\n      }\n    };\n\n    setData(newData);\n    setInfo(null);\n  };\n\n  switch (info.type) {\n    case 'link':\n      content = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"From: \", target.source.name, \" (\", target.source.id, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 58\n        }, this), \"To: \", target.target.name, \" (\", target.target.id, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 56\n        }, this), \"Color: \", target.color ? target.color : \"Black\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 57\n        }, this), \"Width: \", target.width ? target.width : \"1.67 (default)\"]\n      }, void 0, true);\n      break;\n\n    default:\n      content = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"ID: \", target.id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 26\n        }, this), \"Time: \", target.x, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 27\n        }, this), \"Y Position: \", target.y, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }, this), \"Target(s): \", target.target ? target.target : \"N/A\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 61\n        }, this), \"Color: \", target.color ? target.color : \"Black\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 57\n        }, this), \"Opacity: \", target.opacity ? target.opacity : \"1\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 59\n        }, this), \"Radius: \", target.radius ? target.radius : \"5 (default)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"Delete Point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui absolute\",\n    style: {\n      left: info.position[0] + 'px',\n      top: info.position[1] + 'px'\n    },\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_c = InfoBox;\nexport default InfoBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoBox\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InfoBox.js"],"names":["InfoBox","info","setInfo","data","setData","target","content","handleDelete","e","preventDefault","node","find","n","id","prevNode","indexOf","nextNode","newData","filter","updatedData","map","Array","isArray","includes","length","x","type","source","name","color","width","y","opacity","radius","left","position","top"],"mappings":"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","sourcesContent":["// import DeletePoint from \"./DeletePoint\";\n/*\n  - pass object info and mouseclick position to component\n  - component is a div set at mouseclick position and displays object info as text\n*/\n\nfunction InfoBox({info, setInfo, data, setData}) {\n  const target = info.target;\n  var content = null;\n\n  /*\n    deleting point i:\n    - find data[i-1] and set its target to data[i+1]. then remove data[i] from array\n    - if data[i] is first point, just remove from array\n\n    - if first point => just delete\n    - prevNode exists but is not linked => just delete\n    - prevNode exists and is linked, but no nextNode => set prevNode target to null, then delete\n    - prevNode exists, is linked, and has next node => set prevNode target to nextNode, then delete\n    - prevNode exists, is linked to multiple nodes => remove target node from prevNode, then delete\n  */\n  const handleDelete = (e) => {\n    e.preventDefault();\n    const node = data.find(n => n.id === target.id);\n    const prevNode = data[data.indexOf(node)-1];\n    const nextNode = data[data.indexOf(node)+1];\n\n    const newData = () => {\n      if (node === data[0]) {  //if this is the fist node, delete point and return data\n        return data.filter(n => n !== target);\n      } else {\n        const updatedData = data.map(n =>\n          {\n            if (Array.isArray(n.target) && n.target.includes(target.id)) { //for each data entry n, does n.target include id of deleted point?\n              if (n.target.length > 1) { //if multiple targets, delete only point\n                return ({...n, \"target\": n.target.filter((x) => x !== target.id)});\n              } else if (nextNode) { //if there's a next node, set it as the new target then delete point\n                return ({...n, \"target\": [target.id+1]});\n              } else { //if there are no more nodes after this, set target to null\n                return ({...n, \"target\": null});\n              }\n            } else {\n              return n;\n            }\n          }\n        )\n        return updatedData.filter(n => n !== target);\n      }\n    }\n\n    setData(newData);\n    setInfo(null);\n  }\n\n  switch (info.type) {\n    case 'link':\n      content =\n        <>\n          From: {target.source.name} ({target.source.id})<br/>\n          To: {target.target.name} ({target.target.id})<br/>\n          Color: {target.color ? target.color : \"Black\"}<br/>\n          Width: {target.width ? target.width : \"1.67 (default)\"}\n        </>\n    break\n    default:\n      content =\n        <>\n          ID: {target.id}<br/>\n          Time: {target.x}<br/>\n          Y Position: {target.y}<br/>\n          Target(s): {target.target ? target.target : \"N/A\"}<br/>\n          Color: {target.color ? target.color : \"Black\"}<br/>\n          Opacity: {target.opacity ? target.opacity : \"1\"}<br/>\n          Radius: {target.radius ? target.radius : \"5 (default)\"}<br/>\n          <button onClick={handleDelete}>Delete Point</button>\n        </>\n  };\n\n  return (\n    <div className=\"ui absolute\" style={{left: info.position[0] + 'px', top: info.position[1] + 'px'}}>\n      {content}\n    </div>\n  );\n}\n\nexport default InfoBox;\n"]},"metadata":{},"sourceType":"module"}