{"ast":null,"code":"import _toConsumableArray from\"/Users/skye/Desktop/Portfolio/chronovis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/skye/Desktop/Portfolio/chronovis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _createForOfIteratorHelper from\"/Users/skye/Desktop/Portfolio/chronovis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _objectSpread from\"/Users/skye/Desktop/Portfolio/chronovis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useState}from'react';import'./stylesheets/index.scss';import Data from\"./data.json\";import NullData from\"./NullData.json\";import TagVisData from\"./tagVis_data.json\";import Graphic from\"./components/Graphic\";import Image from\"./components/Image\";import NewInstantForm from\"./components/NewInstantForm\";import NewIntervalForm from\"./components/NewIntervalForm\";import NewZoneForm from\"./components/NewZoneForm\";import NewScaleForm from\"./components/NewScaleForm\";import EditScaleForm from\"./components/EditScaleForm\";import InfoBox from\"./components/InfoBox\";import ExportDataForm from\"./components/ExportDataForm\";import ImportDataForm from\"./components/ImportDataForm\";import NavBar from\"./components/NavBar\";import Layers from\"./components/Layers\";import Scrubber from\"./components/Scrubber\";import Legend from\"./components/Legend\";import Certainty from\"./components/Certainty\";import Importance from\"./components/Importance\";import Connection from\"./components/Connection\";import WelcomeMessage from\"./components/WelcomeMessage\";import generateIntervals from\"./components/generateIntervals\";import EmptyProj from\"./components/EmptyProj\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function translateData(_ref){var data=_ref.data,nullData=_ref.nullData;var newData=_objectSpread({},nullData);var newInst=newData.instants[0];var scaleName=\"calendarDate\";var xValues=[];var segments=[];// var key = 0;\nvar segmentMin=null;//TODO: automated scale generation\nvar _iterator=_createForOfIteratorHelper(data),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var datum=_step.value;newInst[\"\".concat(datum.id)]={\"x\":datum.calendarDate,\"y\":datum.cy,\"scale\":datum.calendarDate<0?\"early\":scaleName,\"target\":[datum.targets[datum.targets.length-1]],//???\n\"text\":datum.innerText// ...(e.target.color && {\"color\": e.target.color.value}), //if color is specified, create color entry in data\n// ...(e.target.radius && {\"radius\": e.target.radius.value}),\n// ...(e.target.opacity && {\"opacity\": e.target.opacity.value})\n};xValues.push(datum.calendarDate);// key++;\n}}catch(err){_iterator.e(err);}finally{_iterator.f();}xValues.sort(function(a,b){return a-b;});//smallest to largest\n// //TODO: automated scale generation\n// xValues.forEach((val, i) => {\n//   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) {\n//     segments.push({\n//       \"min\": segmentMin,\n//       \"max\":xValues[i]\n//     })\n//     segmentMin = xValues[i+1];\n//   } else if ((segments.length) && (i===xValues.length-1)){ //if there are segments and this is the last value\n//     segments.push({\n//       \"min\": segmentMin,\n//       \"max\": null\n//     })\n//   };\n// });\n// for (let i; i=0; i++) {\n//   console.log(xValues[i]+Math.abs(xValues[i])<xValues[i+1]);\n//   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) { //if a value is less than 1/2 of the next value, create a segment\n//     // segments.push({\n//     //   \"min\": segmentMin,\n//     //   \"max\":xValues[i]\n//     // })\n//     // segmentMin = xValues[i+1];\n//   }\n// }\nnewData.scales[\"early\"]={\"min\":xValues[0]-10,\"max\":xValues[0]+1000,\"units\":\"Years\",\"yPos\":1,\"hideLabel\":true,\"segments\":[{max:xValues[0]}]//todo\n};newData.scales[\"\".concat(scaleName)]={\"min\":xValues[2]-90,\"max\":xValues[xValues.length-1],\"units\":\"Years\",\"yPos\":1,\"segments\":[{min:xValues[2]}]//todo\n};// console.log(minX, maxX);\n// console.log(newData.scales);\nreturn newData;}// function scalesList(scales) {\n//   Object.keys(scales).map((key, i) => {\n//     return <option value={key} key={i}>{key}</option>\n//   });\n// }\nfunction App(){var scaleData={\"imgs\":[],\"instants\":[[]],\"zones\":[],\"scales\":{\"x\":{\"Egyptian Dynasties\":{\"min\":-3100,\"max\":-30,\"units\":\"Years BCE\",\"yPos\":1,\"tickValues\":[],\"segments\":[// {\"max\": -2686, \"label\": \"Early Dynastic\"},\n// {\"min\": -2686, \"max\": -2181, \"label\": \"Old Kingdom\"},\n// {\"min\": -2181, \"max\": -2040, \"label\": \"First Intermediate Period\"},\n// {\"min\": -2040, \"max\": -1649, \"label\": \"Middle Kingdom\"},\n// {\"min\": -1649, \"max\": -1550, \"label\": \"Second Intermediate Period\"},\n// {\"min\": -1550, \"max\": -1077, \"label\": \"New Kingdom\"},\n// {\"min\": -1077, \"max\": -656, \"label\": \"Third Intermediate Period\"},\n// {\"min\": -656, \"max\": -332, \"label\": \"Late Period\"},\n// {\"min\": -332, \"label\": \"Graeco-Roman\"}\n]}},\"y\":{\"Place in Text\":{\"min\":3,\"max\":11,\"units\":\"paragraph\"}}}};//for installation\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),enabled=_useState2[0],setEnabled=_useState2[1];//user defined\nvar radius=4;//for entire project\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),proj=_useState4[0],setProj=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),fileName=_useState6[0],setFileName=_useState6[1];//for the entire ChronoJSON\nvar _useState7=useState(scaleData),_useState8=_slicedToArray(_useState7,2),src=_useState8[0],setSrc=_useState8[1];// console.log(translateData({data:TagVisData,nullData:nullData}))\n//for ChronoJSON history. for undo and redo\nvar _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),history=_useState10[0],setHistory=_useState10[1];//make fixed length array\n//--- copies of the source data. altering visual views does not necessarily change src data---//\n//for toggling the active data as used by scrubber\nvar _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),activeData=_useState12[0],setActiveData=_useState12[1];//for toggling the active layer\nvar _useState13=useState(),_useState14=_slicedToArray(_useState13,2),activeLayer=_useState14[0],setActiveLayer=_useState14[1];//for active tool modes\nvar _useState15=useState(),_useState16=_slicedToArray(_useState15,2),activeTool=_useState16[0],setActiveTool=_useState16[1];//initialize datapoints\nvar _useState17=useState(src.instants[activeData]),_useState18=_slicedToArray(_useState17,2),data=_useState18[0],setData=_useState18[1];//links are initialized in Graphic.js\n// const [links, setLinks] = useState(generateLinks(src.instants[activeData]))\n//initialize zones\nvar _useState19=useState(src.zones),_useState20=_slicedToArray(_useState19,2),zones=_useState20[0],setZones=_useState20[1];//initialize scales\nvar _useState21=useState(src.scales),_useState22=_slicedToArray(_useState21,2),scales=_useState22[0],setScales=_useState22[1];//toggles datapoint IDs vs labels\nvar _useState23=useState(true),_useState24=_slicedToArray(_useState23,2),showLabel=_useState24[0],setShowLabel=_useState24[1];//for toggling the active scale\nvar _useState25=useState([Object.keys(scales.x)[0],Object.keys(scales.y)[0]]),_useState26=_slicedToArray(_useState25,2),activeScale=_useState26[0],setActiveScale=_useState26[1];//---UI stuff---//\n//UI window toggles\nvar _useState27=useState(),_useState28=_slicedToArray(_useState27,2),toggle=_useState28[0],setToggle=_useState28[1];//UI info boxes for points, intervals, etc.\nvar _useState29=useState(),_useState30=_slicedToArray(_useState29,2),info=_useState30[0],setInfo=_useState30[1];//Inflection info\nvar _useState31=useState(),_useState32=_slicedToArray(_useState31,2),inflectTarget=_useState32[0],setInflectTarget=_useState32[1];//Syntactic inflections order\nvar _useState33=useState([null,null,null]),_useState34=_slicedToArray(_useState33,2),syntacticOrder=_useState34[0],setSyntacticOrder=_useState34[1];//[target1, target2, #]. # dictates order, switches b/w 0 and 1\n//--- functions ---//\nvar updateSrc=function updateSrc(newData,key){setHistory([].concat(_toConsumableArray(history),[{src:src,activeScale:activeScale,activeData:activeData,activeLayer:activeLayer}]));//history.length-1 is last src before this\nvar newSrc=src;//why is console.log(data) before & after the same, but new data point still shows up\n//have a function where, if incoming data greater than scale max or less than scale min, set that to scale max/min\nif(key===\"zones\"){setZones(newData);newSrc.zones=zones;}else if(key===\"scales\"){setScales(newData);newSrc.scales=newData;}else{setData(newData);newSrc.instants[activeData]=data;}console.log(history);setSrc(newSrc);setToggle(null);};var undo=function undo(){var newHistory=_toConsumableArray(history);var last=newHistory.pop();if(newHistory.length&&last!==undefined){console.log(newHistory.pop());setHistory([newHistory]);setActiveScale(last.activeScale);setActiveData(last.activeData);setActiveLayer(last.activeLayer);setSrc(last.src);setScales(last.src.scales);setData(last.src.instants[activeData]);setZones(last.src.zones);}else{//turn off undo button\n}};// console.log(info);\n/*\n    TODO:\n    - for piecewise timeline, make function that generates different graphics\n  */return/*#__PURE__*/_jsxs(_Fragment,{children:[info&&/*#__PURE__*/_jsx(InfoBox,{info:info,setInfo:setInfo,history:history,setHistory:setHistory,data:data,setData:setData,src:src,setSrc:setSrc,updateSrc:updateSrc,zones:zones,radius:radius}),/*#__PURE__*/_jsx(NavBar,{toggle:toggle,setToggle:setToggle,data:data,showLabel:showLabel,setShowLabel:setShowLabel,hasScales:Object.keys(scales.y).length,fileName:fileName,setFileName:setFileName,proj:proj,undo:undo}),toggle===\"scrubber\"&&/*#__PURE__*/_jsx(Scrubber,{activeData:activeData,setActiveData:setActiveData,src:src,setData:setData}),toggle===\"NewInstantForm\"&&/*#__PURE__*/_jsx(NewInstantForm,{data:data,setData:setData,target:inflectTarget,setToggle:setToggle,scales:src.scales,activeScale:activeScale,activeData:activeData,history:history,setHistory:setHistory,updateSrc:updateSrc}),toggle===\"editScale\"&&/*#__PURE__*/_jsx(EditScaleForm,{scales:scales,updateSrc:updateSrc,setToggle:setToggle,activeScale:activeScale,setActiveScale:setActiveScale}),toggle===\"addZone\"&&/*#__PURE__*/_jsx(NewZoneForm,{zones:zones,updateSrc:updateSrc,setToggle:setToggle,scales:scales,activeScale:activeScale}),toggle===\"addInterval\"&&/*#__PURE__*/_jsx(NewIntervalForm,{data:data,updateSrc:updateSrc,setToggle:setToggle,scales:scales,activeScale:activeScale,history:history,setHistory:setHistory}),toggle===\"addScale\"&&/*#__PURE__*/_jsx(NewScaleForm,{src:src,updateSrc:updateSrc,setToggle:setToggle,setActiveScale:setActiveScale}),toggle===\"save\"&&/*#__PURE__*/_jsx(ExportDataForm,{src:src,setSrc:setSrc,data:data,zones:zones,scales:scales,activeData:activeData,setToggle:setToggle,fileName:fileName}),toggle===\"legend\"&&/*#__PURE__*/_jsx(Legend,{}),toggle===\"layers\"&&/*#__PURE__*/_jsx(Layers,{activeLayer:activeLayer,setActiveLayer:setActiveLayer,data:data}),toggle===\"import\"&&/*#__PURE__*/_jsx(ImportDataForm,{setSrc:setSrc,setScales:setScales,setZones:setZones,setData:setData,activeData:activeData,setActiveData:setActiveData,activeScale:activeScale,setActiveScale:setActiveScale,setToggle:setToggle,setProj:setProj,setFileName:setFileName}),toggle===\"certainty\"&&/*#__PURE__*/_jsx(Certainty,{target:inflectTarget,setToggle:setToggle,data:data,updateSrc:updateSrc,zones:zones,setZones:setZones}),toggle===\"importance\"&&/*#__PURE__*/_jsx(Importance,{target:inflectTarget,setToggle:setToggle,data:data,setData:setData,zones:zones,setZones:setZones,radius:radius,setProj:setProj}),toggle===\"connection\"&&/*#__PURE__*/_jsx(Connection,{target:syntacticOrder,setToggle:setToggle,data:data,setData:setData,zones:zones,setZones:setZones}),proj?/*#__PURE__*/_jsxs(\"div\",{id:\"main\",className:\"container fullHeight\",children:[Object.keys(scales.x).length?/*#__PURE__*/_jsx(Graphic,{data:data,setData:setData,updateSrc:updateSrc,zones:zones,setZones:setZones,radius:radius,info:info,setInfo:setInfo,setInflectTarget:setInflectTarget,showLabel:showLabel,activeLayer:activeLayer,toggle:toggle,setToggle:setToggle,scales:scales,setScales:setScales,syntacticOrder:syntacticOrder,setSyntacticOrder:setSyntacticOrder,activeScale:activeScale}):/*#__PURE__*/_jsx(EmptyProj,{setToggle:setToggle}),src.imgs.length>0&&/*#__PURE__*/_jsx(Image,{urls:src.imgs})]}):/*#__PURE__*/_jsx(WelcomeMessage,{setProj:setProj,setFileName:setFileName,setToggle:setToggle})]});}export default App;","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/chronovis/src/App.js"],"names":["React","useState","Data","NullData","TagVisData","Graphic","Image","NewInstantForm","NewIntervalForm","NewZoneForm","NewScaleForm","EditScaleForm","InfoBox","ExportDataForm","ImportDataForm","NavBar","Layers","Scrubber","Legend","Certainty","Importance","Connection","WelcomeMessage","generateIntervals","EmptyProj","translateData","data","nullData","newData","newInst","instants","scaleName","xValues","segments","segmentMin","datum","id","calendarDate","cy","targets","length","innerText","push","sort","a","b","scales","max","min","App","scaleData","enabled","setEnabled","radius","proj","setProj","fileName","setFileName","src","setSrc","history","setHistory","activeData","setActiveData","activeLayer","setActiveLayer","activeTool","setActiveTool","setData","zones","setZones","setScales","showLabel","setShowLabel","Object","keys","x","y","activeScale","setActiveScale","toggle","setToggle","info","setInfo","inflectTarget","setInflectTarget","syntacticOrder","setSyntacticOrder","updateSrc","key","newSrc","console","log","undo","newHistory","last","pop","undefined","imgs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./data.json\";\nimport NullData from \"./NullData.json\";\nimport TagVisData from \"./tagVis_data.json\"\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewInstantForm from \"./components/NewInstantForm\";\nimport NewIntervalForm from \"./components/NewIntervalForm\";\nimport NewZoneForm from \"./components/NewZoneForm\";\nimport NewScaleForm from \"./components/NewScaleForm\";\nimport EditScaleForm from \"./components/EditScaleForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\";\nimport ImportDataForm from \"./components/ImportDataForm\";\nimport NavBar from \"./components/NavBar\";\nimport Layers from \"./components/Layers\";\nimport Scrubber from \"./components/Scrubber\";\nimport Legend from \"./components/Legend\";\nimport Certainty from \"./components/Certainty\";\nimport Importance from \"./components/Importance\";\nimport Connection from \"./components/Connection\";\nimport WelcomeMessage from \"./components/WelcomeMessage\";\nimport generateIntervals from \"./components/generateIntervals\";\nimport EmptyProj from \"./components/EmptyProj\";\n\n\nfunction translateData({data, nullData}) {\n  const newData = {...nullData};\n  const newInst = newData.instants[0];\n  const scaleName = \"calendarDate\";\n  const xValues = [];\n  const segments = [];\n  // var key = 0;\n  var segmentMin = null;\n\n  //TODO: automated scale generation\n  for (const datum of data) {\n    newInst[`${datum.id}`] = {\n      \"x\": datum.calendarDate,\n      \"y\": datum.cy,\n      \"scale\": (datum.calendarDate<0)?\"early\":scaleName,\n      \"target\": [datum.targets[datum.targets.length-1]], //???\n      \"text\": datum.innerText,\n      // ...(e.target.color && {\"color\": e.target.color.value}), //if color is specified, create color entry in data\n      // ...(e.target.radius && {\"radius\": e.target.radius.value}),\n      // ...(e.target.opacity && {\"opacity\": e.target.opacity.value})\n    };\n    xValues.push(datum.calendarDate);\n    // key++;\n  }\n\n  xValues.sort((a, b) => a-b); //smallest to largest\n\n  // //TODO: automated scale generation\n  // xValues.forEach((val, i) => {\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) {\n  //     segments.push({\n  //       \"min\": segmentMin,\n  //       \"max\":xValues[i]\n  //     })\n  //     segmentMin = xValues[i+1];\n  //   } else if ((segments.length) && (i===xValues.length-1)){ //if there are segments and this is the last value\n  //     segments.push({\n  //       \"min\": segmentMin,\n  //       \"max\": null\n  //     })\n  //   };\n  // });\n  // for (let i; i=0; i++) {\n  //   console.log(xValues[i]+Math.abs(xValues[i])<xValues[i+1]);\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) { //if a value is less than 1/2 of the next value, create a segment\n  //     // segments.push({\n  //     //   \"min\": segmentMin,\n  //     //   \"max\":xValues[i]\n  //     // })\n  //     // segmentMin = xValues[i+1];\n  //   }\n  // }\n  newData.scales[\"early\"] = {\n    \"min\": xValues[0]-10,\n    \"max\": xValues[0]+1000,\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"hideLabel\":true,\n    \"segments\": [{max: xValues[0]}] //todo\n  }\n\n  newData.scales[`${scaleName}`] = {\n    \"min\": xValues[2]-90,\n    \"max\": xValues[xValues.length-1],\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"segments\": [{min:xValues[2]}] //todo\n  }\n\n\n  // console.log(minX, maxX);\n  // console.log(newData.scales);\n  return newData;\n}\n\n\n// function scalesList(scales) {\n//   Object.keys(scales).map((key, i) => {\n//     return <option value={key} key={i}>{key}</option>\n//   });\n// }\n\nfunction App() {\n\n  const scaleData = {\n    \"imgs\": [],\n    \"instants\":\n    [\n      []\n    ],\n    \"zones\":\n    [],\n    \"scales\":\n    {\n      \"x\":{\n        \"Egyptian Dynasties\": {\n          \"min\": -3100,\n          \"max\": -30,\n          \"units\": \"Years BCE\",\n          \"yPos\": 1,\n          \"tickValues\": [],\n          \"segments\": [\n            // {\"max\": -2686, \"label\": \"Early Dynastic\"},\n            // {\"min\": -2686, \"max\": -2181, \"label\": \"Old Kingdom\"},\n            // {\"min\": -2181, \"max\": -2040, \"label\": \"First Intermediate Period\"},\n            // {\"min\": -2040, \"max\": -1649, \"label\": \"Middle Kingdom\"},\n            // {\"min\": -1649, \"max\": -1550, \"label\": \"Second Intermediate Period\"},\n            // {\"min\": -1550, \"max\": -1077, \"label\": \"New Kingdom\"},\n            // {\"min\": -1077, \"max\": -656, \"label\": \"Third Intermediate Period\"},\n            // {\"min\": -656, \"max\": -332, \"label\": \"Late Period\"},\n            // {\"min\": -332, \"label\": \"Graeco-Roman\"}\n          ]\n        }\n      },\n      \"y\":{\n        \"Place in Text\": {\n          \"min\": 3,\n          \"max\": 11,\n          \"units\": \"paragraph\"\n        }\n      }\n    }\n  };\n\n  //for installation\n  const [enabled, setEnabled] = useState(false);\n\n  //user defined\n  const radius = 4;\n\n  //for entire project\n  const [proj, setProj] = useState(false);\n  const [fileName, setFileName] = useState(\"\");\n\n  //for the entire ChronoJSON\n  const [src, setSrc] = useState(scaleData);\n  // console.log(translateData({data:TagVisData,nullData:nullData}))\n  //for ChronoJSON history. for undo and redo\n  const [history, setHistory] = useState([]) //make fixed length array\n\n  //--- copies of the source data. altering visual views does not necessarily change src data---//\n  //for toggling the active data as used by scrubber\n  const [activeData, setActiveData] = useState(0);\n  //for toggling the active layer\n  const [activeLayer, setActiveLayer] = useState();\n  //for active tool modes\n  const [activeTool, setActiveTool] = useState();\n\n  //initialize datapoints\n  const [data, setData] = useState(src.instants[activeData]);\n  //links are initialized in Graphic.js\n  // const [links, setLinks] = useState(generateLinks(src.instants[activeData]))\n  //initialize zones\n  const [zones, setZones] = useState(src.zones);\n  //initialize scales\n  const [scales, setScales] = useState(src.scales);\n\n  //toggles datapoint IDs vs labels\n  const [showLabel, setShowLabel] = useState(true);\n\n  //for toggling the active scale\n  const [activeScale, setActiveScale] = useState([Object.keys(scales.x)[0],Object.keys(scales.y)[0]])\n\n  //---UI stuff---//\n  //UI window toggles\n  const [toggle, setToggle] = useState();\n  //UI info boxes for points, intervals, etc.\n  const [info, setInfo] = useState();\n  //Inflection info\n  const [inflectTarget, setInflectTarget] = useState();\n  //Syntactic inflections order\n  const [syntacticOrder, setSyntacticOrder] = useState([null, null, null]); //[target1, target2, #]. # dictates order, switches b/w 0 and 1\n\n  //--- functions ---//\n  const updateSrc = (newData, key) => {\n    setHistory([...history, {src:src, activeScale: activeScale, activeData: activeData, activeLayer: activeLayer}]); //history.length-1 is last src before this\n    const newSrc = src;\n    //why is console.log(data) before & after the same, but new data point still shows up\n    //have a function where, if incoming data greater than scale max or less than scale min, set that to scale max/min\n    if (key===\"zones\") {\n      setZones(newData);\n      newSrc.zones = zones;\n    } else if (key===\"scales\") {\n      setScales(newData);\n      newSrc.scales = newData;\n    } else {\n      setData(newData);\n      newSrc.instants[activeData] = data;\n    }\n    console.log(history)\n    setSrc(newSrc);\n    setToggle(null);\n  }\n\n const undo = () => {\n   const newHistory = [...history];\n   const last = newHistory.pop();\n   if (newHistory.length&&(last !== undefined)) {\n     console.log(newHistory.pop())\n     setHistory([newHistory]);\n     setActiveScale(last.activeScale);\n     setActiveData(last.activeData);\n     setActiveLayer(last.activeLayer);\n     setSrc(last.src);\n     setScales(last.src.scales);\n     setData(last.src.instants[activeData]);\n     setZones(last.src.zones);\n   } else {\n     //turn off undo button\n   }\n }\n\n\n  // console.log(info);\n  /*\n    TODO:\n    - for piecewise timeline, make function that generates different graphics\n  */\n  return (\n    <>\n      {info && <InfoBox\n        info={info}\n        setInfo={setInfo}\n        history={history} setHistory={setHistory}\n        data={data} setData={setData}\n        src={src} setSrc={setSrc}\n        updateSrc={updateSrc}\n        zones={zones}\n        radius={radius}\n      />}\n      <NavBar\n        toggle={toggle}\n        setToggle={setToggle}\n        data={data} showLabel={showLabel}\n        setShowLabel={setShowLabel}\n        hasScales={Object.keys(scales.y).length}\n        fileName={fileName}\n        setFileName={setFileName}\n        proj={proj}\n        undo={undo}\n      />\n      {toggle===\"scrubber\" && <Scrubber activeData={activeData} setActiveData={setActiveData} src={src} setData={setData}/>}\n      {toggle===\"NewInstantForm\" &&\n        <NewInstantForm\n          data={data}\n          setData={setData}\n          target={inflectTarget}\n          setToggle={setToggle}\n          scales={src.scales}\n          activeScale={activeScale}\n          activeData={activeData}\n          history={history} setHistory={setHistory}\n          updateSrc={updateSrc}\n        />\n      }\n      {toggle===\"editScale\" && <EditScaleForm scales={scales} updateSrc={updateSrc} setToggle={setToggle} activeScale={activeScale} setActiveScale={setActiveScale}/>}\n      {toggle===\"addZone\" && <NewZoneForm zones={zones} updateSrc={updateSrc} setToggle={setToggle} scales={scales} activeScale={activeScale}/>}\n      {toggle===\"addInterval\" && <NewIntervalForm data={data} updateSrc={updateSrc} setToggle={setToggle} scales={scales} activeScale={activeScale} history={history} setHistory={setHistory}/>}\n      {toggle===\"addScale\" && <NewScaleForm src={src} updateSrc={updateSrc} setToggle={setToggle} setActiveScale={setActiveScale}/>}\n      {toggle===\"save\" &&\n        <ExportDataForm\n          src={src}\n          setSrc={setSrc}\n          data={data}\n          zones={zones}\n          scales={scales}\n          activeData={activeData}\n          setToggle={setToggle}\n          fileName={fileName}\n        />\n      }\n      {toggle===\"legend\" && <Legend/>}\n      {toggle===\"layers\" && <Layers activeLayer={activeLayer} setActiveLayer={setActiveLayer} data={data}/>}\n      {toggle===\"import\" &&\n        <ImportDataForm\n          setSrc={setSrc}\n          setScales={setScales}\n          setZones={setZones}\n          setData={setData}\n          activeData={activeData}\n          setActiveData={setActiveData}\n          activeScale={activeScale}\n          setActiveScale={setActiveScale}\n          setToggle={setToggle}\n          setProj={setProj}\n          setFileName={setFileName}\n        />\n      }\n      {toggle===\"certainty\" &&\n        <Certainty\n          target={inflectTarget}\n          setToggle={setToggle}\n          data={data}\n          updateSrc={updateSrc}\n          zones={zones}\n          setZones={setZones}\n        />\n      }\n      {toggle===\"importance\" &&\n        <Importance\n          target={inflectTarget}\n          setToggle={setToggle}\n          data={data}\n          setData={setData}\n          zones={zones}\n          setZones={setZones}\n          radius={radius}\n          setProj={setProj}\n        />\n      }\n      {toggle===\"connection\" &&\n        <Connection\n          target={syntacticOrder}\n          setToggle={setToggle}\n          data={data}\n          setData={setData}\n          zones={zones}\n          setZones={setZones}\n        />\n      }\n\n      {proj ?\n        <div id=\"main\" className=\"container fullHeight\">\n          {Object.keys(scales.x).length ?\n            <Graphic\n              data={data}\n              setData={setData}\n              updateSrc={updateSrc}\n              zones={zones}\n              setZones={setZones}\n              radius={radius}\n              info={info}\n              setInfo={setInfo}\n              setInflectTarget={setInflectTarget}\n              showLabel={showLabel}\n              activeLayer={activeLayer}\n              toggle={toggle}\n              setToggle={setToggle}\n              scales={scales}\n              setScales={setScales}\n              syntacticOrder={syntacticOrder}\n              setSyntacticOrder={setSyntacticOrder}\n              activeScale={activeScale}\n            />\n            : <EmptyProj setToggle={setToggle}/>\n          }\n          {src.imgs.length>0 && <Image urls={src.imgs}/>}\n        </div> :\n        <WelcomeMessage setProj={setProj} setFileName={setFileName} setToggle={setToggle}/>\n      }\n\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}