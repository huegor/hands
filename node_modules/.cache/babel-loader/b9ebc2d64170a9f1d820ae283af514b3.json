{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./data.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewPointForm from \"./components/NewPointForm\";\nimport generateLinks from \"./components/generateLinks\"; //iterates thru xy values in json data to find min and max values\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction findMinMax(data) {\n  var [minX, minY] = [Infinity, Infinity]; //assign values for multiple vars\n\n  var [maxX, maxY] = [-Infinity, -Infinity];\n  var tmpX, tmpY;\n\n  for (var i = data.length - 1; i >= 0; i--) {\n    tmpX = data[i].x;\n    tmpY = data[i].y;\n    if (tmpX < minX) minX = tmpX;\n    if (tmpX > maxX) maxX = tmpX;\n    if (tmpY < minY) minY = tmpY;\n    if (tmpY > maxY) maxY = tmpY;\n  }\n\n  return [minX, maxX, minY, maxY];\n}\n\nfunction App() {\n  _s();\n\n  //user defined\n  const radius = 5;\n  const fontSize = 20; //for the entire ChronoJSON\n\n  const [src, setSrc] = useState(Data); //pertaining to datapoints only\n\n  const [data, setData] = useState(src.nodes);\n  /*\n    TODO:\n    - findMinMax() adjust less frequently. ie: if new data can be panned to, no need to adjust viewport\n    - for piecewise timeline, make function that generates different graphics\n    - create a master array of all snapshots of data (for scrubber)\n  */\n  // const data = {nodes: src.nodes, links:generateLinks(src.nodes), imgs:src.imgs};\n\n  /*\n    - pass object data and mouseclick position to component\n    - component is a div set at mouseclick position and displays object data as text\n  */\n\n  function InfoBox({\n    nodeData,\n    position\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Graphic, {\n      data: data,\n      setData: setData,\n      minMax: findMinMax(data),\n      radius: radius,\n      fontSize: fontSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewPointForm, {\n      data: data,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images\",\n      children: src.imgs ? /*#__PURE__*/_jsxDEV(Image, {\n        urls: src.imgs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"tPyBlXqo/4WTD+1C7Yvfk70aZwk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js"],"names":["React","useState","Data","Graphic","Image","NewPointForm","generateLinks","findMinMax","data","minX","minY","Infinity","maxX","maxY","tmpX","tmpY","i","length","x","y","App","radius","fontSize","src","setSrc","setData","nodes","InfoBox","nodeData","position","imgs"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,0BAAP;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,aAAP,MAA0B,4BAA1B,C,CAEA;;;;;AACA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,MAAI,CAACC,IAAD,EAAOC,IAAP,IAAe,CAACC,QAAD,EAAWA,QAAX,CAAnB,CADwB,CACiB;;AACzC,MAAI,CAACC,IAAD,EAAOC,IAAP,IAAe,CAAC,CAACF,QAAF,EAAY,CAACA,QAAb,CAAnB;AACA,MAAIG,IAAJ,EAAUC,IAAV;;AAEA,OAAK,IAAIC,CAAC,GAAGR,IAAI,CAACS,MAAL,GAAY,CAAzB,EAA4BD,CAAC,IAAE,CAA/B,EAAkCA,CAAC,EAAnC,EAAuC;AACrCF,IAAAA,IAAI,GAAGN,IAAI,CAACQ,CAAD,CAAJ,CAAQE,CAAf;AACAH,IAAAA,IAAI,GAAGP,IAAI,CAACQ,CAAD,CAAJ,CAAQG,CAAf;AACA,QAAIL,IAAI,GAAGL,IAAX,EAAiBA,IAAI,GAAGK,IAAP;AACjB,QAAIA,IAAI,GAAGF,IAAX,EAAiBA,IAAI,GAAGE,IAAP;AACjB,QAAIC,IAAI,GAAGL,IAAX,EAAiBA,IAAI,GAAGK,IAAP;AACjB,QAAIA,IAAI,GAAGF,IAAX,EAAiBA,IAAI,GAAGE,IAAP;AAClB;;AACD,SACE,CAACN,IAAD,EAAOG,IAAP,EAAaF,IAAb,EAAmBG,IAAnB,CADF;AAGD;;AAED,SAASO,GAAT,GAAe;AAAA;;AAEb;AACA,QAAMC,MAAM,GAAG,CAAf;AACA,QAAMC,QAAQ,GAAG,EAAjB,CAJa,CAMb;;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBvB,QAAQ,CAACC,IAAD,CAA9B,CAPa,CAQb;;AACA,QAAM,CAACM,IAAD,EAAOiB,OAAP,IAAkBxB,QAAQ,CAACsB,GAAG,CAACG,KAAL,CAAhC;AAEA;AACF;AACA;AACA;AACA;AACA;AACE;;AAEA;AACF;AACA;AACA;;AACE,WAASC,OAAT,CAAiB;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAjB,EAAuC;AAErC,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAGD,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAErB,IAAf;AAAqB,MAAA,OAAO,EAAEiB,OAA9B;AAAuC,MAAA,MAAM,EAAElB,UAAU,CAACC,IAAD,CAAzD;AAAiE,MAAA,MAAM,EAAEa,MAAzE;AAAiF,MAAA,QAAQ,EAAEC;AAA3F;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEd,IAApB;AAA0B,MAAA,OAAO,EAAEiB;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACGF,GAAG,CAACO,IAAJ,gBAAW,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEP,GAAG,CAACO;AAAjB;AAAA;AAAA;AAAA;AAAA,cAAX,GAAsC;AADzC;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAUD;;GA3CQV,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./data.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewPointForm from \"./components/NewPointForm\";\nimport generateLinks from \"./components/generateLinks\";\n\n//iterates thru xy values in json data to find min and max values\nfunction findMinMax(data) {\n  var [minX, minY] = [Infinity, Infinity]; //assign values for multiple vars\n  var [maxX, maxY] = [-Infinity, -Infinity];\n  var tmpX, tmpY;\n\n  for (var i = data.length-1; i>=0; i--) {\n    tmpX = data[i].x;\n    tmpY = data[i].y;\n    if (tmpX < minX) minX = tmpX;\n    if (tmpX > maxX) maxX = tmpX;\n    if (tmpY < minY) minY = tmpY;\n    if (tmpY > maxY) maxY = tmpY;\n  }\n  return(\n    [minX, maxX, minY, maxY]\n  );\n}\n\nfunction App() {\n\n  //user defined\n  const radius = 5;\n  const fontSize = 20;\n\n  //for the entire ChronoJSON\n  const [src, setSrc] = useState(Data);\n  //pertaining to datapoints only\n  const [data, setData] = useState(src.nodes);\n\n  /*\n    TODO:\n    - findMinMax() adjust less frequently. ie: if new data can be panned to, no need to adjust viewport\n    - for piecewise timeline, make function that generates different graphics\n    - create a master array of all snapshots of data (for scrubber)\n  */\n  // const data = {nodes: src.nodes, links:generateLinks(src.nodes), imgs:src.imgs};\n\n  /*\n    - pass object data and mouseclick position to component\n    - component is a div set at mouseclick position and displays object data as text\n  */\n  function InfoBox({nodeData, position}) {\n\n    return (\n      <div>\n        hi\n      </div>\n    );\n  }\n\n\n  return (\n    <>\n      <Graphic data={data} setData={setData} minMax={findMinMax(data)} radius={radius} fontSize={fontSize}/>\n      <NewPointForm data={data} setData={setData}/>\n      <InfoBox/>\n      <div className=\"images\">\n        {src.imgs ? <Image urls={src.imgs}/> : null}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}