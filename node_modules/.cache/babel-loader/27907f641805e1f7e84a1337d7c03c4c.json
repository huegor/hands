{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';// import { select, drag, axisBottom, scalePoint } from \"d3\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Scrubber(_ref){var activeData=_ref.activeData,setActiveData=_ref.setActiveData,src=_ref.src,setData=_ref.setData;var handleClick=function handleClick(e){if(e.target.id===\"foward\"){setActiveData(activeData+=1);}else{setActiveData(activeData-=1);}setData(src.instants[activeData]);};// //initialize reference object to pass to svg in React Dom\n// const svgRef = useRef();\n//\n// useEffect(() => {\n//   const svg = select(svgRef.current);\n//\n//   const dragged = drag()\n//     .on(\"drag\", e => {\n//       console.log(activeData);\n//       // if ((e.dx > 0) && (activeData>src.nodes.length-1 )) {\n//       //   setActiveData(activeData += 1);\n//       // } else if (activeData<0) {\n//       //   setActiveData(activeData -= 1);\n//       // }\n//       // console.log(activeData);\n//     });\n//\n//   const scale = scalePoint()\n//     .domain(src.nodes.map((n) => src.nodes.indexOf(n)))\n//     .range([0, 300]); //todo\n//\n//   const axis = axisBottom(scale);\n//\n//   svg\n//     .select(\".scrubber-axis\")\n//     .style(\"transform\", `translateY(70px)`) //todo\n//     .call(axis);\n//\n//   svg\n//     .append(\"circle\")\n//     .attr(\"r\", 5)\n//     .attr(\"cx\", activeData)\n//     .attr(\"cy\", 50)\n//     .call(dragged)\n//     .on(\"click\", () => {setActiveData(activeData+=1)});\n//\n// }, [activeData, src]);\n// <svg ref={svgRef} className=\"ui absolute center\">\n//   <g className=\"scrubber-axis\" />\n// </svg>\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"ui absolute center\",children:[/*#__PURE__*/_jsx(\"button\",{id:\"back\",onClick:handleClick,disabled:activeData===0,children:\"<\"}),activeData,/*#__PURE__*/_jsx(\"button\",{id:\"foward\",onClick:handleClick,disabled:activeData===src.instants.length-1,children:\">\"})]});}export default Scrubber;","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/chronovis/src/components/Scrubber.js"],"names":["React","useState","useEffect","useRef","Scrubber","activeData","setActiveData","src","setData","handleClick","e","target","id","instants","length"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAmD,OAAnD,CACA;wFAEA,QAASC,CAAAA,QAAT,MAA6D,IAA1CC,CAAAA,UAA0C,MAA1CA,UAA0C,CAA9BC,aAA8B,MAA9BA,aAA8B,CAAfC,GAAe,MAAfA,GAAe,CAAVC,OAAU,MAAVA,OAAU,CAE3D,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAO,CACzB,GAAIA,CAAC,CAACC,MAAF,CAASC,EAAT,GAAgB,QAApB,CAA8B,CAC5BN,aAAa,CAACD,UAAU,EAAI,CAAf,CAAb,CACD,CAFD,IAEO,CACLC,aAAa,CAACD,UAAU,EAAI,CAAf,CAAb,CACD,CACDG,OAAO,CAACD,GAAG,CAACM,QAAJ,CAAaR,UAAb,CAAD,CAAP,CACD,CAPD,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA,mBACE,aAAK,SAAS,CAAC,oBAAf,wBACE,eAAQ,EAAE,CAAC,MAAX,CAAkB,OAAO,CAAEI,WAA3B,CAAwC,QAAQ,CAAEJ,UAAU,GAAG,CAA/D,eADF,CAEGA,UAFH,cAGE,eAAQ,EAAE,CAAC,QAAX,CAAoB,OAAO,CAAEI,WAA7B,CAA0C,QAAQ,CAAEJ,UAAU,GAAGE,GAAG,CAACM,QAAJ,CAAaC,MAAb,CAAoB,CAArF,eAHF,GADF,CAOD,CAED,cAAeV,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n// import { select, drag, axisBottom, scalePoint } from \"d3\";\n\nfunction Scrubber({activeData, setActiveData, src, setData}) {\n\n  const handleClick = (e) => {\n    if (e.target.id === \"foward\") {\n      setActiveData(activeData += 1);\n    } else {\n      setActiveData(activeData -= 1);\n    }\n    setData(src.instants[activeData]);\n  }\n\n  // //initialize reference object to pass to svg in React Dom\n  // const svgRef = useRef();\n  //\n  // useEffect(() => {\n  //   const svg = select(svgRef.current);\n  //\n  //   const dragged = drag()\n  //     .on(\"drag\", e => {\n  //       console.log(activeData);\n  //       // if ((e.dx > 0) && (activeData>src.nodes.length-1 )) {\n  //       //   setActiveData(activeData += 1);\n  //       // } else if (activeData<0) {\n  //       //   setActiveData(activeData -= 1);\n  //       // }\n  //       // console.log(activeData);\n  //     });\n  //\n  //   const scale = scalePoint()\n  //     .domain(src.nodes.map((n) => src.nodes.indexOf(n)))\n  //     .range([0, 300]); //todo\n  //\n  //   const axis = axisBottom(scale);\n  //\n  //   svg\n  //     .select(\".scrubber-axis\")\n  //     .style(\"transform\", `translateY(70px)`) //todo\n  //     .call(axis);\n  //\n  //   svg\n  //     .append(\"circle\")\n  //     .attr(\"r\", 5)\n  //     .attr(\"cx\", activeData)\n  //     .attr(\"cy\", 50)\n  //     .call(dragged)\n  //     .on(\"click\", () => {setActiveData(activeData+=1)});\n  //\n  // }, [activeData, src]);\n\n\n  // <svg ref={svgRef} className=\"ui absolute center\">\n  //   <g className=\"scrubber-axis\" />\n  // </svg>\n\n  return (\n    <div className=\"ui absolute center\">\n      <button id=\"back\" onClick={handleClick} disabled={activeData===0}>&lt;</button>\n      {activeData}\n      <button id=\"foward\" onClick={handleClick} disabled={activeData===src.instants.length-1}>&gt;</button>\n    </div>\n  );\n}\n\nexport default Scrubber;\n"]},"metadata":{},"sourceType":"module"}