{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./data.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewPointForm from \"./components/NewPointForm\";\nimport generateLinks from \"./components/generateLinks\"; //iterates thru xy values in json data to find min and max values\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction findMinMax(data) {\n  var [minX, minY] = [Infinity, Infinity]; //assign values for multiple vars\n\n  var [maxX, maxY] = [-Infinity, -Infinity];\n  var tmpX, tmpY;\n\n  for (var i = data.length - 1; i >= 0; i--) {\n    tmpX = data[i].x;\n    tmpY = data[i].y;\n    if (tmpX < minX) minX = tmpX;\n    if (tmpX > maxX) maxX = tmpX;\n    if (tmpY < minY) minY = tmpY;\n    if (tmpY > maxY) maxY = tmpY;\n  }\n\n  return [minX, maxX, minY, maxY];\n}\n\nclass ToolsBar extends React.Component {\n  constructor(props) {\n    super(props); // Don't call this.setState() here!\n\n    this.state = {\n      counter: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"ui relative\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Add Point\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Toggle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/*\n  - pass object data and mouseclick position to component\n  - component is a div set at mouseclick position and displays object data as text\n*/\n\n\nfunction InfoBox({\n  nodeData,\n  position\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_c = InfoBox;\n\nfunction App() {\n  _s();\n\n  //user defined\n  const radius = 5;\n  const fontSize = 20; //for the entire ChronoJSON\n\n  const [src, setSrc] = useState(Data); //pertaining to datapoints only\n\n  const [data, setData] = useState(src.nodes); //UI window toggles\n\n  const [toggle, setToggle] = useState();\n  /*\n    TODO:\n    - findMinMax() adjust less frequently. ie: if new data can be panned to, no need to adjust viewport\n    - for piecewise timeline, make function that generates different graphics\n    - create a master array of all snapshots of data (for scrubber)\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToolsBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), toggle === \"newPoint\" ? /*#__PURE__*/_jsxDEV(NewPointForm, {\n      data: data,\n      setData: setData,\n      setToggle: setToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 30\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Graphic, {\n        data: data,\n        setData: setData,\n        minMax: findMinMax(data),\n        radius: radius,\n        fontSize: fontSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"images\",\n        children: src.imgs ? /*#__PURE__*/_jsxDEV(Image, {\n          urls: src.imgs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 23\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"0Yq+IfijTN/ZLY9Eky/yLc7okI4=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InfoBox\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js"],"names":["React","useState","Data","Graphic","Image","NewPointForm","generateLinks","findMinMax","data","minX","minY","Infinity","maxX","maxY","tmpX","tmpY","i","length","x","y","ToolsBar","Component","constructor","props","state","counter","handleClick","bind","e","preventDefault","render","InfoBox","nodeData","position","App","radius","fontSize","src","setSrc","setData","nodes","toggle","setToggle","imgs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./data.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewPointForm from \"./components/NewPointForm\";\nimport generateLinks from \"./components/generateLinks\";\n\n//iterates thru xy values in json data to find min and max values\nfunction findMinMax(data) {\n  var [minX, minY] = [Infinity, Infinity]; //assign values for multiple vars\n  var [maxX, maxY] = [-Infinity, -Infinity];\n  var tmpX, tmpY;\n\n  for (var i = data.length-1; i>=0; i--) {\n    tmpX = data[i].x;\n    tmpY = data[i].y;\n    if (tmpX < minX) minX = tmpX;\n    if (tmpX > maxX) maxX = tmpX;\n    if (tmpY < minY) minY = tmpY;\n    if (tmpY > maxY) maxY = tmpY;\n  }\n  return(\n    [minX, maxX, minY, maxY]\n  );\n}\n\n\nclass ToolsBar extends React.Component {\n  constructor(props) {\n    super(props);\n    // Don't call this.setState() here!\n    this.state = {\n      counter: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <nav className=\"ui relative\">\n        <ul>\n          <li><button>Add Point</button></li>\n          <li><button>Toggle</button></li>\n          <li><button>Settings</button></li>\n          <li><button>Save</button></li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\n\n/*\n  - pass object data and mouseclick position to component\n  - component is a div set at mouseclick position and displays object data as text\n*/\nfunction InfoBox({nodeData, position}) {\n\n  return (\n    <div>\n      hi\n    </div>\n  );\n}\n\n\nfunction App() {\n\n  //user defined\n  const radius = 5;\n  const fontSize = 20;\n\n  //for the entire ChronoJSON\n  const [src, setSrc] = useState(Data);\n  //pertaining to datapoints only\n  const [data, setData] = useState(src.nodes);\n  //UI window toggles\n  const [toggle, setToggle]= useState();\n\n  /*\n    TODO:\n    - findMinMax() adjust less frequently. ie: if new data can be panned to, no need to adjust viewport\n    - for piecewise timeline, make function that generates different graphics\n    - create a master array of all snapshots of data (for scrubber)\n  */\n\n  return (\n    <>\n      <ToolsBar/>\n      {toggle===\"newPoint\" ? <NewPointForm data={data} setData={setData} setToggle={setToggle}/> : null}\n      <div id=\"main\">\n        <Graphic data={data} setData={setData} minMax={findMinMax(data)} radius={radius} fontSize={fontSize}/>\n        <div className=\"images\">\n          {src.imgs ? <Image urls={src.imgs}/> : null}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}