{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./data.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewInstantForm from \"./components/NewInstantForm\";\nimport NewZoneForm from \"./components/NewZoneForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\"; // import ImportDataForm from \"./components/ImportDataForm\";\n\nimport ToolsBar from \"./components/ToolsBar\";\nimport Layers from \"./components/Layers\";\nimport Scrubber from \"./components/Scrubber\";\nimport generateLinks from \"./components/generateLinks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Legend() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui absolute dropdown rightPos\",\n    children: [\"Legend\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: 'black'\n          },\n          children: \"\\u2003\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), \" Hank\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: 'red'\n          },\n          children: \"\\u2003\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), \" Peggy\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: '#4DA6FF'\n          },\n          children: \"\\u2003\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), \" Bobby\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Legend;\n\nfunction SelectedDisplay(props) {\n  if (!props.target) {\n    //no selection\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Selected: None\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  } else if (props.target.source) {\n    //link\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected: \", props.target.source.name, \" (\", props.target.source.id, \") \\u2013 \", props.target.target.name, \" (\", props.target.target.id, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  } else if (props.target.start) {\n    //zone\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected: \", props.target.name, \" (\", props.target.start, \" - \", props.target.end, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  } else {\n    //instant\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected: \", props.target.name, \" (\", props.target.id, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_c2 = SelectedDisplay;\n;\n\nfunction Certainty(props) {\n  _s();\n\n  // console.log(props.target);\n  const [input, setInput] = useState(); //set opacity of target\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (props.target.start) {\n      //zone\n      const newZones = [...props.zones];\n      const zone = newZones.find(n => n.id === props.target.id);\n      zone.opacity = parseFloat(input) * .5;\n      props.setZones(newZones);\n      return;\n    }\n\n    const newInstants = [...props.data];\n\n    if (props.target.source) {\n      //link\n      const instant = newInstants.find(n => n.id === props.target.source.id);\n      instant.intervalOpacity = parseFloat(input);\n    } else {\n      //instant\n      const instant = newInstants.find(n => n.id === props.target.id);\n      instant.intervalOpacity = instant.opacity ? instant.opacity : 1; //don't change interval opacity\n\n      instant.opacity = parseFloat(input);\n    }\n\n    props.setData(newInstants);\n  };\n\n  const handleClose = e => {\n    props.setToggle(null);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"right\",\n      onClick: handleClose,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(SelectedDisplay, {\n      target: props.target\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Certainty\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"0 (never) - 1 (certain)\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Certainty, \"+E2veEehVihf73G+Rv7Nq0ryIOw=\");\n\n_c3 = Certainty;\n\nfunction Importance(props) {\n  _s2();\n\n  //TODO: intervals, negatives, \"steps\"\n  const [input, setInput] = useState(); //todo: make for interval also\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (props.target.start) {\n      //zone\n      const newZones = [...props.Zones];\n      const zone = newZones.find(n => n.id === props.target.id);\n      zone.importance = parseFloat(input);\n      props.setZones(newZones);\n      return;\n    }\n\n    const newInstants = [...props.data];\n\n    if (props.target.source) {\n      //link\n      const instant = newInstants.find(n => n.id === props.target.source.id);\n      instant.intervalWidth = instant.intervalWidth ? instant.intervalWidth * (1 + input / 2) : props.radius / 3 * (1 + input / 2); //if intervalWidth defined, multiply. otherwise, use default\n    } else {\n      //instant\n      const instant = newInstants.find(n => n.id === props.target.id);\n      instant.radius = instant.radius ? instant.radius * (1 + input / 2) : props.radius * (1 + input / 2); //if radius defined, multiply. otherwise, use default radius\n    }\n\n    props.setData(newInstants);\n  };\n\n  const handleClose = e => {\n    props.setToggle(null);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"right\",\n      onClick: handleClose,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(SelectedDisplay, {\n      target: props.target\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Importance\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"ints relative to 0 (+ and -)\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Importance, \"+E2veEehVihf73G+Rv7Nq0ryIOw=\");\n\n_c4 = Importance;\n\nfunction Connection(props) {\n  const handleSubmit = e => {\n    e.preventDefault();\n    /*\n      - error handling: check if target[0] and target[1] exists\n      - find instant w/ id of target[0] and:\n        - If target[1] is:\n          - instant, target[1].id\n          - interval, {\"x\": target.x-source.x, \"y\": mouse pointer, \"scale\":\"smalls\"}\n          - zone, {\"x\": 1622, \"y\": 12, \"scale\":\"smalls\"}\n    */\n\n    if (!props.target[0] || !props.target[0]) {\n      console.log(\"error\");\n      return;\n    }\n\n    const newInstants = [...props.data];\n    const instant = newInstants.find(n => n.id === props.target[0].id);\n\n    if (props.target[1].layerX) {\n      //for interval and zone: is this a mouseEvent?\n      const e = props.target[1];\n      instant.connections = [{\n        \"x\": e.layerX,\n        \"y\": e.layerY\n      }, 0];\n    } else {\n      const instant2 = newInstants.find(n => n.id === props.target[1].id);\n      instant.connections = [instant2.id, 0];\n      instant2.connections = [instant.id, 1];\n    } //\n    // if (props.target.start) { //zone\n    //   const newzones = [...props.zones];\n    //   const zone = newzones.find(n => n.id === props.target.id);\n    //   zone.importance = parseFloat(input);\n    //   props.setZones(newZones);\n    //   return;\n    // }\n    //\n    //\n    // if (props.target.source) { //link\n    //   const instant = newInstants.find(n => n.id === props.target.source.id);\n    //   instant.intervalWidth = instant.intervalWidth ? instant.intervalWidth*(1+input/2) : props.radius/3*(1+input/2); //if intervalWidth defined, multiply. otherwise, use default\n    // } else { //instant\n    //   const instant = newInstants.find(n => n.id === props.target.id);\n    //   instant.radius = instant.radius ? instant.radius*(1+input/2) : props.radius*(1+input/2); //if radius defined, multiply. otherwise, use default radius\n    // }\n\n\n    props.setData(newInstants);\n  };\n\n  const handleClose = e => {\n    props.setToggle(null);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"right\",\n      onClick: handleClose,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connect\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: props.target[0] ? `${props.target[0].name}(${props.target[0].id})` : \"None\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), \" \", !props.target[2] && \"<\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 116\n      }, this), \"with\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: props.target[1] ? `${props.target[1].name}(${props.target[1].id})` : \"None\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), \" \", props.target[2] === 1 && \"<\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = Connection;\n\nfunction App() {\n  _s3();\n\n  //blank ChronoJSON template\n  const nullData = {\n    \"imgs\": [],\n    \"instants\": [[]],\n    \"zones\": []\n  }; //user defined\n\n  const radius = 5; //for the entire ChronoJSON\n\n  const [src, setSrc] = useState(Data); //for ChronoJSON history\n\n  const [history, setHistory] = useState([]); //for toggling the active data as used by scrubber\n\n  const [activeData, setActiveData] = useState(0); //for toggling the active layer\n\n  const [activeLayer, setActiveLayer] = useState(); //initialize datapoints\n\n  const [data, setData] = useState(src.instants[activeData]); //links are initialized in Graphic.js\n  // const [links, setLinks] = useState(generateLinks(src.instants[activeData]))\n  //initialize zones\n\n  const [zones, setZones] = useState(src.zones); //initialize scales\n\n  const [scales, setScales] = useState(src.scales); //toggles datapoint IDs vs labels\n\n  const [showLabel, setShowLabel] = useState(true); //for toggling the active scale\n\n  const [activeScale, setActiveScale] = useState(Object.keys(scales)[0]); //UI window toggles\n\n  const [toggle, setToggle] = useState(); //UI info boxes for points, intervals, etc.\n\n  const [info, setInfo] = useState(); //Inflection info\n\n  const [inflectTarget, setInflectTarget] = useState(); //Syntactic inflections order\n\n  const [syntacticOrder, setSyntacticOrder] = useState([null, null, null]); //[target1, target2, #]. # dictates order, switches b/w 0 and 1\n  // console.log(info);\n\n  /*\n    TODO:\n    - for piecewise timeline, make function that generates different graphics\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToolsBar, {\n      toggle: toggle,\n      setToggle: setToggle,\n      data: data,\n      showLabel: showLabel,\n      setShowLabel: setShowLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), toggle === \"scrubber\" && /*#__PURE__*/_jsxDEV(Scrubber, {\n      activeData: activeData,\n      setActiveData: setActiveData,\n      src: src,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 31\n    }, this), toggle === \"addPoint\" && /*#__PURE__*/_jsxDEV(NewInstantForm, {\n      data: data,\n      setData: setData,\n      setToggle: setToggle,\n      scales: scales,\n      activeScale: activeScale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 31\n    }, this), toggle === \"addZone\" && /*#__PURE__*/_jsxDEV(NewZoneForm, {\n      zones: zones,\n      setZones: setZones,\n      setToggle: setToggle,\n      scales: scales,\n      activeScale: activeScale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 30\n    }, this), toggle === \"save\" && /*#__PURE__*/_jsxDEV(ExportDataForm, {\n      src: src,\n      data: data,\n      activeData: activeData,\n      setToggle: setToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 27\n    }, this), toggle === \"legend\" && /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 29\n    }, this), toggle === \"layers\" && /*#__PURE__*/_jsxDEV(Layers, {\n      activeLayer: activeLayer,\n      setActiveLayer: setActiveLayer,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 29\n    }, this), toggle === \"certainty\" && /*#__PURE__*/_jsxDEV(Certainty, {\n      target: inflectTarget,\n      setToggle: setToggle,\n      data: data,\n      setData: setData,\n      zones: zones,\n      setZones: setZones\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), toggle === \"importance\" && /*#__PURE__*/_jsxDEV(Importance, {\n      target: inflectTarget,\n      setToggle: setToggle,\n      data: data,\n      setData: setData,\n      zones: zones,\n      setZones: setZones,\n      radius: radius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this), toggle === \"connection\" && /*#__PURE__*/_jsxDEV(Connection, {\n      target: syntacticOrder,\n      setToggle: setToggle,\n      data: data,\n      setData: setData,\n      zones: zones,\n      setZones: setZones\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      className: \"container fullHeight\",\n      children: [data.length ? /*#__PURE__*/_jsxDEV(Graphic, {\n        data: data,\n        setData: setData,\n        zones: zones,\n        setZones: setZones,\n        radius: radius,\n        info: info,\n        setInfo: setInfo,\n        setInflectTarget: setInflectTarget,\n        showLabel: showLabel,\n        activeLayer: activeLayer,\n        toggle: toggle,\n        scales: scales,\n        setScales: setScales,\n        syntacticOrder: syntacticOrder,\n        setSyntacticOrder: setSyntacticOrder,\n        activeScale: activeScale\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexCenter\",\n        children: [\"Upload data or \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setToggle(\"addPoint\"),\n          children: \"Add new instant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 13\n      }, this), src.imgs.length > 0 && /*#__PURE__*/_jsxDEV(Image, {\n        urls: src.imgs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), info && /*#__PURE__*/_jsxDEV(InfoBox, {\n      info: info,\n      setInfo: setInfo,\n      data: data,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n}\n\n_s3(App, \"cuI4Px7vtC8tvnqtfhYXExcJLss=\");\n\n_c6 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Legend\");\n$RefreshReg$(_c2, \"SelectedDisplay\");\n$RefreshReg$(_c3, \"Certainty\");\n$RefreshReg$(_c4, \"Importance\");\n$RefreshReg$(_c5, \"Connection\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js"],"names":["React","useState","Data","Graphic","Image","NewInstantForm","NewZoneForm","InfoBox","ExportDataForm","ToolsBar","Layers","Scrubber","generateLinks","Legend","backgroundColor","SelectedDisplay","props","target","source","name","id","start","end","Certainty","input","setInput","handleSubmit","e","preventDefault","newZones","zones","zone","find","n","opacity","parseFloat","setZones","newInstants","data","instant","intervalOpacity","setData","handleClose","setToggle","value","Importance","Zones","importance","intervalWidth","radius","Connection","console","log","layerX","connections","layerY","instant2","App","nullData","src","setSrc","history","setHistory","activeData","setActiveData","activeLayer","setActiveLayer","instants","scales","setScales","showLabel","setShowLabel","activeScale","setActiveScale","Object","keys","toggle","info","setInfo","inflectTarget","setInflectTarget","syntacticOrder","setSyntacticOrder","length","imgs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './stylesheets/index.scss';\nimport Data from \"./data.json\";\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewInstantForm from \"./components/NewInstantForm\";\nimport NewZoneForm from \"./components/NewZoneForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\";\n// import ImportDataForm from \"./components/ImportDataForm\";\nimport ToolsBar from \"./components/ToolsBar\";\nimport Layers from \"./components/Layers\";\nimport Scrubber from \"./components/Scrubber\"\nimport generateLinks from \"./components/generateLinks\";\n\n\n\nfunction Legend() {\n  return (\n    <div className=\"ui absolute dropdown rightPos\">\n      Legend\n      <ul>\n        <li><span style={{backgroundColor: 'black'}}>&#8195;</span> Hank</li>\n        <li><span style={{backgroundColor: 'red'}}>&#8195;</span> Peggy</li>\n        <li><span style={{backgroundColor: '#4DA6FF'}}>&#8195;</span> Bobby</li>\n      </ul>\n    </div>\n  )\n}\n\nfunction SelectedDisplay(props){\n  if (!props.target) { //no selection\n    return <p>Selected: None</p>;\n  } else if (props.target.source) { //link\n    return <p>Selected: {props.target.source.name} ({props.target.source.id}) – {props.target.target.name} ({props.target.target.id})</p>;\n  } else if (props.target.start) { //zone\n    return <p>Selected: {props.target.name} ({props.target.start} - {props.target.end})</p>;\n  } else { //instant\n    return <p>Selected: {props.target.name} ({props.target.id})</p>;\n  }\n};\n\nfunction Certainty(props) {\n  // console.log(props.target);\n\n  const [input, setInput] = useState();\n\n  //set opacity of target\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (props.target.start) { //zone\n      const newZones = [...props.zones];\n      const zone = newZones.find(n => n.id === props.target.id);\n      zone.opacity = parseFloat(input)*.5;\n      props.setZones(newZones);\n      return;\n    }\n\n    const newInstants = [...props.data];\n\n    if (props.target.source) { //link\n      const instant = newInstants.find(n => n.id === props.target.source.id);\n      instant.intervalOpacity = parseFloat(input);\n    } else { //instant\n      const instant = newInstants.find(n => n.id === props.target.id);\n      instant.intervalOpacity = instant.opacity ? instant.opacity : 1; //don't change interval opacity\n      instant.opacity = parseFloat(input);\n    }\n    props.setData(newInstants);\n  };\n\n  const handleClose = (e) => {\n    props.setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"ui absolute center\" onSubmit={handleSubmit}>\n      <button className=\"right\" onClick={handleClose}>x</button><br/>\n      <SelectedDisplay target={props.target}/>\n      <label>\n        Certainty\n        <input type=\"text\"\n          placeholder=\"0 (never) - 1 (certain)\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          required\n        />\n      </label><br/>\n      <input type=\"submit\" value=\"Submit\"/>\n    </form>\n  )\n}\n\nfunction Importance(props) { //TODO: intervals, negatives, \"steps\"\n\n  const [input, setInput] = useState();\n\n  //todo: make for interval also\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (props.target.start) { //zone\n      const newZones = [...props.Zones];\n      const zone = newZones.find(n => n.id === props.target.id);\n      zone.importance = parseFloat(input);\n      props.setZones(newZones);\n      return;\n    }\n\n    const newInstants = [...props.data];\n\n    if (props.target.source) { //link\n      const instant = newInstants.find(n => n.id === props.target.source.id);\n      instant.intervalWidth = instant.intervalWidth ? instant.intervalWidth*(1+input/2) : props.radius/3*(1+input/2); //if intervalWidth defined, multiply. otherwise, use default\n    } else { //instant\n      const instant = newInstants.find(n => n.id === props.target.id);\n      instant.radius = instant.radius ? instant.radius*(1+input/2) : props.radius*(1+input/2); //if radius defined, multiply. otherwise, use default radius\n    }\n    props.setData(newInstants);\n\n  };\n\n  const handleClose = (e) => {\n    props.setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"ui absolute center\" onSubmit={handleSubmit}>\n      <button className=\"right\" onClick={handleClose}>x</button><br/>\n      <SelectedDisplay target={props.target}/>\n      <label>\n        Importance\n        <input type=\"number\"\n          placeholder=\"ints relative to 0 (+ and -)\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          required\n        />\n      </label><br/>\n      <input type=\"submit\" value=\"Submit\"/>\n    </form>\n  )\n}\n\nfunction Connection(props) {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    /*\n      - error handling: check if target[0] and target[1] exists\n      - find instant w/ id of target[0] and:\n        - If target[1] is:\n          - instant, target[1].id\n          - interval, {\"x\": target.x-source.x, \"y\": mouse pointer, \"scale\":\"smalls\"}\n          - zone, {\"x\": 1622, \"y\": 12, \"scale\":\"smalls\"}\n    */\n\n    if (!props.target[0] || !props.target[0]) {\n      console.log(\"error\")\n      return;\n    }\n\n    const newInstants = [...props.data];\n    const instant = newInstants.find(n => n.id === props.target[0].id);\n    if (props.target[1].layerX) { //for interval and zone: is this a mouseEvent?\n      const e = props.target[1]\n      instant.connections = [{\"x\": e.layerX, \"y\": e.layerY}, 0]\n    } else {\n      const instant2 = newInstants.find(n => n.id === props.target[1].id);\n      instant.connections = [instant2.id, 0];\n      instant2.connections = [instant.id, 1];\n    }\n    //\n    // if (props.target.start) { //zone\n    //   const newzones = [...props.zones];\n    //   const zone = newzones.find(n => n.id === props.target.id);\n    //   zone.importance = parseFloat(input);\n    //   props.setZones(newZones);\n    //   return;\n    // }\n    //\n\n    //\n    // if (props.target.source) { //link\n    //   const instant = newInstants.find(n => n.id === props.target.source.id);\n    //   instant.intervalWidth = instant.intervalWidth ? instant.intervalWidth*(1+input/2) : props.radius/3*(1+input/2); //if intervalWidth defined, multiply. otherwise, use default\n    // } else { //instant\n    //   const instant = newInstants.find(n => n.id === props.target.id);\n    //   instant.radius = instant.radius ? instant.radius*(1+input/2) : props.radius*(1+input/2); //if radius defined, multiply. otherwise, use default radius\n    // }\n    props.setData(newInstants);\n\n\n  };\n\n  const handleClose = (e) => {\n    props.setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"ui absolute center\" onSubmit={handleSubmit}>\n      <button className=\"right\" onClick={handleClose}>x</button><br/>\n      <p>\n        Connect<br/>\n        <b>{props.target[0]?`${props.target[0].name}(${props.target[0].id})`: \"None\"}</b> {!props.target[2] && \"<\"}<br/>\n        with<br/>\n        <b>{props.target[1]?`${props.target[1].name}(${props.target[1].id})`: \"None\"}</b> {props.target[2]===1 && \"<\"}\n      </p>\n      <input type=\"submit\" value=\"Submit\"/>\n    </form>\n  )\n}\n\nfunction App() {\n  //blank ChronoJSON template\n  const nullData = {\n    \"imgs\": [],\n    \"instants\":\n    [\n      []\n    ],\n    \"zones\":\n    []\n  };\n\n  //user defined\n  const radius = 5;\n\n  //for the entire ChronoJSON\n  const [src, setSrc] = useState(Data);\n\n  //for ChronoJSON history\n  const [history, setHistory] = useState([])\n\n  //for toggling the active data as used by scrubber\n  const [activeData, setActiveData] = useState(0);\n  //for toggling the active layer\n  const [activeLayer, setActiveLayer] = useState();\n\n  //initialize datapoints\n  const [data, setData] = useState(src.instants[activeData]);\n  //links are initialized in Graphic.js\n  // const [links, setLinks] = useState(generateLinks(src.instants[activeData]))\n  //initialize zones\n  const [zones, setZones] = useState(src.zones);\n  //initialize scales\n  const [scales, setScales] = useState(src.scales);\n  //toggles datapoint IDs vs labels\n  const [showLabel, setShowLabel] = useState(true);\n\n  //for toggling the active scale\n  const [activeScale, setActiveScale] = useState(Object.keys(scales)[0])\n\n  //UI window toggles\n  const [toggle, setToggle] = useState();\n  //UI info boxes for points, intervals, etc.\n  const [info, setInfo] = useState();\n  //Inflection info\n  const [inflectTarget, setInflectTarget] = useState();\n  //Syntactic inflections order\n  const [syntacticOrder, setSyntacticOrder] = useState([null, null, null]); //[target1, target2, #]. # dictates order, switches b/w 0 and 1\n\n  // console.log(info);\n  /*\n    TODO:\n    - for piecewise timeline, make function that generates different graphics\n  */\n\n  return (\n    <>\n      <ToolsBar toggle={toggle} setToggle={setToggle} data={data} showLabel={showLabel} setShowLabel={setShowLabel}/>\n      {toggle===\"scrubber\" && <Scrubber activeData={activeData} setActiveData={setActiveData} src={src} setData={setData}/>}\n      {toggle===\"addPoint\" && <NewInstantForm data={data} setData={setData} setToggle={setToggle} scales={scales} activeScale={activeScale}/>}\n      {toggle===\"addZone\" && <NewZoneForm zones={zones} setZones={setZones} setToggle={setToggle} scales={scales} activeScale={activeScale}/>}\n      {toggle===\"save\" && <ExportDataForm src={src} data={data} activeData={activeData} setToggle={setToggle}/>}\n      {toggle===\"legend\" && <Legend/>}\n      {toggle===\"layers\" && <Layers activeLayer={activeLayer} setActiveLayer={setActiveLayer} data={data}/>}\n      {toggle===\"certainty\" &&\n        <Certainty\n          target={inflectTarget}\n          setToggle={setToggle}\n          data={data}\n          setData={setData}\n          zones={zones}\n          setZones={setZones}\n        />\n      }\n      {toggle===\"importance\" &&\n        <Importance\n          target={inflectTarget}\n          setToggle={setToggle}\n          data={data}\n          setData={setData}\n          zones={zones}\n          setZones={setZones}\n          radius={radius}\n        />\n      }\n      {toggle===\"connection\" &&\n        <Connection\n          target={syntacticOrder}\n          setToggle={setToggle}\n          data={data}\n          setData={setData}\n          zones={zones}\n          setZones={setZones}\n        />\n      }\n      <div id=\"main\" className=\"container fullHeight\">\n        {data.length ?\n          <Graphic\n            data={data}\n            setData={setData}\n            zones={zones}\n            setZones={setZones}\n            radius={radius}\n            info={info}\n            setInfo={setInfo}\n            setInflectTarget={setInflectTarget}\n            showLabel={showLabel}\n            activeLayer={activeLayer}\n            toggle={toggle}\n            scales={scales}\n            setScales={setScales}\n            syntacticOrder={syntacticOrder}\n            setSyntacticOrder={setSyntacticOrder}\n            activeScale={activeScale}\n          />\n          : <div className=\"flexCenter\">Upload data or <button onClick={() => setToggle(\"addPoint\")}>Add new instant</button></div>\n        }\n        {src.imgs.length>0 && <Image urls={src.imgs}/>}\n      </div>\n      {info && <InfoBox info={info} setInfo={setInfo} data={data} setData={setData}/>}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}