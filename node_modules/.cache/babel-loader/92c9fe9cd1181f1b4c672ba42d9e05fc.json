{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewIntervalForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewIntervalForm({\n  data,\n  setData,\n  setToggle,\n  scales,\n  activeScale\n}) {\n  _s();\n\n  const [xValue1, setXValue1] = useState(\"\");\n  const [yValue1, setYValue1] = useState(\"\");\n  const [xValue2, setXValue2] = useState(\"\");\n  const [yValue2, setYValue2] = useState(\"\");\n  const [select, setSelect] = useState(\"\");\n  const scalesList = Object.keys(scales).map((key, i) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: key,\n      children: key\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }); //optional parameters\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    /*\n      - error handling: check if target[0] and target[1] exists\n      - find instant w/ id of target[0] and:\n        - If target[1] is:\n          - instant, target[1].id\n          - interval, {\"x\": target.x-source.x, \"y\": mouse pointer, \"scale\":\"smalls\"}\n          - zone, {\"x\": 1622, \"y\": 12, \"scale\":\"smalls\"}\n    */\n\n    /*if (!props.target[0] || !props.target[0]) {\n      console.log(\"error\")\n      return;\n    }\n     const newInstants = [...props.data];\n    const instant = newInstants.find(n => n.id === props.target[0].id);\n    if (props.target[1].x) { //for interval and zone\n      const target = props.target[1]\n      instant.connections = [{\"x\": target.x, \"y\": target.y, \"scale\": target.scale}, 0]\n    } else { //for instants\n      const instant2 = newInstants.find(n => n.id === props.target[1].id);\n      instant.connections = [instant2.id, 0];\n      instant2.connections = [instant.id, 1];\n    }\n    //\n    // if (props.target.start) { //zone\n    //   const newzones = [...props.zones];\n    //   const zone = newzones.find(n => n.id === props.target.id);\n    //   zone.importance = parseFloat(input);\n    //   props.setZones(newZones);\n    //   return;\n    // }\n    //\n     //\n    // if (props.target.source) { //link\n    //   const instant = newInstants.find(n => n.id === props.target.source.id);\n    //   instant.intervalWidth = instant.intervalWidth ? instant.intervalWidth*(1+input/2) : props.radius/3*(1+input/2); //if intervalWidth defined, multiply. otherwise, use default\n    // } else { //instant\n    //   const instant = newInstants.find(n => n.id === props.target.id);\n    //   instant.radius = instant.radius ? instant.radius*(1+input/2) : props.radius*(1+input/2); //if radius defined, multiply. otherwise, use default radius\n    // }\n    props.setData(newInstants);*/\n  };\n\n  const handleClose = e => {\n    setToggle(null);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"right\",\n      onClick: handleClose,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Start:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Time\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"redText\",\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"numbers only\",\n          value: xValue1,\n          onChange: e => setXValue1(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"y Position\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"#s only (default 0)\",\n          value: yValue1,\n          onChange: e => setYValue1(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"End:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Time\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"redText\",\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"numbers only\",\n          value: xValue2,\n          onChange: e => setXValue2(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"y Position\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"#s only (default 0)\",\n          value: yValue2,\n          onChange: e => setYValue2(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Properties:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Scale\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"redText\",\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"scales\",\n          value: select,\n          onChange: e => setSelect(e.target.value),\n          children: scalesList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewIntervalForm, \"vTDdgwu4yX2DDxyfO8tFJUI8Vlg=\");\n\n_c = NewIntervalForm;\nexport default NewIntervalForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewIntervalForm\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewIntervalForm.js"],"names":["React","useState","NewIntervalForm","data","setData","setToggle","scales","activeScale","xValue1","setXValue1","yValue1","setYValue1","xValue2","setXValue2","yValue2","setYValue2","select","setSelect","scalesList","Object","keys","map","key","i","handleSubmit","e","preventDefault","handleClose","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nfunction NewIntervalForm({data, setData, setToggle, scales, activeScale}) {\n\n  const [xValue1, setXValue1] = useState(\"\");\n  const [yValue1, setYValue1] = useState(\"\");\n  const [xValue2, setXValue2] = useState(\"\");\n  const [yValue2, setYValue2] = useState(\"\");\n  const [select, setSelect] = useState(\"\");\n  const scalesList = Object.keys(scales).map((key, i) => {\n    return <option value={key} key={i}>{key}</option>\n  });\n  //optional parameters\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    /*\n      - error handling: check if target[0] and target[1] exists\n      - find instant w/ id of target[0] and:\n        - If target[1] is:\n          - instant, target[1].id\n          - interval, {\"x\": target.x-source.x, \"y\": mouse pointer, \"scale\":\"smalls\"}\n          - zone, {\"x\": 1622, \"y\": 12, \"scale\":\"smalls\"}\n    */\n\n    /*if (!props.target[0] || !props.target[0]) {\n      console.log(\"error\")\n      return;\n    }\n\n    const newInstants = [...props.data];\n    const instant = newInstants.find(n => n.id === props.target[0].id);\n    if (props.target[1].x) { //for interval and zone\n      const target = props.target[1]\n      instant.connections = [{\"x\": target.x, \"y\": target.y, \"scale\": target.scale}, 0]\n    } else { //for instants\n      const instant2 = newInstants.find(n => n.id === props.target[1].id);\n      instant.connections = [instant2.id, 0];\n      instant2.connections = [instant.id, 1];\n    }\n    //\n    // if (props.target.start) { //zone\n    //   const newzones = [...props.zones];\n    //   const zone = newzones.find(n => n.id === props.target.id);\n    //   zone.importance = parseFloat(input);\n    //   props.setZones(newZones);\n    //   return;\n    // }\n    //\n\n    //\n    // if (props.target.source) { //link\n    //   const instant = newInstants.find(n => n.id === props.target.source.id);\n    //   instant.intervalWidth = instant.intervalWidth ? instant.intervalWidth*(1+input/2) : props.radius/3*(1+input/2); //if intervalWidth defined, multiply. otherwise, use default\n    // } else { //instant\n    //   const instant = newInstants.find(n => n.id === props.target.id);\n    //   instant.radius = instant.radius ? instant.radius*(1+input/2) : props.radius*(1+input/2); //if radius defined, multiply. otherwise, use default radius\n    // }\n    props.setData(newInstants);*/\n\n\n  };\n\n  const handleClose = (e) => {\n    setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"ui absolute center\" onSubmit={handleSubmit}>\n      <button className=\"right\" onClick={handleClose}>x</button><br/>\n      <p>\n        <b>Start:</b><br/>\n        <label>\n          Time<span className=\"redText\">* </span>\n          <input\n            type=\"number\"\n            placeholder=\"numbers only\"\n            value={xValue1}\n            onChange={(e) => setXValue1(e.target.value)}\n            required\n          />\n        </label><br/>\n        <label>\n          y Position\n          <input\n            type=\"number\"\n            placeholder=\"#s only (default 0)\"\n            value={yValue1}\n            onChange={(e) => setYValue1(e.target.value)}\n          />\n        </label><br/>\n        <b>End:</b><br/>\n        <label>\n          Time<span className=\"redText\">* </span>\n          <input\n            type=\"number\"\n            placeholder=\"numbers only\"\n            value={xValue2}\n            onChange={(e) => setXValue2(e.target.value)}\n            required\n          />\n        </label><br/>\n        <label>\n          y Position\n          <input\n            type=\"number\"\n            placeholder=\"#s only (default 0)\"\n            value={yValue2}\n            onChange={(e) => setYValue2(e.target.value)}\n          />\n        </label><br/>\n        <b>Properties:</b><br/>\n        <label>\n          Scale<span className=\"redText\">* </span>\n          <select name=\"scales\" value={select} onChange={(e) => setSelect(e.target.value)}>\n            {scalesList}\n          </select>\n        </label><br/>\n      </p>\n      <input type=\"submit\" value=\"Submit\"/>\n    </form>\n  )\n}\n\nexport default NewIntervalForm;\n"]},"metadata":{},"sourceType":"module"}