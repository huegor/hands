{"ast":null,"code":"/*\n   generates intervals between all intervaled instants and\n   returns a interval object with interval properties.\n*/\nfunction generateIntervals(data) {\n  console.log(data);\n  /*\n    expand to standalone paths? bezier curve: https://svg-path-visualizer.netlify.app/bezier-curve/\n    - start: can specify point or enter coordinate values directly (run thru xScale)\n    - control: ???\n    - end: same as start\n    output: M startX,startY C controlX1,controlY1 controlX2,controlY2 endX, endY\n  */\n\n  const intervals = []; //array of all instant intervals\n\n  data.forEach((item, i) => {\n    if (!item.target) {\n      //if the instant does not have a target, skip generating interval\n      return;\n    } else {\n      item.target.forEach(n => {\n        const instant = data.find(x => x.id === n);\n\n        if (data.indexOf(instant) > -1) {\n          //does instant exist?\n          intervals.push({\n            source: item,\n            target: instant,\n            color: item.intervalColor ? item.intervalColor : item.color ? item.color : null,\n            //if not specified, use point color. otherwise, null\n            width: item.intervalWidth,\n            opacity: item.intervalOpacity ? item.intervalOpacity : item.opacity ? item.opacity : null,\n            dashed: item.intervalDashed\n          });\n        }\n      });\n    }\n  });\n  return intervals;\n}\n\n;\nexport default generateIntervals;","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/generateIntervals.js"],"names":["generateIntervals","data","console","log","intervals","forEach","item","i","target","n","instant","find","x","id","indexOf","push","source","color","intervalColor","width","intervalWidth","opacity","intervalOpacity","dashed","intervalDashed"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEE,QAAMG,SAAS,GAAG,EAAlB,CAV+B,CAUT;;AAEtBH,EAAAA,IAAI,CAACI,OAAL,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AACxB,QAAI,CAACD,IAAI,CAACE,MAAV,EAAkB;AAChB;AACA;AACD,KAHD,MAGO;AACLF,MAAAA,IAAI,CAACE,MAAL,CAAYH,OAAZ,CAAqBI,CAAD,IAAO;AACzB,cAAMC,OAAO,GAAGT,IAAI,CAACU,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASJ,CAAxB,CAAhB;;AACA,YAAIR,IAAI,CAACa,OAAL,CAAaJ,OAAb,IAAwB,CAAC,CAA7B,EAAgC;AAAE;AAChCN,UAAAA,SAAS,CAACW,IAAV,CAAe;AACbC,YAAAA,MAAM,EAACV,IADM;AAEbE,YAAAA,MAAM,EAACE,OAFM;AAGbO,YAAAA,KAAK,EAACX,IAAI,CAACY,aAAL,GAAqBZ,IAAI,CAACY,aAA1B,GAA0CZ,IAAI,CAACW,KAAL,GAAaX,IAAI,CAACW,KAAlB,GAA0B,IAH7D;AAGmE;AAChFE,YAAAA,KAAK,EAACb,IAAI,CAACc,aAJE;AAKbC,YAAAA,OAAO,EAACf,IAAI,CAACgB,eAAL,GAAuBhB,IAAI,CAACgB,eAA5B,GAA8ChB,IAAI,CAACe,OAAL,GAAef,IAAI,CAACe,OAApB,GAA8B,IALvE;AAMbE,YAAAA,MAAM,EAACjB,IAAI,CAACkB;AANC,WAAf;AAQD;AACF,OAZD;AAaD;AACF,GAnBD;AAoBA,SAAOpB,SAAP;AACD;;AAAA;AAED,eAAeJ,iBAAf","sourcesContent":["/*\n   generates intervals between all intervaled instants and\n   returns a interval object with interval properties.\n*/\n\nfunction generateIntervals(data) {\nconsole.log(data)\n  /*\n    expand to standalone paths? bezier curve: https://svg-path-visualizer.netlify.app/bezier-curve/\n    - start: can specify point or enter coordinate values directly (run thru xScale)\n    - control: ???\n    - end: same as start\n    output: M startX,startY C controlX1,controlY1 controlX2,controlY2 endX, endY\n  */\n\n  const intervals = []; //array of all instant intervals\n\n  data.forEach((item, i) => {\n    if (!item.target) {\n      //if the instant does not have a target, skip generating interval\n      return\n    } else {\n      item.target.forEach((n) => {\n        const instant = data.find(x => x.id === n);\n        if (data.indexOf(instant) > -1) { //does instant exist?\n          intervals.push({\n            source:item,\n            target:instant,\n            color:item.intervalColor ? item.intervalColor : item.color ? item.color : null, //if not specified, use point color. otherwise, null\n            width:item.intervalWidth,\n            opacity:item.intervalOpacity ? item.intervalOpacity : item.opacity ? item.opacity : null,\n            dashed:item.intervalDashed\n          });\n        }\n      });\n    }\n  });\n  return intervals;\n};\n\nexport default generateIntervals;\n"]},"metadata":{},"sourceType":"module"}