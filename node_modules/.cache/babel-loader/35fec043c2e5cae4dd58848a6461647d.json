{"ast":null,"code":"/*\n   generates links between all linked nodes and\n   returns a link object with link properties.\n*/\nfunction generateLinks(data) {\n  const links = []; //array of all node links\n  /// IMPORTANT: all ending nodes must be marked w target:null ///\n\n  data.forEach((src, i) => {\n    if (src.length) {\n      src.forEach(item => {\n        if (!item.target) {\n          return;\n        } else {\n          console.log(item.target);\n        } // if (item.target) { //check if detached\n        //   // if (typeof(item.target) !== \"number\") { //for nodes w multiple targets, create link for each target\n        //     item.target.forEach((n) => {\n        //       console.log(src.find(x => x.id === n))\n        //       // links.push({source:item, target:src.find(x => x.id === n), color:item.lineColor ? item.lineColor : item.color ? item.color : null, width:item.lineWidth});\n        //     });\n        //   // } else {\n        //   //   //if lineColor not defined, line takes the color of the previous point\n        //   //   links.push({source:item, target:src.find(n => n.id === item.target), color:item.lineColor ? item.lineColor : item.color ? item.color : null, width:item.lineWidth})\n        //   // };\n        // }\n\n      });\n    }\n  });\n  return links;\n}\n\n;\nexport default generateLinks;","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/generateLinks.js"],"names":["generateLinks","data","links","forEach","src","i","length","item","target","console","log"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,QAAMC,KAAK,GAAG,EAAd,CAD2B,CACT;AAElB;;AAEAD,EAAAA,IAAI,CAACE,OAAL,CAAa,CAACC,GAAD,EAAMC,CAAN,KAAY;AACvB,QAAID,GAAG,CAACE,MAAR,EAAgB;AACdF,MAAAA,GAAG,CAACD,OAAJ,CAAaI,IAAD,IAAU;AACpB,YAAI,CAACA,IAAI,CAACC,MAAV,EAAkB;AAChB;AACD,SAFD,MAEO;AACLC,UAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,MAAjB;AACD,SALmB,CAMpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,OAjBD;AAkBD;AACF,GArBD;AAsBA,SAAON,KAAP;AACD;;AAAA;AAED,eAAeF,aAAf","sourcesContent":["/*\n   generates links between all linked nodes and\n   returns a link object with link properties.\n*/\n\nfunction generateLinks(data) {\n  const links = []; //array of all node links\n\n  /// IMPORTANT: all ending nodes must be marked w target:null ///\n\n  data.forEach((src, i) => {\n    if (src.length) {\n      src.forEach((item) => {\n        if (!item.target) {\n          return\n        } else {\n          console.log(item.target);\n        }\n        // if (item.target) { //check if detached\n        //   // if (typeof(item.target) !== \"number\") { //for nodes w multiple targets, create link for each target\n        //     item.target.forEach((n) => {\n        //       console.log(src.find(x => x.id === n))\n        //       // links.push({source:item, target:src.find(x => x.id === n), color:item.lineColor ? item.lineColor : item.color ? item.color : null, width:item.lineWidth});\n        //     });\n        //   // } else {\n        //   //   //if lineColor not defined, line takes the color of the previous point\n        //   //   links.push({source:item, target:src.find(n => n.id === item.target), color:item.lineColor ? item.lineColor : item.color ? item.color : null, width:item.lineWidth})\n        //   // };\n        // }\n      })\n    }\n  });\n  return links;\n};\n\nexport default generateLinks;\n"]},"metadata":{},"sourceType":"module"}