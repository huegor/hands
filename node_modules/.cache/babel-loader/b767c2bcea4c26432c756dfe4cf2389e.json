{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Scrubber.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { select, drag, axisBottom, scalePoint } from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Scrubber({\n  activeData,\n  setActiveData,\n  src,\n  setData\n}) {\n  _s();\n\n  const handleClick = e => {\n    if (e.target.id === \"foward\") {\n      setActiveData(activeData += 1);\n    } else {\n      setActiveData(activeData -= 1);\n    } // console.log(src.nodes.length-1);\n    // console.log(activeData);\n\n\n    setData(src.nodes[activeData]);\n  };\n\n  console.log(src.nodes.map(n => src.nodes.indexOf(n))); //initialize reference object to pass to svg in React Dom\n\n  const svgRef = useRef();\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const scale = scalePoint().domain(src.nodes.map(n => src.nodes.indexOf(n)));\n    const axis = axisBottom(scale);\n    svg.select(\".scrubber-axis\").call(axis);\n  }, []); // <div className=\"ui absolute center\">\n  //   <button id=\"back\" onClick={handleClick} disabled={activeData===0}>&lt;</button>\n  //   {activeData}\n  //   <button id=\"foward\" onClick={handleClick} disabled={activeData===src.nodes.length-1}>&gt;</button>\n  // </div>\n\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    children: /*#__PURE__*/_jsxDEV(\"g\", {\n      className: \"scrubber-axis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Scrubber, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n\n_c = Scrubber;\nexport default Scrubber;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scrubber\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Scrubber.js"],"names":["React","useState","useEffect","useRef","select","drag","axisBottom","scalePoint","Scrubber","activeData","setActiveData","src","setData","handleClick","e","target","id","nodes","console","log","map","n","indexOf","svgRef","svg","current","scale","domain","axis","call"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,UAAvB,EAAmCC,UAAnC,QAAqD,IAArD;;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA,UAAD;AAAaC,EAAAA,aAAb;AAA4BC,EAAAA,GAA5B;AAAiCC,EAAAA;AAAjC,CAAlB,EAA6D;AAAA;;AAE3D,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIA,CAAC,CAACC,MAAF,CAASC,EAAT,KAAgB,QAApB,EAA8B;AAC5BN,MAAAA,aAAa,CAACD,UAAU,IAAI,CAAf,CAAb;AACD,KAFD,MAEO;AACLC,MAAAA,aAAa,CAACD,UAAU,IAAI,CAAf,CAAb;AACD,KALwB,CAMzB;AACA;;;AACAG,IAAAA,OAAO,CAACD,GAAG,CAACM,KAAJ,CAAUR,UAAV,CAAD,CAAP;AACD,GATD;;AAUAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACM,KAAJ,CAAUG,GAAV,CAAeC,CAAD,IAAOV,GAAG,CAACM,KAAJ,CAAUK,OAAV,CAAkBD,CAAlB,CAArB,CAAZ,EAZ2D,CAc3D;;AACA,QAAME,MAAM,GAAGpB,MAAM,EAArB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,GAAG,GAAGpB,MAAM,CAACmB,MAAM,CAACE,OAAR,CAAlB;AAEA,UAAMC,KAAK,GAAGnB,UAAU,GACrBoB,MADW,CACJhB,GAAG,CAACM,KAAJ,CAAUG,GAAV,CAAeC,CAAD,IAAOV,GAAG,CAACM,KAAJ,CAAUK,OAAV,CAAkBD,CAAlB,CAArB,CADI,CAAd;AAGA,UAAMO,IAAI,GAAGtB,UAAU,CAACoB,KAAD,CAAvB;AAEAF,IAAAA,GAAG,CACApB,MADH,CACU,gBADV,EAEGyB,IAFH,CAEQD,IAFR;AAKD,GAbQ,EAaN,EAbM,CAAT,CAjB2D,CAgC3D;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,GAAG,EAAEL,MAAV;AAAA,2BACE;AAAG,MAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA3CQf,Q;;KAAAA,Q;AA6CT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { select, drag, axisBottom, scalePoint } from \"d3\";\n\nfunction Scrubber({activeData, setActiveData, src, setData}) {\n\n  const handleClick = (e) => {\n    if (e.target.id === \"foward\") {\n      setActiveData(activeData += 1);\n    } else {\n      setActiveData(activeData -= 1);\n    }\n    // console.log(src.nodes.length-1);\n    // console.log(activeData);\n    setData(src.nodes[activeData]);\n  }\n  console.log(src.nodes.map((n) => src.nodes.indexOf(n)));\n\n  //initialize reference object to pass to svg in React Dom\n  const svgRef = useRef();\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    \n    const scale = scalePoint()\n      .domain(src.nodes.map((n) => src.nodes.indexOf(n)));\n\n    const axis = axisBottom(scale);\n\n    svg\n      .select(\".scrubber-axis\")\n      .call(axis);\n\n\n  }, []);\n\n  // <div className=\"ui absolute center\">\n  //   <button id=\"back\" onClick={handleClick} disabled={activeData===0}>&lt;</button>\n  //   {activeData}\n  //   <button id=\"foward\" onClick={handleClick} disabled={activeData===src.nodes.length-1}>&gt;</button>\n  // </div>\n\n  return (\n    <svg ref={svgRef}>\n      <g className=\"scrubber-axis\" />\n    </svg>\n  );\n}\n\nexport default Scrubber;\n"]},"metadata":{},"sourceType":"module"}