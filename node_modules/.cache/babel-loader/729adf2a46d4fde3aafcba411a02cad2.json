{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Graphic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { select, scaleLinear, scaleOrdinal, axisBottom, linkHorizontal, format, drag, zoom, min, max, symbol, symbols } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport generateLinks from \"./generateLinks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Graphic({\n  data,\n  setData,\n  activeLayer,\n  intervals,\n  setIntervals,\n  radius,\n  info,\n  setInfo,\n  showLabel,\n  toggle,\n  scales,\n  setScales\n}) {\n  _s();\n\n  //all data is passed down from and synced to App.js\n  const activeData = activeLayer ? data.filter(d => d.layer === activeLayer) : data; //is logical operators active?\n\n  const logic = isNaN(data[0].x); //Todo\n  //initialize reference object to pass to svg in React Dom\n\n  const svgRef = useRef(); //svg wrapped in div bc otherwise resize observer callback won't work\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState(); //initialize links between nodes\n\n  const links = generateLinks(activeData); //all d3 shennanigans goes in this hook. called initially and on every data change\n\n  useEffect(() => {\n    const svg = select(svgRef.current); //\"svg\" is the current version of svgRef data\n    //prevents crashing when useResizeObserver returns null before svg is rendered\n\n    if (!dimensions) return; //removes svgs added using append()\n\n    svg.selectAll(\".remove\").remove(); //---scales---//\n    //if time matches logical operator keyword, translate into index values, then map\n\n    const logicScale = scaleOrdinal([\"before\", \"now\", \"after\"], [-1, 0, 1]).unknown(0);\n    const breakpoint = 5;\n    const xMin = min(data.map(({\n      x\n    }) => logic ? logicScale(x) : x));\n    const xMax = max(data.map(({\n      x\n    }) => logic ? logicScale(x) : x));\n    const yMin = min(data.map(({\n      y\n    }) => y));\n    const yMax = max(data.map(({\n      y\n    }) => y));\n    const rangeX = xMax - xMin; //0 is minX, 1 is maxX (reference findMinMax)\n\n    const rangeY = yMax - yMin; //TODO: scaleTime()\n    //for multiple scales, generate a new scale for each x/y min - x/y max\n\n    /*\n    - Allow users to specify scale. x&y min max and units\n    - for each scale, generateScale()\n     */\n\n    function generateScales(currentScale) {\n      const x = scaleLinear().domain([currentScale.min, currentScale.max]) //scaleLinear takes domain (data values) & maps onto range (screen pixel values)\n      .range([0, dimensions.width]);\n      const y = scaleLinear() //if difference in y vaules greater than 5, resize to min and max\n      .domain(rangeY > breakpoint ? [yMin, yMax] : [yMin - breakpoint, yMax + breakpoint]).range([0, dimensions.height]);\n      const xInverse = scaleLinear().domain([-dimensions.width, dimensions.width]).range([-(currentScale.max - currentScale.min), currentScale.max - currentScale.min]); //maxRangeX-minRangeX gives section of x values displayed onscreen\n\n      const yInverse = scaleLinear().domain([-dimensions.height, dimensions.height]).range(rangeY > breakpoint ? [-rangeY, rangeY] : [-breakpoint * 5, breakpoint * 5]);\n      return {\n        x,\n        y,\n        xInverse,\n        yInverse\n      };\n    } //scales values to screen pixels\n\n\n    const xScales = () => {\n      const tempXScales = [];\n      Object.keys(scales).map(scale => {\n        //for every scale in scales data, generate an xScale\n        const thisScale = scales[scale];\n        tempXScales.push({\n          scale: generateScales(thisScale).x,\n          yPos: thisScale.yPos,\n          units: thisScale.units\n        });\n      });\n      return tempXScales;\n    };\n    /*\n      xScales(generateScales(scaleLinear(scale)))\n    */\n    //if there is a zoom transform, override each xScales.scale with adjusted scale\n\n\n    if (currentZoomState) {\n      xScales().forEach(thisScale => {\n        const newXScale = currentZoomState.rescaleX(thisScale.scale); //zoom state comes w methods for transformations\n\n        thisScale.scale.domain(newXScale.domain());\n        console.log(thisScale.scale.domain()); // console.log(newXScale.domain())\n        // Object.assign(xScales[thisScale])\n        // thisScale.scale.xInverse.range([\n        //   -(newXScale.domain()[1]-newXScale.domain()[0]),\n        //   (newXScale.domain()[1]-newXScale.domain()[0])\n        // ]);\n      });\n      console.log(thisScale.scale.domain());\n    }\n\n    ; // const xScale = scaleLinear()\n    //   .domain([xMin, xMax]) //scaleLinear takes domain (data values) & maps onto range (screen pixel values)\n    //   .range([0, dimensions.width]);\n\n    const yScale = scaleLinear() //if difference in y vaules greater than 5, resize to min and max\n    .domain(rangeY > breakpoint ? [yMin, yMax] : [yMin - breakpoint, yMax + breakpoint]).range([0, dimensions.height]); //inverse scales for drag behavior\n    // const xScaleInverse = scaleLinear()\n    //   .domain([-dimensions.width, dimensions.width])\n    //   .range([-rangeX, rangeX]); //maxRangeX-minRangeX gives section of x values displayed onscreen\n\n    const yScaleInverse = scaleLinear().domain([-dimensions.height, dimensions.height]).range(rangeY > breakpoint ? [-rangeY, rangeY] : [-breakpoint * 5, breakpoint * 5]); //---draw intervals---//\n\n    if (intervals.length) {\n      svg.selectAll(\".intervals\").data(intervals).join(\"rect\").attr(\"class\", \"intervals\").attr(\"x\", n => generateScales(scales[n.scale]).x(n.start)) // .attr(\"y\", n => n.yStart ? yScale(n.yStart) : yScale(minMax[2]))\n      .attr(\"y\", n => n.yStart ? yScale(n.yStart) : 0) //todo\n      .attr(\"width\", n => generateScales(scales[n.scale]).x(n.end) - generateScales(scales[n.scale]).x(n.start)).attr(\"height\", n => {\n        if (n.yStart & n.yEnd) {\n          return yScale(n.yEnd) - yScale(n.yStart);\n        } else if (n.yStart) {\n          return yScale(yMax + 10) - yScale(n.yStart);\n        } else {\n          return yScale(yMax + 10); //todo\n          // return (yScale(minMax[3])-yScale(minMax[2]))\n        }\n      }).attr(\"opacity\", d => d.opacity ? d.opacity : 0.5).attr(\"fill\", d => d.color ? d.color : \"#999\").on(\"click\", (e, target) => {\n        //displays line properties when clicked\n        setInfo({\n          position: [e.x, e.y],\n          target: target,\n          type: \"interval\"\n        }); //todo: set info to null when clicking again\n\n        e.stopPropagation();\n      });\n    } //---draw bottom axis---//\n\n\n    xScales().forEach(thisScale => {\n      const xAxis = axisBottom(thisScale.scale).tickFormat(format(''));\n      svg.append(\"g\") //todo\n      .attr(\"class\", \"remove\").style(\"transform\", `translateY(${dimensions.height * thisScale.yPos}px)`).call(xAxis).raise().call(g => g.select(\".domain\") //removes solid black axis bar\n      .remove()).call(g => g.selectAll(\".tick line\") //styles individual ticks\n      .attr(\"stroke-opacity\", 0.5)).call(g => g.selectAll(\".tick text\").attr(\"y\", 10) //todo?\n      .attr(\"opacity\", 0.5));\n      svg.append(\"text\").text(thisScale.units).attr(\"class\", \"axisLabel smallTxt remove\").attr(\"x\", dimensions.width / 2).attr(\"y\", dimensions.height * (thisScale.yPos + .07)).attr(\"text-anchor\", \"middle\").attr(\"opacity\", 0.5);\n    }); // const xAxis = axisBottom(generateScales(scales.smalls).x)\n    //   // .tickSize(-dimensions.height) //tick extends to entire height of svg\n    //   .tickValues(logic ? [-1, 0, 1] : null)\n    //   .tickFormat(logic ? x => scaleOrdinal([-1, 0, 1], [\"before\", \"now\", \"after\"])(x) : format('')); //gets rid of , for 1000s groupings\n    // svg\n    //   .select(\".x-axis\") //selects and replaces .x-axis\n    //   .style(\"transform\", `translateY(${dimensions.height}px)`)\n    //   .call(xAxis)\n    //   .raise()\n    // .call(g => g.select(\".domain\") //removes solid black axis bar\n    //   .remove())\n    // .call(g => g.selectAll(\".tick line\") //styles individual ticks\n    //   .attr(\"stroke-opacity\", 0.5))\n    //   // .attr(\"stroke-dasharray\", \"2,2\"))\n    // .call(g => g.selectAll(\".tick text\")\n    //   .attr(\"y\", 10) //todo?\n    //   .attr(\"opacity\", 0.5));\n    //   // .attr(\"font-size\", fontSize*.8)); //replace class \"x-axis\" w xAxis\n    //\n    //--drag behavior--//\n\n    const dragged = drag() // .on(\"start\", e => {\n    //   select(this).attr(\"stroke\", \"black\");\n    // })\n    .on(\"drag\", e => {\n      //todo (round new position to .01)\n      const dx = generateScales(scales[e.subject.scale]).xInverse(e.dx);\n      const dy = Math.round(yScaleInverse(e.dy) * 100) / 100;\n      const newNodes = [...data]; //always make a copy when updating array\n      //find array element in data with matching ID and set new x y coordinates\n\n      newNodes.find(n => n.id === e.subject.id).x += dx;\n      newNodes.find(n => n.id === e.subject.id).y += dy;\n      setData(newNodes);\n    }); //---draw links---//\n\n    const linker = linkHorizontal().source(link => link.source).target(link => link.target).x(n => generateScales(scales[n.scale]).x(logic ? logicScale(n.x) : n.x)).y(n => yScale(n.y));\n    svg.selectAll(\".link\").data(links).join(\"path\").raise().attr(\"class\", \"link pointer\").attr(\"d\", linker).attr(\"fill\", \"none\").attr(\"stroke\", n => n.color ? n.color : \"black\").attr(\"stroke-width\", n => n.width ? n.width : radius / 3).attr(\"stroke-opacity\", n => n.opacity ? n.opacity : 1).attr(\"stroke-dasharray\", n => n.dashed ? n.dashed : null).on(\"click\", (e, target) => {\n      setInfo({\n        position: [e.x, e.y],\n        target: target,\n        type: \"link\"\n      }); //displays line properties when clicked\n\n      e.stopPropagation();\n    }); //---draw points---//\n\n    svg.selectAll(\".node\").data(activeData.filter(d => d.inflectionSemantic !== \"cancelled\")).join(\"circle\").raise().attr(\"class\", \"node pointer\").attr(\"r\", n => n.radius ? n.radius : radius) //todo for accessibility\n    .attr(\"fill\", d => d.color ? d.color : \"black\") //if it has a color other than black, use that\n    .attr(\"opacity\", d => d.opacity ? d.opacity : 1).attr(\"cx\", d => generateScales(scales[d.scale]).x(logic ? logicScale(d.x) : d.x)).attr(\"cy\", d => yScale(d.y)).call(dragged).on(\"click\", (e, target) => {\n      if (toggle === \"cancelled\") {\n        const newNodes = [...data];\n        const node = newNodes.find(n => n.id === target.id);\n        node.inflectionSemantic = \"cancelled\";\n        setData(newNodes);\n      } else {\n        setInfo({\n          position: [e.x, e.y],\n          target: target\n        }); //displays node properties when clicked\n      }\n\n      e.stopPropagation(); //stops deselect when bg is clicked\n    }); //---initialize custom symbols---//\n\n    const cancelledSymbol = {\n      draw: (context, size) => {\n        let s = Math.sqrt(size) / 2;\n        context.moveTo(s, 0);\n        context.lineTo(s * 2, s);\n        context.lineTo(s, s * 2);\n        context.lineTo(0, s);\n        context.lineTo(-s, s * 2);\n        context.lineTo(-s * 2, s);\n        context.lineTo(-s, 0);\n        context.lineTo(-s * 2, -s);\n        context.lineTo(-s, -s * 2);\n        context.lineTo(0, -s);\n        context.lineTo(s, -s * 2);\n        context.lineTo(s * 2, -s);\n        context.closePath();\n      }\n    }; //---draw symbols---//\n\n    svg.selectAll(\".cancelled\").data(activeData.filter(d => d.inflectionSemantic === \"cancelled\")).join(\"path\").raise().attr(\"class\", \"cancelled pointer\").attr(\"d\", symbol(cancelledSymbol, radius * radius * 5)).attr(\"transform\", n => `translate(${generateScales(scales[n.scale]).x(n.x)}, ${yScale(n.y)})`).on(\"click\", (e, target) => {\n      if (toggle === \"cancelled\") {\n        const newNodes = [...data];\n        const node = newNodes.find(n => n.id === target.id);\n        delete node.inflectionSemantic;\n        setData(newNodes);\n      } else {\n        setInfo({\n          position: [e.x, e.y],\n          target: target\n        }); //displays node properties when clicked\n      }\n\n      e.stopPropagation();\n    }); // .attr(\"transform\", \"rotate(90)\");\n    //---draw labels---//\n\n    svg.selectAll(\".label\").data(activeData).join(\"text\").raise().attr(\"class\", \"label\").text(node => showLabel ? node.name : node.id).attr(\"x\", node => generateScales(scales[node.scale]).x(logic ? logicScale(node.x) : node.x)).attr(\"y\", node => yScale(node.y + (rangeY > breakpoint ? rangeY * .06 : breakpoint / 5))) //vertical offset. see scales\n    .attr(\"text-anchor\", \"middle\"); // .attr(\"font-size\", fontSize);\n    //---zoom---//\n\n    const zoomBehavior = zoom().scaleExtent([0.25, 5]) //can zoom 2x smaller and 5x bigger\n    .translateExtent([[-100, 0], [dimensions.width + 100, dimensions.height]]) //limits how far graph can pan\n    .on(\"zoom\", e => {\n      const zoomState = e.transform; //returns zoom transformations as an object\n\n      setCurrentZoomState(zoomState);\n    });\n    svg.on(\"click\", () => setInfo(null));\n    svg.call(zoomBehavior);\n  }, [data, setData, intervals, scales, activeLayer, activeData, dimensions, links, logic, currentZoomState, setInfo, radius, showLabel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapperRef,\n    className: \"svgWrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"graphic\",\n      ref: svgRef,\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"cancelled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Graphic, \"/KiWkGO4xuCDaFbcDOaAf23vnZg=\", false, function () {\n  return [useResizeObserver];\n});\n\n_c = Graphic;\n;\nexport default Graphic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graphic\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Graphic.js"],"names":["React","useState","useEffect","useRef","select","scaleLinear","scaleOrdinal","axisBottom","linkHorizontal","format","drag","zoom","min","max","symbol","symbols","useResizeObserver","generateLinks","Graphic","data","setData","activeLayer","intervals","setIntervals","radius","info","setInfo","showLabel","toggle","scales","setScales","activeData","filter","d","layer","logic","isNaN","x","svgRef","wrapperRef","dimensions","currentZoomState","setCurrentZoomState","links","svg","current","selectAll","remove","logicScale","unknown","breakpoint","xMin","map","xMax","yMin","y","yMax","rangeX","rangeY","generateScales","currentScale","domain","range","width","height","xInverse","yInverse","xScales","tempXScales","Object","keys","scale","thisScale","push","yPos","units","forEach","newXScale","rescaleX","console","log","yScale","yScaleInverse","length","join","attr","n","start","yStart","end","yEnd","opacity","color","on","e","target","position","type","stopPropagation","xAxis","tickFormat","append","style","call","raise","g","text","dragged","dx","subject","dy","Math","round","newNodes","find","id","linker","source","link","dashed","inflectionSemantic","node","cancelledSymbol","draw","context","size","s","sqrt","moveTo","lineTo","closePath","name","zoomBehavior","scaleExtent","translateExtent","zoomState","transform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { select, scaleLinear, scaleOrdinal, axisBottom, linkHorizontal, format, drag, zoom, min, max, symbol, symbols } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport generateLinks from \"./generateLinks\";\n\nfunction Graphic({data, setData, activeLayer, intervals, setIntervals, radius, info, setInfo, showLabel, toggle, scales, setScales}) {\n\n  //all data is passed down from and synced to App.js\n  const activeData = activeLayer ? data.filter(d => d.layer === activeLayer) : data;\n\n  //is logical operators active?\n  const logic = isNaN(data[0].x); //Todo\n\n  //initialize reference object to pass to svg in React Dom\n  const svgRef = useRef();\n  //svg wrapped in div bc otherwise resize observer callback won't work\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState();\n\n  //initialize links between nodes\n  const links = generateLinks(activeData);\n\n  //all d3 shennanigans goes in this hook. called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current); //\"svg\" is the current version of svgRef data\n    //prevents crashing when useResizeObserver returns null before svg is rendered\n    if (!dimensions) return;\n    //removes svgs added using append()\n    svg\n      .selectAll(\".remove\")\n      .remove();\n\n    //---scales---//\n\n    //if time matches logical operator keyword, translate into index values, then map\n    const logicScale = scaleOrdinal([\"before\", \"now\", \"after\"], [-1, 0, 1]).unknown(0);\n\n    const breakpoint = 5;\n\n\n    const xMin = min(data.map(({x}) => logic ? logicScale(x) : x));\n    const xMax = max(data.map(({x}) => logic ? logicScale(x) : x));\n    const yMin = min(data.map(({y}) => y));\n    const yMax = max(data.map(({y}) => y));\n    const rangeX = xMax-xMin; //0 is minX, 1 is maxX (reference findMinMax)\n    const rangeY = yMax-yMin;\n\n\n    //TODO: scaleTime()\n\n    //for multiple scales, generate a new scale for each x/y min - x/y max\n    /*\n    - Allow users to specify scale. x&y min max and units\n    - for each scale, generateScale()\n\n    */\n\n    function generateScales(currentScale) {\n\n      const x = scaleLinear()\n        .domain([currentScale.min, currentScale.max]) //scaleLinear takes domain (data values) & maps onto range (screen pixel values)\n        .range([0, dimensions.width])\n      const y = scaleLinear()\n        //if difference in y vaules greater than 5, resize to min and max\n        .domain((rangeY>breakpoint) ? [yMin, yMax] : [yMin-breakpoint, yMax+breakpoint])\n        .range([0, dimensions.height])\n      const xInverse = scaleLinear()\n        .domain([-dimensions.width, dimensions.width])\n        .range([-(currentScale.max-currentScale.min), (currentScale.max-currentScale.min)]) //maxRangeX-minRangeX gives section of x values displayed onscreen\n      const yInverse = scaleLinear()\n        .domain([-dimensions.height, dimensions.height])\n        .range((rangeY>breakpoint) ? [-rangeY, rangeY] : [-breakpoint*5, breakpoint*5])\n\n\n      return {\n        x, y, xInverse, yInverse\n      };\n    }\n\n    //scales values to screen pixels\n    const xScales = () => {\n      const tempXScales = []\n      Object.keys(scales).map(scale => { //for every scale in scales data, generate an xScale\n        const thisScale = scales[scale];\n        tempXScales.push({\n          scale: generateScales(thisScale).x,\n          yPos: thisScale.yPos,\n          units: thisScale.units\n        })\n      })\n      return tempXScales\n    };\n    /*\n      xScales(generateScales(scaleLinear(scale)))\n    */\n    //if there is a zoom transform, override each xScales.scale with adjusted scale\n    if (currentZoomState) {\n      xScales().forEach(thisScale => {\n        const newXScale = currentZoomState.rescaleX(thisScale.scale); //zoom state comes w methods for transformations\n        thisScale.scale.domain(newXScale.domain());\n        console.log(thisScale.scale.domain())\n        // console.log(newXScale.domain())\n\n        // Object.assign(xScales[thisScale])\n        // thisScale.scale.xInverse.range([\n        //   -(newXScale.domain()[1]-newXScale.domain()[0]),\n        //   (newXScale.domain()[1]-newXScale.domain()[0])\n        // ]);\n      });\n      console.log(thisScale.scale.domain());\n\n    };\n    // const xScale = scaleLinear()\n    //   .domain([xMin, xMax]) //scaleLinear takes domain (data values) & maps onto range (screen pixel values)\n    //   .range([0, dimensions.width]);\n    const yScale = scaleLinear()\n      //if difference in y vaules greater than 5, resize to min and max\n      .domain((rangeY>breakpoint) ? [yMin, yMax] : [yMin-breakpoint, yMax+breakpoint])\n      .range([0, dimensions.height]);\n    //inverse scales for drag behavior\n    // const xScaleInverse = scaleLinear()\n    //   .domain([-dimensions.width, dimensions.width])\n    //   .range([-rangeX, rangeX]); //maxRangeX-minRangeX gives section of x values displayed onscreen\n    const yScaleInverse = scaleLinear()\n      .domain([-dimensions.height, dimensions.height])\n      .range((rangeY>breakpoint) ? [-rangeY, rangeY] : [-breakpoint*5, breakpoint*5]);\n\n\n\n\n\n    //---draw intervals---//\n    if (intervals.length) {\n      svg\n      .selectAll(\".intervals\")\n      .data(intervals)\n      .join(\"rect\")\n      .attr(\"class\", \"intervals\")\n      .attr(\"x\", n => generateScales(scales[n.scale]).x(n.start))\n      // .attr(\"y\", n => n.yStart ? yScale(n.yStart) : yScale(minMax[2]))\n      .attr(\"y\", n => n.yStart ? yScale(n.yStart) : 0) //todo\n      .attr(\"width\", n => generateScales(scales[n.scale]).x(n.end)-generateScales(scales[n.scale]).x(n.start))\n      .attr(\"height\", n => {\n        if (n.yStart & n.yEnd) {\n          return (yScale(n.yEnd)-yScale(n.yStart))\n        } else if (n.yStart) {\n          return (yScale(yMax+10)-yScale(n.yStart))\n        } else {\n          return (yScale(yMax+10)) //todo\n          // return (yScale(minMax[3])-yScale(minMax[2]))\n        }})\n      .attr(\"opacity\", d => d.opacity ? d.opacity : 0.5)\n      .attr(\"fill\", d => d.color ? d.color : \"#999\")\n      .on(\"click\", (e, target) => {\n        //displays line properties when clicked\n        setInfo({position: [e.x, e.y], target: target, type: \"interval\"});  //todo: set info to null when clicking again\n        e.stopPropagation();\n      });\n    }\n\n    //---draw bottom axis---//\n\n    xScales().forEach(thisScale => {\n      const xAxis = axisBottom(thisScale.scale)\n      .tickFormat(format(''));\n\n      svg\n        .append(\"g\") //todo\n        .attr(\"class\", \"remove\")\n        .style(\"transform\", `translateY(${dimensions.height*thisScale.yPos}px)`)\n        .call(xAxis)\n        .raise()\n        .call(g => g.select(\".domain\") //removes solid black axis bar\n          .remove())\n        .call(g => g.selectAll(\".tick line\") //styles individual ticks\n          .attr(\"stroke-opacity\", 0.5))\n        .call(g => g.selectAll(\".tick text\")\n          .attr(\"y\", 10) //todo?\n          .attr(\"opacity\", 0.5));\n      svg\n        .append(\"text\")\n        .text(thisScale.units)\n        .attr(\"class\", \"axisLabel smallTxt remove\")\n        .attr(\"x\", dimensions.width/2)\n        .attr(\"y\", dimensions.height*(thisScale.yPos+.07))\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"opacity\", 0.5);\n      }\n    );\n\n\n    // const xAxis = axisBottom(generateScales(scales.smalls).x)\n    //   // .tickSize(-dimensions.height) //tick extends to entire height of svg\n    //   .tickValues(logic ? [-1, 0, 1] : null)\n    //   .tickFormat(logic ? x => scaleOrdinal([-1, 0, 1], [\"before\", \"now\", \"after\"])(x) : format('')); //gets rid of , for 1000s groupings\n\n    // svg\n    //   .select(\".x-axis\") //selects and replaces .x-axis\n    //   .style(\"transform\", `translateY(${dimensions.height}px)`)\n    //   .call(xAxis)\n    //   .raise()\n      // .call(g => g.select(\".domain\") //removes solid black axis bar\n      //   .remove())\n      // .call(g => g.selectAll(\".tick line\") //styles individual ticks\n      //   .attr(\"stroke-opacity\", 0.5))\n      //   // .attr(\"stroke-dasharray\", \"2,2\"))\n      // .call(g => g.selectAll(\".tick text\")\n      //   .attr(\"y\", 10) //todo?\n      //   .attr(\"opacity\", 0.5));\n      //   // .attr(\"font-size\", fontSize*.8)); //replace class \"x-axis\" w xAxis\n    //\n\n    //--drag behavior--//\n    const dragged = drag()\n      // .on(\"start\", e => {\n      //   select(this).attr(\"stroke\", \"black\");\n      // })\n      .on(\"drag\", e => {\n        //todo (round new position to .01)\n        const dx = generateScales(scales[e.subject.scale]).xInverse(e.dx);\n        const dy = Math.round(yScaleInverse(e.dy)*100)/100;\n        const newNodes = [...data]; //always make a copy when updating array\n        //find array element in data with matching ID and set new x y coordinates\n        newNodes.find(n => n.id === e.subject.id).x += dx;\n        newNodes.find(n => n.id === e.subject.id).y += dy;\n        setData(newNodes);\n      });\n\n    //---draw links---//\n    const linker = linkHorizontal()\n      .source(link => link.source)\n      .target(link => link.target)\n      .x(n => generateScales(scales[n.scale]).x(logic ? logicScale(n.x) : n.x))\n      .y(n => yScale(n.y));\n\n    svg\n      .selectAll(\".link\")\n      .data(links)\n      .join(\"path\")\n      .raise()\n      .attr(\"class\", \"link pointer\")\n      .attr(\"d\", linker)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", n => n.color? n.color : \"black\")\n      .attr(\"stroke-width\", n => n.width ? n.width : radius/3)\n      .attr(\"stroke-opacity\", n => n.opacity ? n.opacity : 1)\n      .attr(\"stroke-dasharray\", n => n.dashed ? n.dashed : null)\n      .on(\"click\", (e, target) => {\n        setInfo({position: [e.x, e.y], target: target, type: \"link\"}); //displays line properties when clicked\n        e.stopPropagation();\n      });\n\n\n    //---draw points---//\n    svg\n      .selectAll(\".node\")\n      .data(activeData.filter(d => d.inflectionSemantic!==\"cancelled\"))\n      .join(\"circle\")\n      .raise()\n      .attr(\"class\", \"node pointer\")\n      .attr(\"r\", n => n.radius? n.radius : radius) //todo for accessibility\n      .attr(\"fill\", d => d.color ? d.color : \"black\") //if it has a color other than black, use that\n      .attr(\"opacity\", d => d.opacity ? d.opacity : 1)\n      .attr(\"cx\", d => generateScales(scales[d.scale]).x(logic ? logicScale(d.x) : d.x))\n      .attr(\"cy\", d => yScale(d.y))\n      .call(dragged)\n      .on(\"click\", (e, target) => {\n        if (toggle===\"cancelled\") {\n          const newNodes = [...data];\n          const node = newNodes.find(n => n.id === target.id);\n          node.inflectionSemantic = \"cancelled\";\n          setData(newNodes);\n        } else {\n          setInfo({position: [e.x, e.y], target: target}); //displays node properties when clicked\n        }\n        e.stopPropagation(); //stops deselect when bg is clicked\n      });\n\n    //---initialize custom symbols---//\n    const cancelledSymbol = {\n      draw: (context, size) => {\n        let s = Math.sqrt(size)/2;\n            context.moveTo(s,0);\n            context.lineTo(s*2,s);\n            context.lineTo(s,s*2);\n            context.lineTo(0,s);\n            context.lineTo(-s,s*2);\n            context.lineTo(-s*2,s);\n            context.lineTo(-s,0);\n            context.lineTo(-s*2,-s);\n            context.lineTo(-s,-s*2);\n            context.lineTo(0,-s);\n            context.lineTo(s,-s*2);\n            context.lineTo(s*2,-s);\n            context.closePath();\n      }\n    }\n\n    //---draw symbols---//\n    svg\n      .selectAll(\".cancelled\")\n      .data(activeData.filter(d => d.inflectionSemantic===\"cancelled\"))\n      .join(\"path\")\n      .raise()\n      .attr(\"class\", \"cancelled pointer\")\n      .attr(\"d\", symbol(cancelledSymbol, radius*radius*5))\n      .attr(\"transform\", n => `translate(${generateScales(scales[n.scale]).x(n.x)}, ${yScale(n.y)})`)\n      .on(\"click\", (e, target) => {\n        if (toggle===\"cancelled\") {\n          const newNodes = [...data];\n          const node = newNodes.find(n => n.id === target.id);\n          delete node.inflectionSemantic;\n          setData(newNodes);\n        } else {\n          setInfo({position: [e.x, e.y], target: target}); //displays node properties when clicked\n        }\n        e.stopPropagation();\n      });\n      // .attr(\"transform\", \"rotate(90)\");\n\n\n    //---draw labels---//\n    svg\n      .selectAll(\".label\")\n      .data(activeData)\n      .join(\"text\")\n      .raise()\n      .attr(\"class\", \"label\")\n      .text(node => showLabel ? node.name : node.id)\n      .attr(\"x\", node => generateScales(scales[node.scale]).x(logic ? logicScale(node.x) : node.x))\n      .attr(\"y\", node => yScale(node.y + (rangeY>breakpoint ? rangeY*.06 : breakpoint/5))) //vertical offset. see scales\n      .attr(\"text-anchor\", \"middle\");\n      // .attr(\"font-size\", fontSize);\n\n\n    //---zoom---//\n    const zoomBehavior = zoom()\n      .scaleExtent([0.25, 5]) //can zoom 2x smaller and 5x bigger\n      .translateExtent([[-100, 0], [dimensions.width+100, dimensions.height]]) //limits how far graph can pan\n      .on(\"zoom\", e => {\n        const zoomState = e.transform; //returns zoom transformations as an object\n        setCurrentZoomState(zoomState);\n      });\n\n    svg.on(\"click\", () => setInfo(null));\n    svg.call(zoomBehavior);\n\n  }, [data, setData, intervals, scales, activeLayer, activeData, dimensions, links, logic, currentZoomState, setInfo, radius, showLabel]);\n\n  return (\n    <div ref={wrapperRef} className=\"svgWrapper\">\n      <svg id=\"graphic\" ref={svgRef}>\n        <g className=\"cancelled\" />\n      </svg>\n    </div>\n  );\n};\n\n\nexport default Graphic;\n"]},"metadata":{},"sourceType":"module"}