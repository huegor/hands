{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InfoBox.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n// import DeletePoint from \"./DeletePoint\";\n\n/*\n  - pass object info and mouseclick position to component\n  - component is a div set at mouseclick position and displays object info as text\n*/\nfunction InfoBox({\n  info,\n  setInfo,\n  data,\n  setData\n}) {\n  const target = info.target;\n  var content = null;\n  /*\n    deleting point i:\n    - find data[i-1] and set its target to data[i+1]. then remove data[i] from array\n    - if data[i] is first point, just remove from array\n     - if first point => just delete\n    - prevNode exists but is not linked => just delete\n    - prevNode exists and is linked, but no nextNode => set prevNode target to null, then delete\n    - prevNode exists, is linked, and has next node => set prevNode target to nextNode, then delete\n    - prevNode exists, is linked to multiple nodes => remove target node from prevNode, then delete\n  */\n\n  const handleDeletePoint = e => {\n    e.preventDefault();\n    const newData = { ...data\n    };\n    const dataKeys = Object.entries(newData).map(([k, v]) => k);\n    const dataValues = Object.entries(newData).map(([k, v]) => v); // console.log(dataValues[0]);\n    // const node = newData[target[0]];\n    // const prevNode = newData[target[0]-1];\n    // const nextNode = newData[target[0]+1];\n\n    if (target[0] === dataKeys[0]) {\n      //if this is the fist node, delete point and return data\n      delete newData[target[0]];\n    } else {\n      dataValues.forEach(v => {\n        if (!v.target) {\n          return;\n        } else {\n          console.log(\"hi\");\n        } // if (Array.isArray(v.target) && v.target.includes(target[0])) { //for each data entry v, does v.target include id of deleted point?\n        //       if (v.target.length > 1) { //if multiple targets, delete only point\n        //         v.target.filter((x) => x !== target[0]);\n        //       } else if (nextNode) { //if there's a next node, set it as the new target then delete point\n        //         v.target\n        //         return ({...v, \"target\": [target.id+1]});\n        //       } else { //if there are no more nodes after this, set target to null\n        //         return ({...v, \"target\": null});\n        //       }\n        //     } else {\n        //       return v;\n        //     }\n\n      }); // const updatedData = data.map(n =>\n      //   {\n      //     if (Array.isArray(n.target) && n.target.includes(target.id)) { //for each data entry n, does n.target include id of deleted point?\n      //       if (n.target.length > 1) { //if multiple targets, delete only point\n      //         return ({...n, \"target\": n.target.filter((x) => x !== target.id)});\n      //       } else if (nextNode) { //if there's a next node, set it as the new target then delete point\n      //         return ({...n, \"target\": [target.id+1]});\n      //       } else { //if there are no more nodes after this, set target to null\n      //         return ({...n, \"target\": null});\n      //       }\n      //     } else {\n      //       return n;\n      //     }\n      //   }\n      // )\n      // return updatedData.filter(n => n !== target);\n    }\n    /*\n     setData(newData);\n    setInfo(null);*/\n\n  };\n\n  switch (info.type) {\n    case 'link':\n      content = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"From: \", target.source.name, \" (\", target.source.id, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 58\n        }, this), \"To: \", target.target.name, \" (\", target.target.id, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 56\n        }, this), \"Color: \", target.color ? target.color : \"Black\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 57\n        }, this), \"Width: \", target.width ? target.width : \"1.67 (default)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 66\n        }, this), \"Opacity: \", target.opacity ? target.opacity : \"1\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 59\n        }, this), \"Dashed: \", target.dashed ? target.dashed : \"N/A\"]\n      }, void 0, true);\n      break;\n\n    case 'zone':\n      content = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"ID: \", target.id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 26\n        }, this), \"Label: \", target.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 31\n        }, this), \"Time Start: \", target.start, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 37\n        }, this), \"Time End: \", target.end, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }, this), \"Y Start: \", target.yStart ? target.yStart : \"N/A\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 59\n        }, this), \"Y End: \", target.yEnd ? target.yEnd : \"N/A\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 53\n        }, this), \"Color: \", target.color ? target.color : \"#999 (default)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 66\n        }, this), \"Opacity: \", target.opacity ? target.opacity : \"0.5\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 61\n        }, this)]\n      }, void 0, true);\n      break;\n\n    default:\n      content = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"ID: \", target[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 26\n        }, this), \"Time: \", target[1].x, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 30\n        }, this), \"Y Position: \", target[1].y, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 36\n        }, this), \"Target(s): \", target[1].target ? target[1].target : \"N/A\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 67\n        }, this), \"Color: \", target[1].color ? target[1].color : \"Black\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 63\n        }, this), \"Opacity: \", target[1].opacity ? target[1].opacity : \"1\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 65\n        }, this), \"Radius: \", target[1].radius ? target[1].radius : \"5 (default)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 72\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeletePoint,\n          children: \"Delete Point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui absolute\",\n    style: {\n      left: info.position[0] + 'px',\n      top: info.position[1] + 'px'\n    },\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_c = InfoBox;\nexport default InfoBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoBox\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InfoBox.js"],"names":["InfoBox","info","setInfo","data","setData","target","content","handleDeletePoint","e","preventDefault","newData","dataKeys","Object","entries","map","k","v","dataValues","forEach","console","log","type","source","name","id","color","width","opacity","dashed","start","end","yStart","yEnd","x","y","radius","left","position","top"],"mappings":"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","sourcesContent":["// import DeletePoint from \"./DeletePoint\";\n/*\n  - pass object info and mouseclick position to component\n  - component is a div set at mouseclick position and displays object info as text\n*/\n\nfunction InfoBox({info, setInfo, data, setData}) {\n  const target = info.target;\n  var content = null;\n\n  /*\n    deleting point i:\n    - find data[i-1] and set its target to data[i+1]. then remove data[i] from array\n    - if data[i] is first point, just remove from array\n\n    - if first point => just delete\n    - prevNode exists but is not linked => just delete\n    - prevNode exists and is linked, but no nextNode => set prevNode target to null, then delete\n    - prevNode exists, is linked, and has next node => set prevNode target to nextNode, then delete\n    - prevNode exists, is linked to multiple nodes => remove target node from prevNode, then delete\n  */\n  const handleDeletePoint = (e) => {\n    e.preventDefault();\n\n    const newData = {...data};\n    const dataKeys = Object.entries(newData).map(([k,v]) => k);\n    const dataValues = Object.entries(newData).map(([k,v]) => v);\n    // console.log(dataValues[0]);\n    // const node = newData[target[0]];\n    // const prevNode = newData[target[0]-1];\n    // const nextNode = newData[target[0]+1];\n\n\n    if (target[0] === dataKeys[0]) {  //if this is the fist node, delete point and return data\n      delete newData[target[0]];\n    } else {\n      dataValues.forEach(v => {\n        if (!v.target) {\n          return;\n        } else {\n          console.log(\"hi\");\n        }\n      // if (Array.isArray(v.target) && v.target.includes(target[0])) { //for each data entry v, does v.target include id of deleted point?\n      //       if (v.target.length > 1) { //if multiple targets, delete only point\n      //         v.target.filter((x) => x !== target[0]);\n      //       } else if (nextNode) { //if there's a next node, set it as the new target then delete point\n      //         v.target\n      //         return ({...v, \"target\": [target.id+1]});\n      //       } else { //if there are no more nodes after this, set target to null\n      //         return ({...v, \"target\": null});\n      //       }\n      //     } else {\n      //       return v;\n      //     }\n    });\n      // const updatedData = data.map(n =>\n      //   {\n      //     if (Array.isArray(n.target) && n.target.includes(target.id)) { //for each data entry n, does n.target include id of deleted point?\n      //       if (n.target.length > 1) { //if multiple targets, delete only point\n      //         return ({...n, \"target\": n.target.filter((x) => x !== target.id)});\n      //       } else if (nextNode) { //if there's a next node, set it as the new target then delete point\n      //         return ({...n, \"target\": [target.id+1]});\n      //       } else { //if there are no more nodes after this, set target to null\n      //         return ({...n, \"target\": null});\n      //       }\n      //     } else {\n      //       return n;\n      //     }\n      //   }\n      // )\n      // return updatedData.filter(n => n !== target);\n    }/*\n\n\n    setData(newData);\n    setInfo(null);*/\n  }\n\n  switch (info.type) {\n    case 'link':\n      content =\n        <>\n          From: {target.source.name} ({target.source.id})<br/>\n          To: {target.target.name} ({target.target.id})<br/>\n          Color: {target.color ? target.color : \"Black\"}<br/>\n          Width: {target.width ? target.width : \"1.67 (default)\"}<br/>\n          Opacity: {target.opacity ? target.opacity : \"1\"}<br/>\n          Dashed: {target.dashed ? target.dashed : \"N/A\"}\n        </>\n    break\n    case 'zone':\n      content =\n        <>\n          ID: {target.id}<br/>\n          Label: {target.name}<br/>\n          Time Start: {target.start}<br/>\n          Time End: {target.end}<br/>\n          Y Start: {target.yStart ? target.yStart : \"N/A\"}<br/>\n          Y End: {target.yEnd ? target.yEnd : \"N/A\"}<br/>\n          Color: {target.color ? target.color : \"#999 (default)\"}<br/>\n          Opacity: {target.opacity ? target.opacity : \"0.5\"}<br/>\n        </>\n    break\n    default:\n      content =\n        <>\n          ID: {target[0]}<br/>\n          Time: {target[1].x}<br/>\n          Y Position: {target[1].y}<br/>\n          Target(s): {target[1].target ? target[1].target : \"N/A\"}<br/>\n          Color: {target[1].color ? target[1].color : \"Black\"}<br/>\n          Opacity: {target[1].opacity ? target[1].opacity : \"1\"}<br/>\n          Radius: {target[1].radius ? target[1].radius : \"5 (default)\"}<br/>\n          <button onClick={handleDeletePoint}>Delete Point</button>\n        </>\n  };\n\n  return (\n    <div className=\"ui absolute\" style={{left: info.position[0] + 'px', top: info.position[1] + 'px'}}>\n      {content}\n    </div>\n  );\n}\n\nexport default InfoBox;\n"]},"metadata":{},"sourceType":"module"}