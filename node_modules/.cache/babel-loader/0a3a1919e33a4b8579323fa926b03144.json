{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewScaleForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n/*\n   UI and function for adding new zones.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewScaleForm({\n  src,\n  updateSrc,\n  setToggle,\n  setActiveScale\n}) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [min, setMin] = useState(\"\");\n  const [max, setMax] = useState(\"\");\n  const [units, setUnits] = useState(\"\");\n  const [yPos, setYPos] = useState(); //optional parameters\n\n  const [segmentsNum, setSegmentNum] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newScales = { ...src.scales\n    };\n    const tempMin = parseFloat(min);\n    const tempMax = parseFloat(max);\n    const tempYPos = parseFloat(yPos);\n\n    if (tempMin >= tempMax) {\n      alert(\"Minimum Value must be less than or equal to Maximum Value!\");\n      return;\n    } else if (tempYPos > 1) {\n      alert(\"Vertical Position must be between 0 (top) and 1 (bottom)!\");\n      return;\n    } //else if (scale name already exists) {\n    //\n    // };\n    //generate new x scale\n\n\n    newScales.x[name] = {\n      \"min\": tempMin,\n      \"max\": tempMax,\n      \"units\": units,\n      \"yPos\": tempYPos,\n      \"segments\": [] //todo\n\n    };\n    newScales.y[name] = {};\n    updateSrc(newScales, \"scales\");\n    setActiveScale(name);\n    setToggle(null);\n  };\n\n  const handleClose = e => {\n    setToggle(null);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"right uiButton closeButton\",\n      onClick: handleClose,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 86\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"any unicode characters\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Minimum Value\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"#s for now\",\n        value: min,\n        onChange: e => setMin(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Maximum Value\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"#s for now\",\n        value: max,\n        onChange: e => setMax(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Units Label\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"ie: Years\",\n        value: units,\n        onChange: e => setUnits(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Vertical Position\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"0 (top) - 1 (bottom)\",\n        value: yPos,\n        onChange: e => setYPos(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Segments\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"granularities within scale\",\n        value: segmentsNum,\n        onChange: e => setSegmentNum(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"uiButton\",\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewScaleForm, \"/JVI0yd3Ay8vQn8u6LlnNb5lOWw=\");\n\n_c = NewScaleForm;\n;\nexport default NewScaleForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewScaleForm\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewScaleForm.js"],"names":["React","useState","NewScaleForm","src","updateSrc","setToggle","setActiveScale","name","setName","min","setMin","max","setMax","units","setUnits","yPos","setYPos","segmentsNum","setSegmentNum","handleSubmit","e","preventDefault","newScales","scales","tempMin","parseFloat","tempMax","tempYPos","alert","x","y","handleClose","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n/*\n   UI and function for adding new zones.\n*/\n\nfunction NewScaleForm({src, updateSrc, setToggle, setActiveScale}) {\n  const [name, setName] = useState(\"\");\n  const [min, setMin] = useState(\"\");\n  const [max, setMax] = useState(\"\");\n  const [units, setUnits] = useState(\"\");\n  const [yPos, setYPos] = useState();\n  //optional parameters\n  const [segmentsNum, setSegmentNum] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newScales = {...src.scales};\n\n    const tempMin = parseFloat(min);\n    const tempMax = parseFloat(max);\n    const tempYPos = parseFloat(yPos);\n\n    if (tempMin>=tempMax) {\n      alert(\"Minimum Value must be less than or equal to Maximum Value!\");\n      return;\n    } else if (tempYPos>1) {\n      alert(\"Vertical Position must be between 0 (top) and 1 (bottom)!\");\n      return;\n    } //else if (scale name already exists) {\n    //\n    // };\n\n    //generate new x scale\n    newScales.x[name] = {\n      \"min\": tempMin,\n      \"max\": tempMax,\n      \"units\": units,\n      \"yPos\": tempYPos,\n      \"segments\": [] //todo\n    }\n    newScales.y[name] = {\n\n    }\n\n    updateSrc(newScales, \"scales\");\n    setActiveScale(name);\n    setToggle(null);\n  };\n\n  const handleClose = (e) => {\n    setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"ui absolute center\" onSubmit={handleSubmit}>\n      <button className=\"right uiButton closeButton\" onClick={handleClose}>x</button><br/>\n      <label>\n        Name<span className=\"redText\">* </span>\n        <input type=\"text\"\n          placeholder=\"any unicode characters\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        Minimum Value<span className=\"redText\">* </span>\n        <input type=\"text\"\n          placeholder=\"#s for now\"\n          value={min}\n          onChange={(e) => setMin(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        Maximum Value<span className=\"redText\">* </span>\n        <input type=\"text\"\n          placeholder=\"#s for now\"\n          value={max}\n          onChange={(e) => setMax(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        Units Label<span className=\"redText\">* </span>\n        <input type=\"text\"\n          placeholder=\"ie: Years\"\n          value={units}\n          onChange={(e) => setUnits(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        Vertical Position<span className=\"redText\">* </span>\n        <input\n          type=\"text\"\n          placeholder=\"0 (top) - 1 (bottom)\"\n          value={yPos}\n          onChange={(e) => setYPos(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        Segments\n        <input\n          type=\"number\"\n          placeholder=\"granularities within scale\"\n          value={segmentsNum}\n          onChange={(e) => setSegmentNum(e.target.value)}\n        />\n      </label><br/>\n      <input className=\"uiButton\" type=\"submit\" value=\"Submit\"/>\n    </form>\n  )\n};\n\nexport default NewScaleForm;\n"]},"metadata":{},"sourceType":"module"}