{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InfoBox.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n// import DeletePoint from \"./DeletePoint\";\n\n/*\n  - pass object info and mouseclick position to component\n  - component is a div set at mouseclick position and displays object info as text\n*/\nfunction InfoBox({\n  info,\n  setInfo,\n  data,\n  setData\n}) {\n  const target = info.target;\n  var content = null;\n  /*\n    deleting point i:\n    - find data[i-1] and set its target to data[i+1]. then remove data[i] from array\n    - if data[i] is first point, just remove from array\n     - if first point => just delete\n    - prevNode exists but is not linked => just delete\n    - prevNode exists and is linked, but no nextNode => set prevNode target to null, then delete\n    - prevNode exists, is linked, and has next node => set prevNode target to nextNode, then delete\n    - prevNode exists, is linked to multiple nodes => remove target node from prevNode, then delete\n  */\n\n  const handleDeletePoint = e => {\n    e.preventDefault();\n    const newData = { ...data\n    }; // const dataKeys = Object.entries(newData).map(([k,v]) => k);\n\n    const dataValues = Object.entries(newData).map(([k, v]) => v); // console.log(dataValues[0]);\n\n    const node = newData[target[0]];\n    const prevNode = newData[target[0] - 1];\n    const nextNode = newData[target[0] + 1]; // dataValues.forEach(v => {\n    //   if (!v.target || !v.target.includes(target[0])) {\n    //     return;\n    //   } else { //for each data entry v, does v.target include id of deleted point?\n    //     // console.log(v)\n    //     if (v.target.length > 1) {\n    //       v.target = v.target.filter((x) => x !== target[0]);\n    //     } else {\n    //       v.target = null;\n    //     }\n    //   }\n    // });\n\n    dataValues.forEach(v => {\n      if (v.target && v.target.includes(target[0])) {\n        //for each data entry v, does v.target include id of deleted point?\n        if (v.target.length > 1) {\n          //if multiple targets, delete only point\n          v.target = v.target.filter(x => x !== target[0]);\n        } else if (nextNode) {\n          //if there's a next node, set it as the new target then delete point\n          v.target = [target[0] + 1];\n        } else {\n          //if there are no more nodes after this, set target to null\n          v.target = null;\n        }\n      }\n    });\n    delete newData[target[0]];\n    console.log(data);\n    console.log(newData); //\n    //\n    //\n    // setData(newData);\n    // setInfo(null);\n  };\n\n  switch (info.type) {\n    case 'link':\n      content = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"From: \", target.source.name, \" (\", target.source.id, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 58\n        }, this), \"To: \", target.target.name, \" (\", target.target.id, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 56\n        }, this), \"Color: \", target.color ? target.color : \"Black\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 57\n        }, this), \"Width: \", target.width ? target.width : \"1.67 (default)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 66\n        }, this), \"Opacity: \", target.opacity ? target.opacity : \"1\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 59\n        }, this), \"Dashed: \", target.dashed ? target.dashed : \"N/A\"]\n      }, void 0, true);\n      break;\n\n    case 'zone':\n      content = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"ID: \", target.id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 26\n        }, this), \"Label: \", target.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 31\n        }, this), \"Time Start: \", target.start, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 37\n        }, this), \"Time End: \", target.end, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }, this), \"Y Start: \", target.yStart ? target.yStart : \"N/A\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 59\n        }, this), \"Y End: \", target.yEnd ? target.yEnd : \"N/A\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 53\n        }, this), \"Color: \", target.color ? target.color : \"#999 (default)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 66\n        }, this), \"Opacity: \", target.opacity ? target.opacity : \"0.5\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 61\n        }, this)]\n      }, void 0, true);\n      break;\n\n    default:\n      content = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"ID: \", target[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 26\n        }, this), \"Time: \", target[1].x, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 30\n        }, this), \"Y Position: \", target[1].y, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 36\n        }, this), \"Target(s): \", target[1].target ? target[1].target : \"N/A\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 67\n        }, this), \"Color: \", target[1].color ? target[1].color : \"Black\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 63\n        }, this), \"Opacity: \", target[1].opacity ? target[1].opacity : \"1\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 65\n        }, this), \"Radius: \", target[1].radius ? target[1].radius : \"5 (default)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 72\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeletePoint,\n          children: \"Delete Point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui absolute\",\n    style: {\n      left: info.position[0] + 'px',\n      top: info.position[1] + 'px'\n    },\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_c = InfoBox;\nexport default InfoBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoBox\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InfoBox.js"],"names":["InfoBox","info","setInfo","data","setData","target","content","handleDeletePoint","e","preventDefault","newData","dataValues","Object","entries","map","k","v","node","prevNode","nextNode","forEach","includes","length","filter","x","console","log","type","source","name","id","color","width","opacity","dashed","start","end","yStart","yEnd","y","radius","left","position","top"],"mappings":"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","sourcesContent":["// import DeletePoint from \"./DeletePoint\";\n/*\n  - pass object info and mouseclick position to component\n  - component is a div set at mouseclick position and displays object info as text\n*/\n\nfunction InfoBox({info, setInfo, data, setData}) {\n  const target = info.target;\n  var content = null;\n\n  /*\n    deleting point i:\n    - find data[i-1] and set its target to data[i+1]. then remove data[i] from array\n    - if data[i] is first point, just remove from array\n\n    - if first point => just delete\n    - prevNode exists but is not linked => just delete\n    - prevNode exists and is linked, but no nextNode => set prevNode target to null, then delete\n    - prevNode exists, is linked, and has next node => set prevNode target to nextNode, then delete\n    - prevNode exists, is linked to multiple nodes => remove target node from prevNode, then delete\n  */\n  const handleDeletePoint = (e) => {\n    e.preventDefault();\n\n    const newData = {...data};\n    // const dataKeys = Object.entries(newData).map(([k,v]) => k);\n    const dataValues = Object.entries(newData).map(([k,v]) => v);\n    // console.log(dataValues[0]);\n    const node = newData[target[0]];\n    const prevNode = newData[target[0]-1];\n    const nextNode = newData[target[0]+1];\n\n\n    // dataValues.forEach(v => {\n    //   if (!v.target || !v.target.includes(target[0])) {\n    //     return;\n    //   } else { //for each data entry v, does v.target include id of deleted point?\n    //     // console.log(v)\n    //     if (v.target.length > 1) {\n    //       v.target = v.target.filter((x) => x !== target[0]);\n    //     } else {\n    //       v.target = null;\n    //     }\n    //   }\n    // });\n    dataValues.forEach(v => {\n      if (v.target && v.target.includes(target[0])) { //for each data entry v, does v.target include id of deleted point?\n        if (v.target.length > 1) { //if multiple targets, delete only point\n          v.target = v.target.filter((x) => x !== target[0]);\n        } else if (nextNode) { //if there's a next node, set it as the new target then delete point\n          v.target = [target[0]+1];\n        } else { //if there are no more nodes after this, set target to null\n          v.target = null;\n        }\n      }\n    });\n\n    delete newData[target[0]];\n    console.log(data);\n    console.log(newData);\n    //\n    //\n    //\n    // setData(newData);\n    // setInfo(null);\n  }\n\n  switch (info.type) {\n    case 'link':\n      content =\n        <>\n          From: {target.source.name} ({target.source.id})<br/>\n          To: {target.target.name} ({target.target.id})<br/>\n          Color: {target.color ? target.color : \"Black\"}<br/>\n          Width: {target.width ? target.width : \"1.67 (default)\"}<br/>\n          Opacity: {target.opacity ? target.opacity : \"1\"}<br/>\n          Dashed: {target.dashed ? target.dashed : \"N/A\"}\n        </>\n    break\n    case 'zone':\n      content =\n        <>\n          ID: {target.id}<br/>\n          Label: {target.name}<br/>\n          Time Start: {target.start}<br/>\n          Time End: {target.end}<br/>\n          Y Start: {target.yStart ? target.yStart : \"N/A\"}<br/>\n          Y End: {target.yEnd ? target.yEnd : \"N/A\"}<br/>\n          Color: {target.color ? target.color : \"#999 (default)\"}<br/>\n          Opacity: {target.opacity ? target.opacity : \"0.5\"}<br/>\n        </>\n    break\n    default:\n      content =\n        <>\n          ID: {target[0]}<br/>\n          Time: {target[1].x}<br/>\n          Y Position: {target[1].y}<br/>\n          Target(s): {target[1].target ? target[1].target : \"N/A\"}<br/>\n          Color: {target[1].color ? target[1].color : \"Black\"}<br/>\n          Opacity: {target[1].opacity ? target[1].opacity : \"1\"}<br/>\n          Radius: {target[1].radius ? target[1].radius : \"5 (default)\"}<br/>\n          <button onClick={handleDeletePoint}>Delete Point</button>\n        </>\n  };\n\n  return (\n    <div className=\"ui absolute\" style={{left: info.position[0] + 'px', top: info.position[1] + 'px'}}>\n      {content}\n    </div>\n  );\n}\n\nexport default InfoBox;\n"]},"metadata":{},"sourceType":"module"}