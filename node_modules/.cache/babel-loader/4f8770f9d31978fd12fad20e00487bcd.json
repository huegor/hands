{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewInstantForm.js\";\nimport React from 'react';\n/*\n   UI and function for adding new points.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass NewInstantForm extends React.Component {\n  //controlled component, meaning React is the \"single source of truth\"\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: '',\n      xValue: props.target.x,\n      //\"target\" is scaled mouse click coordinates. Graphics.js addInstant\n      yValue: Math.round(props.target.y),\n      scale: props.activeScale,\n      color: '',\n      opacity: '',\n      radius: '',\n      endPoint: false,\n      targets: '',\n      lineColor: '',\n      lineWidth: '',\n      lineOpacity: '',\n      lineDashed: '',\n      lineColorB: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    //if it's a checkbox, evaluate if checked. otherwise, evaluate the value\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value; // const value = () => {\n    //   switch (e.target.type) {\n    //     case 'checkbox':\n    //       return e.target.checked\n    //       break;\n    //     case 'select':\n    //\n    //       break;\n    //     default:\n    //       return e.target.value\n    //   }\n    // }\n\n    const name = e.target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleClose(e) {\n    this.props.setToggle(null);\n    e.preventDefault();\n  }\n\n  handleSubmit(e) {\n    //consider turning into useCallback\n    e.preventDefault();\n    const instants = this.props.data;\n    const tempx = parseFloat(e.target.xValue.value); //if y pos specified, convert to float. otherwise, return null\n\n    const tempy = e.target.yValue.value ? parseFloat(e.target.yValue.value) : null; //error handling. btw, isNan(null) === false\n\n    if (isNaN(tempx) && isNaN(tempy)) {\n      alert(\"Make sure Time and y Position are numbers!\");\n    } else if (isNaN(tempx)) {\n      alert(\"Make sure Time is a number!\");\n    } else if (isNaN(tempy)) {\n      alert(\"Make sure y Position is a number!\");\n    } else {\n      //generate instant\n      const lastInstant = instants[instants.length - 1]; //last instant of data\n\n      const instant = {\n        \"id\": instants.length ? lastInstant.id + 1 : 0,\n        //id = id of last instant + 1. if first instant, id = 0\n        \"name\": e.target.label.value,\n        \"x\": tempx,\n        \"y\": e.target.yValue.value ? tempy : lastInstant ? lastInstant.y : 0,\n        // if y not specified, take value of last instant\n        \"scale\": e.target.scale.value,\n        \"target\": this.state.endPoint ? null //if endpoint, set target to null\n        : !instants.length ? [1] //if first instant, set target to 1\n        : e.target.targets.value.length > 1 ? e.target.targets.value.split(',').map(Number) //if multiple targets specified, turn IDs into array\n        : e.target.targets.value ? [parseInt(e.target.targets.value)] //if a single value is specified, set it as target ID\n        : [lastInstant.id + 2],\n        //else, set target ID as instant.id+1 (aka lastInstant.id+2)\n        ...(e.target.color && {\n          \"color\": e.target.color.value\n        }),\n        //if color is specified, create color entry in data\n        ...(e.target.radius && {\n          \"radius\": e.target.radius.value\n        }),\n        ...(e.target.opacity && {\n          \"opacity\": e.target.opacity.value\n        })\n      };\n      console.log(instant);\n\n      const newInstants = () => {\n        if (instants.length && instants[instants.length - 1].target) {\n          const newInstantsLinked = instants.map(n => {\n            //if linked, set target of last instant to ID of new instant and set line properties\n            if (n === instants[instants.length - 1]) {\n              return { ...n,\n                ...(e.target.lineColor && {\n                  \"lineColor\": e.target.lineColor.value\n                }),\n                ...(e.target.lineWidth && {\n                  \"lineWidth\": e.target.lineWidth.value\n                }),\n                ...(e.target.lineOpacity && {\n                  \"lineOpacity\": e.target.lineOpacity.value\n                }),\n                ...(e.target.lineDashed && {\n                  \"lineDashed\": e.target.lineDashed.value\n                })\n              };\n            } else {\n              //leave other instants as is\n              return n;\n            }\n          }); //then, return updated instants plus new instant\n\n          return [...newInstantsLinked, instant];\n        } else {\n          //if not linked, return orignal instants with just new instant added\n          return [...instants, instant];\n        }\n      }; // const newSrc = Object.assign({}, this.props.src, {instants: newInstants()});\n\n\n      this.props.setData(newInstants);\n    }\n\n    this.props.setToggle(null);\n  }\n\n  render() {\n    const scalesList = Object.keys(this.props.scales).map((key, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: key,\n        children: key\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui absolute center\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"right\",\n        onClick: this.handleClose,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 72\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Label\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red\",\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"label\",\n          placeholder: \"any unicode characters\",\n          value: this.state.label,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Time\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red\",\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"xValue\",\n          placeholder: \"numbers only\",\n          value: this.state.xValue,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"y Position\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"yValue\",\n          placeholder: \"#s only (default 0)\",\n          value: this.state.yValue,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Scale\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red\",\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"scale\",\n          value: this.state.scale,\n          onChange: this.handleChange,\n          children: scalesList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Color\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"color\",\n          placeholder: \"blue, #4DA6FF, etc.\",\n          value: this.state.color,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Opacity\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"opacity\",\n          placeholder: \"1\",\n          value: this.state.opacity,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Radius\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"radius\",\n          placeholder: \"5\",\n          value: this.state.radius,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End point?\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"endPoint\",\n          checked: this.state.endPoint,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), !this.state.endPoint && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Target(s)\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"targets\",\n            placeholder: \"instant IDs ie: 4, 5\",\n            value: this.state.targets,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Line Color\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lineColor\",\n            placeholder: \"blue, #4DA6FF, etc.\",\n            value: this.state.lineColor,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Line Width\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"lineWidth\",\n            placeholder: \"1.67\",\n            value: this.state.lineWidth,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Line Opacity\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"lineOpacity\",\n            placeholder: \"1\",\n            value: this.state.lineOpacity,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Line Dashed\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lineDashed\",\n            placeholder: \"i.e: 5\",\n            value: this.state.lineDashed,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Line Color B\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lineColorB\",\n            placeholder: \"blue, #4DA6FF, etc.\",\n            value: this.state.lineColorB,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default NewInstantForm;","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewInstantForm.js"],"names":["React","NewInstantForm","Component","constructor","props","state","label","xValue","target","x","yValue","Math","round","y","scale","activeScale","color","opacity","radius","endPoint","targets","lineColor","lineWidth","lineOpacity","lineDashed","lineColorB","handleChange","bind","handleClose","handleSubmit","e","value","type","checked","name","setState","setToggle","preventDefault","instants","data","tempx","parseFloat","tempy","isNaN","alert","lastInstant","length","instant","id","split","map","Number","parseInt","console","log","newInstants","newInstantsLinked","n","setData","render","scalesList","Object","keys","scales","key","i"],"mappings":"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","sourcesContent":["import React from 'react';\n\n/*\n   UI and function for adding new points.\n*/\n\nclass NewInstantForm extends React.Component {\n  //controlled component, meaning React is the \"single source of truth\"\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: '',\n      xValue: props.target.x, //\"target\" is scaled mouse click coordinates. Graphics.js addInstant\n      yValue: Math.round(props.target.y),\n      scale: props.activeScale,\n      color: '',\n      opacity: '',\n      radius: '',\n      endPoint: false,\n      targets: '',\n      lineColor: '',\n      lineWidth: '',\n      lineOpacity: '',\n      lineDashed: '',\n      lineColorB: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  handleChange(e) {\n    //if it's a checkbox, evaluate if checked. otherwise, evaluate the value\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n    // const value = () => {\n    //   switch (e.target.type) {\n    //     case 'checkbox':\n    //       return e.target.checked\n    //       break;\n    //     case 'select':\n    //\n    //       break;\n    //     default:\n    //       return e.target.value\n    //   }\n    // }\n    const name = e.target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleClose(e) {\n    this.props.setToggle(null);\n    e.preventDefault();\n  }\n\n  handleSubmit(e) { //consider turning into useCallback\n    e.preventDefault();\n    const instants = this.props.data;\n\n    const tempx = parseFloat(e.target.xValue.value);\n    //if y pos specified, convert to float. otherwise, return null\n    const tempy = e.target.yValue.value ? parseFloat(e.target.yValue.value) : null;\n\n    //error handling. btw, isNan(null) === false\n    if (isNaN(tempx) && isNaN(tempy)) {\n      alert(\"Make sure Time and y Position are numbers!\");\n    } else if (isNaN(tempx)) {\n      alert(\"Make sure Time is a number!\");\n    } else if (isNaN(tempy)) {\n      alert(\"Make sure y Position is a number!\");\n    } else {\n      //generate instant\n      const lastInstant = instants[instants.length-1] //last instant of data\n      const instant = {\n        \"id\": instants.length ? lastInstant.id + 1 : 0, //id = id of last instant + 1. if first instant, id = 0\n        \"name\": e.target.label.value,\n        \"x\":tempx,\n        \"y\": e.target.yValue.value ? tempy : ( lastInstant ? lastInstant.y : 0 ), // if y not specified, take value of last instant\n        \"scale\": e.target.scale.value,\n        \"target\": this.state.endPoint ? null //if endpoint, set target to null\n            : !instants.length ? [1] //if first instant, set target to 1\n            : e.target.targets.value.length > 1 ? e.target.targets.value.split(',').map(Number) //if multiple targets specified, turn IDs into array\n            : e.target.targets.value ? [parseInt(e.target.targets.value)] //if a single value is specified, set it as target ID\n            : [lastInstant.id + 2], //else, set target ID as instant.id+1 (aka lastInstant.id+2)\n        ...(e.target.color && {\"color\": e.target.color.value}), //if color is specified, create color entry in data\n        ...(e.target.radius && {\"radius\": e.target.radius.value}),\n        ...(e.target.opacity && {\"opacity\": e.target.opacity.value})\n      };\n      console.log(instant);\n      const newInstants = () => {\n        if (instants.length && instants[instants.length-1].target) {\n          const newInstantsLinked = instants.map(n =>\n            {\n              //if linked, set target of last instant to ID of new instant and set line properties\n              if (n === instants[instants.length-1]) {\n                return (\n                  {\n                    ...n,\n                    ...(e.target.lineColor && {\"lineColor\": e.target.lineColor.value}),\n                    ...(e.target.lineWidth && {\"lineWidth\": e.target.lineWidth.value}),\n                    ...(e.target.lineOpacity && {\"lineOpacity\": e.target.lineOpacity.value}),\n                    ...(e.target.lineDashed && {\"lineDashed\": e.target.lineDashed.value})\n                  }\n                )\n              } else { //leave other instants as is\n                return n;\n              }\n            }\n          );\n          //then, return updated instants plus new instant\n          return([...newInstantsLinked, instant]);\n        } else {\n          //if not linked, return orignal instants with just new instant added\n          return ([...instants, instant]);\n        }\n      };\n      // const newSrc = Object.assign({}, this.props.src, {instants: newInstants()});\n      this.props.setData(newInstants);\n    }\n\n    this.props.setToggle(null);\n\n  }\n\n  render() {\n    const scalesList = Object.keys(this.props.scales).map((key, i) => {\n      return <option value={key} key={i}>{key}</option>\n    });\n\n    return (\n      <form className=\"ui absolute center\" onSubmit={this.handleSubmit}>\n        <button className=\"right\" onClick={this.handleClose}>x</button><br/>\n        <label>\n          Label<span className=\"red\">* </span>\n          <input type=\"text\"\n            name=\"label\"\n            placeholder=\"any unicode characters\"\n            value={this.state.label}\n            onChange={this.handleChange}\n            required\n          />\n        </label><br/>\n        <label>\n          Time<span className=\"red\">* </span>\n          <input\n            type=\"number\"\n            name=\"xValue\"\n            placeholder=\"numbers only\"\n            value={this.state.xValue}\n            onChange={this.handleChange}\n            required\n          />\n        </label><br/>\n        <label>\n          y Position\n          <input\n            type=\"number\"\n            name=\"yValue\"\n            placeholder=\"#s only (default 0)\"\n            value={this.state.yValue}\n            onChange={this.handleChange}\n          />\n        </label><br/>\n        <label>\n          Scale<span className=\"red\">* </span>\n          <select name=\"scale\" value={this.state.scale} onChange={this.handleChange}>\n            {scalesList}\n          </select>\n        </label><br/>\n        <label>\n          Color\n          <input\n            type=\"text\"\n            name=\"color\"\n            placeholder=\"blue, #4DA6FF, etc.\"\n            value={this.state.color}\n            onChange={this.handleChange}\n          />\n        </label><br/>\n        <label>\n          Opacity\n          <input\n            type=\"number\"\n            name=\"opacity\"\n            placeholder=\"1\"\n            value={this.state.opacity}\n            onChange={this.handleChange}\n          />\n        </label><br/>\n        <label>\n          Radius\n          <input\n            type=\"number\"\n            name=\"radius\"\n            placeholder=\"5\"\n            value={this.state.radius}\n            onChange={this.handleChange}\n          />\n        </label><br/>\n        <label>\n          End point?\n          <input\n            type=\"checkbox\"\n            name=\"endPoint\"\n            checked={this.state.endPoint}\n            onChange={this.handleChange}\n          />\n        </label><br/>\n        {!this.state.endPoint &&\n          <>\n            <label>\n              Target(s)\n              <input\n                type=\"text\"\n                name=\"targets\"\n                placeholder=\"instant IDs ie: 4, 5\"\n                value={this.state.targets}\n                onChange={this.handleChange}\n              />\n            </label><br/>\n            <label>\n              Line Color\n              <input\n                type=\"text\"\n                name=\"lineColor\"\n                placeholder=\"blue, #4DA6FF, etc.\"\n                value={this.state.lineColor}\n                onChange={this.handleChange}\n              />\n            </label><br/>\n            <label>\n              Line Width\n              <input\n                type=\"number\"\n                name=\"lineWidth\"\n                placeholder=\"1.67\"\n                value={this.state.lineWidth}\n                onChange={this.handleChange}\n              />\n            </label><br/>\n            <label>\n              Line Opacity\n              <input\n                type=\"number\"\n                name=\"lineOpacity\"\n                placeholder=\"1\"\n                value={this.state.lineOpacity}\n                onChange={this.handleChange}\n              />\n            </label><br/>\n            <label>\n              Line Dashed\n              <input\n                type=\"text\"\n                name=\"lineDashed\"\n                placeholder=\"i.e: 5\"\n                value={this.state.lineDashed}\n                onChange={this.handleChange}\n              />\n            </label><br/>\n            <label>\n              Line Color B\n              <input\n                type=\"text\"\n                name=\"lineColorB\"\n                placeholder=\"blue, #4DA6FF, etc.\"\n                value={this.state.lineColorB}\n                onChange={this.handleChange}\n              />\n            </label><br/>\n          </>\n        }\n        <br/>\n        <input type=\"submit\" value=\"Submit\"/>\n      </form>\n    );\n  }\n};\n\nexport default NewInstantForm;\n"]},"metadata":{},"sourceType":"module"}