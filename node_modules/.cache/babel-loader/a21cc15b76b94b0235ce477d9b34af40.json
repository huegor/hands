{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/ExportDataForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n/*\n  For saving and downloading JSON data onto computer.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExportDataForm({\n  src,\n  setSrc,\n  zones,\n  scales,\n  data,\n  activeData,\n  setToggle,\n  fileName\n}) {\n  _s();\n\n  const [name, setName] = useState(fileName);\n\n  const handleSave = e => {\n    e.preventDefault(); //syncs changes in nodes data with src\n\n    const newSrc = { ...src\n    };\n    newSrc.instants[activeData] = data; //TODO: update src every time change activeData\n\n    newSrc.zones = zones;\n    newSrc.scales = scales;\n    setSrc(newSrc); //saves synced src as a file\n\n    const fileData = JSON.stringify(newSrc);\n    const blob = new Blob([fileData], {\n      type: \"text/plain\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.download = `${name}.json`;\n    link.href = url;\n    link.click();\n  };\n\n  const handleClose = e => {\n    e.preventDefault();\n    setToggle(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center\",\n    onSubmit: handleSave,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"right\",\n      onClick: handleClose,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"File Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Save Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExportDataForm, \"VU5rOiGlclLN+g/78aA95Hfi8S0=\");\n\n_c = ExportDataForm;\nexport default ExportDataForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExportDataForm\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/ExportDataForm.js"],"names":["React","useState","ExportDataForm","src","setSrc","zones","scales","data","activeData","setToggle","fileName","name","setName","handleSave","e","preventDefault","newSrc","instants","fileData","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","download","href","click","handleClose","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA;AACA;AACA;;;;AAEA,SAASC,cAAT,CAAwB;AAACC,EAAAA,GAAD;AAAMC,EAAAA,MAAN;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,MAArB;AAA6BC,EAAAA,IAA7B;AAAmCC,EAAAA,UAAnC;AAA+CC,EAAAA,SAA/C;AAA0DC,EAAAA;AAA1D,CAAxB,EAA6F;AAAA;;AAC3F,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACS,QAAD,CAAhC;;AAEA,QAAMG,UAAU,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF,GADwB,CAExB;;AACA,UAAMC,MAAM,GAAG,EAAC,GAAGb;AAAJ,KAAf;AACAa,IAAAA,MAAM,CAACC,QAAP,CAAgBT,UAAhB,IAA8BD,IAA9B,CAJwB,CAIY;;AACpCS,IAAAA,MAAM,CAACX,KAAP,GAAeA,KAAf;AACAW,IAAAA,MAAM,CAACV,MAAP,GAAgBA,MAAhB;AACAF,IAAAA,MAAM,CAACY,MAAD,CAAN,CAPwB,CASxB;;AACA,UAAME,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAjB;AACA,UAAMK,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACJ,QAAD,CAAT,EAAqB;AAACK,MAAAA,IAAI,EAAE;AAAP,KAArB,CAAb;AACA,UAAMC,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAZ;AACA,UAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAF,IAAAA,IAAI,CAACG,QAAL,GAAiB,GAAEnB,IAAK,OAAxB;AACAgB,IAAAA,IAAI,CAACI,IAAL,GAAYP,GAAZ;AACAG,IAAAA,IAAI,CAACK,KAAL;AACD,GAjBD;;AAmBA,QAAMC,WAAW,GAAInB,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,SAAS,CAAC,IAAD,CAAT;AAED,GAJD;;AAMA,sBACE;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAqC,IAAA,QAAQ,EAAEI,UAA/C;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,OAAlB;AAA0B,MAAA,OAAO,EAAEoB,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAC4D;AAAA;AAAA;AAAA;AAAA,YAD5D,eAEE;AAAA,4CACY;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADZ,oBAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEtB,IAFT;AAGE,QAAA,QAAQ,EAAGG,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACoB,MAAF,CAASC,KAAV,CAH1B;AAIE,QAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAUU;AAAA;AAAA;AAAA;AAAA,YAVV,eAUe;AAAA;AAAA;AAAA;AAAA,YAVf,eAWE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA3CQjC,c;;KAAAA,c;AA6CT,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react';\n\n/*\n  For saving and downloading JSON data onto computer.\n*/\n\nfunction ExportDataForm({src, setSrc, zones, scales, data, activeData, setToggle, fileName}) {\n  const [name, setName] = useState(fileName);\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    //syncs changes in nodes data with src\n    const newSrc = {...src};\n    newSrc.instants[activeData] = data; //TODO: update src every time change activeData\n    newSrc.zones = zones;\n    newSrc.scales = scales;\n    setSrc(newSrc);\n    \n    //saves synced src as a file\n    const fileData = JSON.stringify(newSrc);\n    const blob = new Blob([fileData], {type: \"text/plain\"});\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.download = `${name}.json`;\n    link.href = url;\n    link.click();\n  };\n\n  const handleClose = (e) => {\n    e.preventDefault();\n    setToggle(null);\n\n  }\n\n  return (\n    <form className=\"ui absolute center\" onSubmit={handleSave}>\n      <button className=\"right\" onClick={handleClose}>x</button><br/>\n      <label>\n        File Name <span className=\"redText\">* </span>:\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n        />\n      </label><br/><br/>\n      <input type=\"submit\" value=\"Save Data\"/>\n    </form>\n  );\n}\n\nexport default ExportDataForm;\n"]},"metadata":{},"sourceType":"module"}