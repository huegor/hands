{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewPointForm.js\";\nimport React from 'react';\n/*\n   UI and function for adding new points.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass NewPointForm extends React.Component {\n  //controlled component, meaning React is the \"single source of truth\"\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: '',\n      xValue: '',\n      yValue: '',\n      color: '',\n      opacity: '',\n      radius: '',\n      endPoint: false,\n      targets: '',\n      lineColor: '',\n      lineWidth: '',\n      lineOpacity: '',\n      lineDashed: '',\n      lineColorB: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    //if it's a checkbox, evaluate if checked. otherwise, evaluate the value\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n    ;\n    const name = e.target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleClose(e) {\n    this.props.setToggle(null);\n    e.preventDefault();\n  }\n\n  handleSubmit(e) {\n    //consider turning into useCallback\n    e.preventDefault();\n    const nodes = this.props.data;\n    const tempx = parseFloat(e.target.xValue.value); //if y pos specified, convert to float. otherwise, return null\n\n    const tempy = e.target.yValue.value ? parseFloat(e.target.yValue.value) : null; //error handling. btw, isNan(null) === false\n\n    if (isNaN(tempx) && isNaN(tempy)) {\n      alert(\"Make sure Time and y Position are numbers!\");\n    } else if (isNaN(tempx)) {\n      alert(\"Make sure Time is a number!\");\n    } else if (isNaN(tempy)) {\n      alert(\"Make sure y Position is a number!\");\n    } else {\n      //generate node\n      const node = {\n        \"id\": nodes.length ? nodes[nodes.length - 1].id + 1 : 0,\n        //id = id of last node + 1. if first node, id = 0\n        \"name\": e.target.label.value,\n        \"x\": tempx,\n        \"y\": e.target.yValue.value ? tempy : nodes[nodes.length - 1] ? nodes[nodes.length - 1].y : 0,\n        // if y not specified, take value of last point\n        \"target\": () => {\n          if (this.state.endPoint) {\n            return null;\n          } else if (!nodes.length) {\n            return 1;\n          } else if (e.target.targets.value.length > 1) {\n            return e.target.targets.value.split(',').map(Number);\n          } else {\n            return [nodes[nodes.length - 1].id + 2];\n          }\n        },\n        ...(e.target.color.value && {\n          \"color\": e.target.color.value\n        }),\n        //if color is specified, create color entry in data\n        ...(e.target.radius.value && {\n          \"radius\": e.target.radius.value\n        }),\n        ...(e.target.opacity.value && {\n          \"opacity\": e.target.opacity.value\n        }) // ...(\n        //     this.state.endPoint ? //if endpoint, set target to null\n        //     {\"target\": null}\n        //     : e.target.targets.value.length > 1 ? //if multiple targets specified, turn IDs into array\n        //     {\"target\": e.target.targets.value.split(',').map(Number)}\n        //     : {\"target\": [nodes[nodes.length-1].id + 2]}\n        //   )\n\n      };\n\n      const newNodes = () => {\n        if (nodes.length && nodes[nodes.length - 1].target) {\n          const newNodesLinked = nodes.map(n => {\n            //if linked, set target of last node to ID of new node and set line properties\n            if (n === nodes[nodes.length - 1]) {\n              return { ...n,\n                ...(e.target.lineColor.value && {\n                  \"lineColor\": e.target.lineColor.value\n                }),\n                ...(e.target.lineWidth.value && {\n                  \"lineWidth\": e.target.lineWidth.value\n                }),\n                ...(e.target.lineOpacity.value && {\n                  \"lineOpacity\": e.target.lineOpacity.value\n                }),\n                ...(e.target.lineDashed.value && {\n                  \"lineDashed\": e.target.lineDashed.value\n                })\n              };\n            } else {\n              //leave other nodes as is\n              return n;\n            }\n          }); //then, return updated nodes plus new node\n\n          return [...newNodesLinked, node];\n        } else {\n          //if not linked, return orignal nodes with just new node added\n          return [...nodes, node];\n        }\n      }; // const newSrc = Object.assign({}, this.props.src, {nodes: newNodes()});\n\n\n      this.props.setData(newNodes);\n    }\n\n    console.log(props.data);\n    this.props.setToggle(null);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui absolute center\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"right\",\n        onClick: this.handleClose,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 72\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Label\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red\",\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"label\",\n          placeholder: \"any unicode characters\",\n          value: this.state.label,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Time\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red\",\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"xValue\",\n          placeholder: \"numbers only\",\n          value: this.state.xValue,\n          onChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"y Position\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"yValue\",\n          placeholder: \"numbers only\",\n          value: this.state.yValue,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Color\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"color\",\n          placeholder: \"blue, #4DA6FF, etc.\",\n          value: this.state.color,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Opacity\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"opacity\",\n          placeholder: \"5\",\n          value: this.state.opacity,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Radius\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"radius\",\n          placeholder: \"5\",\n          value: this.state.radius,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End point?\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"endPoint\",\n          checked: this.state.endPoint,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), !this.state.endPoint && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Target(s)\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"targets\",\n            placeholder: \"point IDs ie: 4, 5\",\n            value: this.state.targets,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Line Color\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lineColor\",\n            placeholder: \"blue, #4DA6FF, etc.\",\n            value: this.state.lineColor,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Line Width\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"lineWidth\",\n            placeholder: \"1.67\",\n            value: this.state.lineWidth,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Line Opacity\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"lineOpacity\",\n            placeholder: \"1\",\n            value: this.state.lineOpacity,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Line Dashed\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lineDashed\",\n            placeholder: \"i.e: 5\",\n            value: this.state.lineDashed,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Line Color B\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lineColorB\",\n            placeholder: \"blue, #4DA6FF, etc.\",\n            value: this.state.lineColorB,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default NewPointForm;","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewPointForm.js"],"names":["React","NewPointForm","Component","constructor","props","state","label","xValue","yValue","color","opacity","radius","endPoint","targets","lineColor","lineWidth","lineOpacity","lineDashed","lineColorB","handleChange","bind","handleClose","handleSubmit","e","value","target","type","checked","name","setState","setToggle","preventDefault","nodes","data","tempx","parseFloat","tempy","isNaN","alert","node","length","id","y","split","map","Number","newNodes","newNodesLinked","n","setData","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\n/*\n   UI and function for adding new points.\n*/\n\nclass NewPointForm extends React.Component {\n  //controlled component, meaning React is the \"single source of truth\"\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: '',\n      xValue: '',\n      yValue: '',\n      color: '',\n      opacity: '',\n      radius: '',\n      endPoint: false,\n      targets: '',\n      lineColor: '',\n      lineWidth: '',\n      lineOpacity: '',\n      lineDashed: '',\n      lineColorB: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    //if it's a checkbox, evaluate if checked. otherwise, evaluate the value\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;;\n    const name = e.target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleClose(e) {\n    this.props.setToggle(null);\n    e.preventDefault();\n  }\n\n  handleSubmit(e) { //consider turning into useCallback\n    e.preventDefault();\n    const nodes = this.props.data;\n\n    const tempx = parseFloat(e.target.xValue.value);\n    //if y pos specified, convert to float. otherwise, return null\n    const tempy = e.target.yValue.value ? parseFloat(e.target.yValue.value) : null;\n\n    //error handling. btw, isNan(null) === false\n    if (isNaN(tempx) && isNaN(tempy)) {\n      alert(\"Make sure Time and y Position are numbers!\");\n    } else if (isNaN(tempx)) {\n      alert(\"Make sure Time is a number!\");\n    } else if (isNaN(tempy)) {\n      alert(\"Make sure y Position is a number!\");\n    } else {\n      //generate node\n      const node = {\n        \"id\": nodes.length ? nodes[nodes.length-1].id + 1 : 0, //id = id of last node + 1. if first node, id = 0\n        \"name\": e.target.label.value,\n        \"x\":tempx,\n        \"y\": e.target.yValue.value ? tempy : nodes[nodes.length-1]? nodes[nodes.length-1].y : 0, // if y not specified, take value of last point\n        \"target\": (() => {\n          if (this.state.endPoint) {\n            return null;\n          } else if (!nodes.length) {\n            return 1;\n          } else if (e.target.targets.value.length > 1) {\n            return e.target.targets.value.split(',').map(Number);\n          } else {\n            return [nodes[nodes.length-1].id + 2];\n          }\n        }),\n        ...(e.target.color.value && {\"color\": e.target.color.value}), //if color is specified, create color entry in data\n        ...(e.target.radius.value && {\"radius\": e.target.radius.value}),\n        ...(e.target.opacity.value && {\"opacity\": e.target.opacity.value}),\n        // ...(\n        //     this.state.endPoint ? //if endpoint, set target to null\n        //     {\"target\": null}\n        //     : e.target.targets.value.length > 1 ? //if multiple targets specified, turn IDs into array\n        //     {\"target\": e.target.targets.value.split(',').map(Number)}\n        //     : {\"target\": [nodes[nodes.length-1].id + 2]}\n        //   )\n      };\n      const newNodes = () => {\n        if (nodes.length && nodes[nodes.length-1].target) {\n          const newNodesLinked = nodes.map(n =>\n            {\n              //if linked, set target of last node to ID of new node and set line properties\n              if (n === nodes[nodes.length-1]) {\n                return (\n                  {\n                    ...n,\n                    ...(e.target.lineColor.value && {\"lineColor\": e.target.lineColor.value}),\n                    ...(e.target.lineWidth.value && {\"lineWidth\": e.target.lineWidth.value}),\n                    ...(e.target.lineOpacity.value && {\"lineOpacity\": e.target.lineOpacity.value}),\n                    ...(e.target.lineDashed.value && {\"lineDashed\": e.target.lineDashed.value})\n                  }\n                )\n              } else { //leave other nodes as is\n                return n;\n              }\n            }\n          );\n          //then, return updated nodes plus new node\n          return([...newNodesLinked, node]);\n        } else {\n          //if not linked, return orignal nodes with just new node added\n          return ([...nodes, node]);\n        }\n      };\n      // const newSrc = Object.assign({}, this.props.src, {nodes: newNodes()});\n      this.props.setData(newNodes);\n    }\n    console.log(props.data);\n    this.props.setToggle(null);\n\n  }\n\n  render() {\n    return (\n      <form className=\"ui absolute center\" onSubmit={this.handleSubmit}>\n        <button className=\"right\" onClick={this.handleClose}>x</button><br/>\n        <label>\n          Label<span className=\"red\">* </span>\n          <input type=\"text\"\n            name=\"label\"\n            placeholder=\"any unicode characters\"\n            value={this.state.label}\n            onChange={this.handleChange}\n            required\n          />\n        </label><br/>\n        <label>\n          Time<span className=\"red\">* </span>\n          <input\n            type=\"number\"\n            name=\"xValue\"\n            placeholder=\"numbers only\"\n            value={this.state.xValue}\n            onChange={this.handleChange}\n            required\n          />\n        </label><br/>\n        <label>\n          y Position\n          <input\n            type=\"number\"\n            name=\"yValue\"\n            placeholder=\"numbers only\"\n            value={this.state.yValue}\n            onChange={this.handleChange}\n          />\n        </label><br/>\n        <label>\n          Color\n          <input\n            type=\"text\"\n            name=\"color\"\n            placeholder=\"blue, #4DA6FF, etc.\"\n            value={this.state.color}\n            onChange={this.handleChange}\n          />\n        </label><br/>\n        <label>\n          Opacity\n          <input\n            type=\"number\"\n            name=\"opacity\"\n            placeholder=\"5\"\n            value={this.state.opacity}\n            onChange={this.handleChange}\n          />\n        </label><br/>\n        <label>\n          Radius\n          <input\n            type=\"number\"\n            name=\"radius\"\n            placeholder=\"5\"\n            value={this.state.radius}\n            onChange={this.handleChange}\n          />\n        </label><br/>\n        <label>\n          End point?\n          <input\n            type=\"checkbox\"\n            name=\"endPoint\"\n            checked={this.state.endPoint}\n            onChange={this.handleChange}\n          />\n        </label><br/>\n        {!this.state.endPoint &&\n          <>\n            <label>\n              Target(s)\n              <input\n                type=\"text\"\n                name=\"targets\"\n                placeholder=\"point IDs ie: 4, 5\"\n                value={this.state.targets}\n                onChange={this.handleChange}\n              />\n            </label><br/>\n            <label>\n              Line Color\n              <input\n                type=\"text\"\n                name=\"lineColor\"\n                placeholder=\"blue, #4DA6FF, etc.\"\n                value={this.state.lineColor}\n                onChange={this.handleChange}\n              />\n            </label><br/>\n            <label>\n              Line Width\n              <input\n                type=\"number\"\n                name=\"lineWidth\"\n                placeholder=\"1.67\"\n                value={this.state.lineWidth}\n                onChange={this.handleChange}\n              />\n            </label><br/>\n            <label>\n              Line Opacity\n              <input\n                type=\"number\"\n                name=\"lineOpacity\"\n                placeholder=\"1\"\n                value={this.state.lineOpacity}\n                onChange={this.handleChange}\n              />\n            </label><br/>\n            <label>\n              Line Dashed\n              <input\n                type=\"text\"\n                name=\"lineDashed\"\n                placeholder=\"i.e: 5\"\n                value={this.state.lineDashed}\n                onChange={this.handleChange}\n              />\n            </label><br/>\n            <label>\n              Line Color B\n              <input\n                type=\"text\"\n                name=\"lineColorB\"\n                placeholder=\"blue, #4DA6FF, etc.\"\n                value={this.state.lineColorB}\n                onChange={this.handleChange}\n              />\n            </label><br/>\n          </>\n        }\n        <br/>\n        <input type=\"submit\" value=\"Submit\"/>\n      </form>\n    );\n  }\n};\n\nexport default NewPointForm;\n"]},"metadata":{},"sourceType":"module"}