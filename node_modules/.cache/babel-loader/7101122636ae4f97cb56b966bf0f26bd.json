{"ast":null,"code":"import HandsFree from '@mediapipe/hands'; //https://handsfree.js.org/ref/model/hands.html\n// function onResults(results) {\n//   canvasCtx.save();\n//   canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n//   canvasCtx.drawImage(\n//       results.image, 0, 0, canvasElement.width, canvasElement.height);\n//   if (results.multiHandLandmarks) {\n//     for (const landmarks of results.multiHandLandmarks) {\n//       drawConnectors(canvasCtx, landmarks, HAND_CONNECTIONS,\n//                      {color: '#00FF00', lineWidth: 5});\n//       drawLandmarks(canvasCtx, landmarks, {color: '#FF0000', lineWidth: 2});\n//     }\n//   }\n//   canvasCtx.restore();\n// }\n\nfunction Hands(props) {\n  const videoElement = document.getElementsByClassName('input_video')[0];\n  const canvasElement = document.getElementsByClassName('output_canvas')[0];\n  const canvasCtx = canvasElement.getContext('2d');\n  const hands = new HandsFree();\n  hands.setOptions({\n    maxNumHands: 2\n  });\n  console.log(hands); // hands.start();\n  // console.log(hands.data.landmarks);\n  //\n  // return (\n  //   <button onClick={(e) => props.setEnabled(true)}>\n  //     enable hands\n  //   </button>\n  // )\n}\n\n_c = Hands;\n;\nexport default Hands;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hands\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Hands.js"],"names":["HandsFree","Hands","props","videoElement","document","getElementsByClassName","canvasElement","canvasCtx","getContext","hands","setOptions","maxNumHands","console","log"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,QAAMC,YAAY,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,EAA+C,CAA/C,CAArB;AACA,QAAMC,aAAa,GAAGF,QAAQ,CAACC,sBAAT,CAAgC,eAAhC,EAAiD,CAAjD,CAAtB;AACA,QAAME,SAAS,GAAGD,aAAa,CAACE,UAAd,CAAyB,IAAzB,CAAlB;AAEA,QAAMC,KAAK,GAAG,IAAIT,SAAJ,EAAd;AAEAS,EAAAA,KAAK,CAACC,UAAN,CAAiB;AACfC,IAAAA,WAAW,EAAE;AADE,GAAjB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAVoB,CAWpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED;;KApBQR,K;AAoBR;AAED,eAAeA,KAAf","sourcesContent":["import HandsFree from '@mediapipe/hands';\n\n//https://handsfree.js.org/ref/model/hands.html\n// function onResults(results) {\n//   canvasCtx.save();\n//   canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n//   canvasCtx.drawImage(\n//       results.image, 0, 0, canvasElement.width, canvasElement.height);\n//   if (results.multiHandLandmarks) {\n//     for (const landmarks of results.multiHandLandmarks) {\n//       drawConnectors(canvasCtx, landmarks, HAND_CONNECTIONS,\n//                      {color: '#00FF00', lineWidth: 5});\n//       drawLandmarks(canvasCtx, landmarks, {color: '#FF0000', lineWidth: 2});\n//     }\n//   }\n//   canvasCtx.restore();\n// }\n\nfunction Hands(props) {\n  const videoElement = document.getElementsByClassName('input_video')[0];\n  const canvasElement = document.getElementsByClassName('output_canvas')[0];\n  const canvasCtx = canvasElement.getContext('2d');\n\n  const hands = new HandsFree();\n\n  hands.setOptions({\n    maxNumHands: 2\n  });\n  console.log(hands);\n  // hands.start();\n  // console.log(hands.data.landmarks);\n  //\n  // return (\n  //   <button onClick={(e) => props.setEnabled(true)}>\n  //     enable hands\n  //   </button>\n  // )\n\n};\n\nexport default Hands;\n"]},"metadata":{},"sourceType":"module"}