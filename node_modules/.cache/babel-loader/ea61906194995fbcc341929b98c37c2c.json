{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewIntervalForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n/*\n   UI for adding new intervals.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewIntervalForm({\n  data,\n  setData,\n  setToggle\n}) {\n  _s();\n\n  const [label, setLabel] = useState(\"\");\n\n  const handleChange = e => {\n    //if it's a checkbox, evaluate if checked. otherwise, evaluate the value\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n    const name = e.target.name; // console.log(value);\n    // setLabel(value);\n\n    this[\"set\" + name](value); // setValue({\n    //   [name]: value\n    // });\n  };\n\n  const handleSubmit = e => {\n    //generate new interval\n    e.preventDefault();\n  };\n\n  const handleClose = e => {\n    setToggle(null);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"right\",\n      onClick: handleClose,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Label\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"red\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Label\",\n        placeholder: \"any unicode characters\",\n        value: label,\n        onChange: e => setFileName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewIntervalForm, \"DHw7kQJPu1+BXvhu2Zs+N/R7U4k=\");\n\n_c = NewIntervalForm;\n;\nexport default NewIntervalForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewIntervalForm\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewIntervalForm.js"],"names":["React","useState","NewIntervalForm","data","setData","setToggle","label","setLabel","handleChange","e","value","target","type","checked","name","handleSubmit","preventDefault","handleClose","setFileName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA;AACA;AACA;;;;AAEA,SAASC,eAAT,CAAyB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAzB,EAAqD;AAAA;;AACnD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1B;AACA,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,IAAT,KAAkB,UAAlB,GAA+BH,CAAC,CAACE,MAAF,CAASE,OAAxC,GAAkDJ,CAAC,CAACE,MAAF,CAASD,KAAzE;AACA,UAAMI,IAAI,GAAGL,CAAC,CAACE,MAAF,CAASG,IAAtB,CAH0B,CAI1B;AACA;;AACA,SAAK,QAAMA,IAAX,EAAiBJ,KAAjB,EAN0B,CAQ1B;AACA;AACA;AACD,GAXD;;AAaA,QAAMK,YAAY,GAAIN,CAAD,IAAO;AAC1B;AAEAA,IAAAA,CAAC,CAACO,cAAF;AACD,GAJD;;AAMA,QAAMC,WAAW,GAAIR,CAAD,IAAO;AACzBJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAI,IAAAA,CAAC,CAACO,cAAF;AACD,GAHD;;AAKA,sBACE;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAqC,IAAA,QAAQ,EAAED,YAA/C;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,OAAlB;AAA0B,MAAA,OAAO,EAAEE,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAC4D;AAAA;AAAA;AAAA;AAAA,YAD5D,eAEE;AAAA,uCACO;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADP,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,WAAW,EAAC,wBAFd;AAGE,QAAA,KAAK,EAAEX,KAHT;AAIE,QAAA,QAAQ,EAAGG,CAAD,IAAOS,WAAW,CAACT,CAAC,CAACE,MAAF,CAASD,KAAV,CAJ9B;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAWU;AAAA;AAAA;AAAA;AAAA,YAXV,eAYE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA3CQR,e;;KAAAA,e;AA2CR;AAED,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\n\n/*\n   UI for adding new intervals.\n*/\n\nfunction NewIntervalForm({data, setData, setToggle}) {\n  const [label, setLabel] = useState(\"\");\n\n  const handleChange = (e) => {\n    //if it's a checkbox, evaluate if checked. otherwise, evaluate the value\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n    const name = e.target.name;\n    // console.log(value);\n    // setLabel(value);\n    this[\"set\"+name](value);\n\n    // setValue({\n    //   [name]: value\n    // });\n  }\n\n  const handleSubmit = (e) => {\n    //generate new interval\n\n    e.preventDefault();\n  };\n\n  const handleClose = (e) => {\n    setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"ui absolute center\" onSubmit={handleSubmit}>\n      <button className=\"right\" onClick={handleClose}>x</button><br/>\n      <label>\n        Label<span className=\"red\">* </span>\n        <input type=\"text\"\n          name=\"Label\"\n          placeholder=\"any unicode characters\"\n          value={label}\n          onChange={(e) => setFileName(e.target.value)}\n          required\n        />\n      </label><br/>\n      <input type=\"submit\" value=\"Submit\"/>\n    </form>\n  )\n};\n\nexport default NewIntervalForm;\n"]},"metadata":{},"sourceType":"module"}