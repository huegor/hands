{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Graphic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { select, scaleLinear, scaleOrdinal, axisBottom, linkHorizontal, format, drag, zoom, min, max, symbol, symbols } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport generateLinks from \"./generateLinks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Graphic({\n  data,\n  setData,\n  activeLayer,\n  intervals,\n  setIntervals,\n  radius,\n  info,\n  setInfo,\n  showLabel,\n  toggle\n}) {\n  _s();\n\n  //all data is passed down from and synced to App.js\n  const activeData = activeLayer ? data.filter(d => d.layer === activeLayer) : data; //is logical operators active?\n\n  const logic = isNaN(data[0].x); //Todo\n  //initialize reference object to pass to svg in React Dom\n\n  const svgRef = useRef(); //svg wrapped in div bc otherwise resize observer callback won't work\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState(); //initialize links between nodes\n\n  const links = generateLinks(activeData); //initialize bottom axis label\n\n  const [axisLabel, setAxisLabel] = useState(\"Years (AD)\"); //all d3 shennanigans goes in this hook. called initially and on every data change\n\n  useEffect(() => {\n    const svg = select(svgRef.current); //\"svg\" is the current version of svgRef data\n    //prevents crashing when useResizeObserver returns null before svg is rendered\n\n    if (!dimensions) return; //---scales---//\n    //if time matches logical operator keyword, translate into index values, then map\n\n    const logicScale = scaleOrdinal([\"before\", \"now\", \"after\"], [-1, 0, 1]).unknown(0);\n    const breakpoint = 5; //for multiple scales, generate a new xScale for each x/y min - x/y max\n\n    const xMin = min(data.map(({\n      x\n    }) => logic ? logicScale(x) : x));\n    const xMax = max(data.map(({\n      x\n    }) => logic ? logicScale(x) : x));\n    const yMin = min(data.map(({\n      y\n    }) => y));\n    const yMax = max(data.map(({\n      y\n    }) => y));\n    const rangeX = xMax - xMin; //0 is minX, 1 is maxX (reference findMinMax)\n\n    const rangeY = yMax - yMin; //TODO: scaleTime()\n    //scales values to screen pixels\n\n    function generateScales() {\n      const x = scaleLinear().domain([xMin, xMax]) //scaleLinear takes domain (data values) & maps onto range (screen pixel values)\n      .range([0, dimensions.width]);\n      const y = scaleLinear() //if difference in y vaules greater than 5, resize to min and max\n      .domain(rangeY > breakpoint ? [yMin, yMax] : [yMin - breakpoint, yMax + breakpoint]).range([0, dimensions.height]);\n      const xInverse = scaleLinear().domain([-dimensions.width, dimensions.width]).range([-rangeX, rangeX]); //maxRangeX-minRangeX gives section of x values displayed onscreen\n\n      const yInverse = scaleLinear().domain([-dimensions.height, dimensions.height]).range(rangeY > breakpoint ? [-rangeY, rangeY] : [-breakpoint * 5, breakpoint * 5]);\n      return {\n        x,\n        y,\n        xInverse,\n        yInverse\n      };\n    }\n\n    const xScale = scaleLinear().domain([xMin, xMax]) //scaleLinear takes domain (data values) & maps onto range (screen pixel values)\n    .range([0, dimensions.width]);\n    const yScale = scaleLinear() //if difference in y vaules greater than 5, resize to min and max\n    .domain(rangeY > breakpoint ? [yMin, yMax] : [yMin - breakpoint, yMax + breakpoint]).range([0, dimensions.height]); //inverse scales for drag behavior\n\n    const xScaleInverse = scaleLinear().domain([-dimensions.width, dimensions.width]).range([-rangeX, rangeX]); //maxRangeX-minRangeX gives section of x values displayed onscreen\n\n    const yScaleInverse = scaleLinear().domain([-dimensions.height, dimensions.height]).range(rangeY > breakpoint ? [-rangeY, rangeY] : [-breakpoint * 5, breakpoint * 5]);\n\n    if (currentZoomState) {\n      const newXScale = currentZoomState.rescaleX(xScale); //zoom state comes w methods for transformations\n\n      xScale.domain(newXScale.domain());\n      xScaleInverse.range([-(newXScale.domain()[1] - newXScale.domain()[0]), newXScale.domain()[1] - newXScale.domain()[0]]);\n    }\n\n    ; //---draw intervals---//\n\n    if (intervals.length) {\n      svg.selectAll(\".intervals\").data(intervals).join(\"rect\").attr(\"class\", \"intervals\").attr(\"x\", n => xScale(n.start)) // .attr(\"y\", n => n.yStart ? yScale(n.yStart) : yScale(minMax[2]))\n      .attr(\"y\", n => n.yStart ? yScale(n.yStart) : 0) //todo\n      .attr(\"width\", n => xScale(n.end) - xScale(n.start)).attr(\"height\", n => {\n        if (n.yStart & n.yEnd) {\n          return yScale(n.yEnd) - yScale(n.yStart);\n        } else if (n.yStart) {\n          return yScale(yMax + 10) - yScale(n.yStart);\n        } else {\n          return yScale(yMax + 10); //todo\n          // return (yScale(minMax[3])-yScale(minMax[2]))\n        }\n      }).attr(\"opacity\", d => d.opacity ? d.opacity : 0.5).attr(\"fill\", d => d.color ? d.color : \"#999\").on(\"click\", (e, target) => {\n        //displays line properties when clicked\n        setInfo({\n          position: [e.x, e.y],\n          target: target,\n          type: \"interval\"\n        }); //todo: set info to null when clicking again\n\n        e.stopPropagation();\n      });\n    } //---draw bottom axis---//\n\n\n    const xAxis = axisBottom(generateScales().x) // .tickSize(-dimensions.height) //tick extends to entire height of svg\n    .tickValues(logic ? [-1, 0, 1] : null).tickFormat(logic ? x => scaleOrdinal([-1, 0, 1], [\"before\", \"now\", \"after\"])(x) : format('')); //gets rid of , for 1000s groupings\n\n    svg.select(\".x-axis\") //selects and replaces .x-axis\n    .style(\"transform\", `translateY(${dimensions.height}px)`).call(xAxis).raise().call(g => g.select(\".domain\") //removes solid black axis bar\n    .remove()).call(g => g.selectAll(\".tick line\") //styles individual ticks\n    .attr(\"stroke-opacity\", 0.5)) // .attr(\"stroke-dasharray\", \"2,2\"))\n    .call(g => g.selectAll(\".tick text\").attr(\"y\", 10) //todo?\n    .attr(\"opacity\", 0.5)); // .attr(\"font-size\", fontSize*.8)); //replace class \"x-axis\" w xAxis\n    //\n    // //TODO: enter & exit\n    // svg\n    //   // .selectAll(\".axislabel\")\n    //   // .data([1])\n    //   // .join(\"text\")\n    //   .enter().append(\"text\")\n    //   .text(axisLabel)\n    //   .attr(\"class\", \"axisLabel smallTxt\")\n    //   .attr(\"x\", dimensions.width/2)\n    //   .attr(\"y\", dimensions.height*1.08)\n    //   .attr(\"text-anchor\", \"middle\")\n    //   .attr(\"opacity\", 0.5)\n    //   .exit().remove();\n    //--drag behavior--//\n\n    const dragged = drag() // .on(\"start\", e => {\n    //   select(this).attr(\"stroke\", \"black\");\n    // })\n    .on(\"drag\", e => {\n      //todo\n      const dx = Math.round(xScaleInverse(e.dx) * 100) / 100;\n      const dy = Math.round(yScaleInverse(e.dy) * 100) / 100;\n      const newNodes = [...data]; //always make a copy when updating array\n      //find array element in data with matching ID and set new x y coordinates\n\n      newNodes.find(n => n.id === e.subject.id).x += dx;\n      newNodes.find(n => n.id === e.subject.id).y += dy;\n      setData(newNodes);\n    }); //---draw links---//\n\n    const linker = linkHorizontal().source(link => link.source).target(link => link.target).x(node => xScale(logic ? logicScale(node.x) : node.x)).y(node => yScale(node.y));\n    svg.selectAll(\".link\").data(links).join(\"path\").raise().attr(\"class\", \"link pointer\").attr(\"d\", linker).attr(\"fill\", \"none\").attr(\"stroke\", n => n.color ? n.color : \"black\").attr(\"stroke-width\", n => n.width ? n.width : radius / 3).attr(\"stroke-opacity\", n => n.opacity ? n.opacity : 1).attr(\"stroke-dasharray\", n => n.dashed ? n.dashed : null).on(\"click\", (e, target) => {\n      setInfo({\n        position: [e.x, e.y],\n        target: target,\n        type: \"link\"\n      }); //displays line properties when clicked\n\n      e.stopPropagation();\n    }); //---draw points---//\n\n    svg.selectAll(\".node\").data(activeData.filter(d => d.inflectionSemantic !== \"cancelled\")).join(\"circle\").raise().attr(\"class\", \"node pointer\").attr(\"r\", n => n.radius ? n.radius : radius) //todo for accessibility\n    .attr(\"fill\", d => d.color ? d.color : \"black\") //if it has a color other than black, use that\n    .attr(\"opacity\", d => d.opacity ? d.opacity : 1).attr(\"cx\", d => xScale(logic ? logicScale(d.x) : d.x)).attr(\"cy\", d => yScale(d.y)).call(dragged).on(\"click\", (e, target) => {\n      if (toggle === \"cancelled\") {\n        const newNodes = [...data];\n        const node = newNodes.find(n => n.id === target.id);\n        node.inflectionSemantic = \"cancelled\";\n        setData(newNodes);\n      } else {\n        setInfo({\n          position: [e.x, e.y],\n          target: target\n        }); //displays node properties when clicked\n      }\n\n      e.stopPropagation(); //stops deselect when bg is clicked\n    }); //---initialize custom symbols---//\n\n    const cancelledSymbol = {\n      draw: (context, size) => {\n        let s = Math.sqrt(size) / 2;\n        context.moveTo(s, 0);\n        context.lineTo(s * 2, s);\n        context.lineTo(s, s * 2);\n        context.lineTo(0, s);\n        context.lineTo(-s, s * 2);\n        context.lineTo(-s * 2, s);\n        context.lineTo(-s, 0);\n        context.lineTo(-s * 2, -s);\n        context.lineTo(-s, -s * 2);\n        context.lineTo(0, -s);\n        context.lineTo(s, -s * 2);\n        context.lineTo(s * 2, -s);\n        context.closePath();\n      }\n    }; //---draw symbols---//\n\n    svg.selectAll(\".cancelled\").data(activeData.filter(d => d.inflectionSemantic === \"cancelled\")).join(\"path\").raise().attr(\"class\", \"cancelled pointer\").attr(\"d\", symbol(cancelledSymbol, radius * radius * 5)).attr(\"transform\", n => `translate(${xScale(n.x)}, ${yScale(n.y)})`).on(\"click\", (e, target) => {\n      if (toggle === \"cancelled\") {\n        const newNodes = [...data];\n        const node = newNodes.find(n => n.id === target.id);\n        delete node.inflectionSemantic;\n        setData(newNodes);\n      } else {\n        setInfo({\n          position: [e.x, e.y],\n          target: target\n        }); //displays node properties when clicked\n      }\n\n      e.stopPropagation();\n    }); // .attr(\"transform\", \"rotate(90)\");\n    //---draw labels---//\n\n    svg.selectAll(\".label\").data(activeData).join(\"text\").raise().attr(\"class\", \"label\").text(node => showLabel ? node.name : node.id).attr(\"x\", node => xScale(logic ? logicScale(node.x) : node.x)).attr(\"y\", node => yScale(node.y + (rangeY > breakpoint ? rangeY * .06 : breakpoint / 5))) //vertical offset. see scales\n    .attr(\"text-anchor\", \"middle\"); // .attr(\"font-size\", fontSize);\n    //---zoom---//\n\n    const zoomBehavior = zoom().scaleExtent([0.25, 5]) //can zoom 2x smaller and 5x bigger\n    .translateExtent([[-100, 0], [dimensions.width + 100, dimensions.height]]) //limits how far graph can pan\n    .on(\"zoom\", e => {\n      const zoomState = e.transform; //returns zoom transformations as an object\n\n      setCurrentZoomState(zoomState);\n    });\n    svg.on(\"click\", () => setInfo(null));\n    svg.call(zoomBehavior);\n  }, [data, setData, intervals, activeLayer, activeData, dimensions, links, logic, currentZoomState, setInfo, radius, showLabel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapperRef,\n    className: \"svgWrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"graphic\",\n      ref: svgRef,\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"cancelled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"x-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Graphic, \"uoSQK9BPMmsdVoeMdL/E+s194Mk=\", false, function () {\n  return [useResizeObserver];\n});\n\n_c = Graphic;\n;\nexport default Graphic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graphic\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Graphic.js"],"names":["React","useState","useEffect","useRef","select","scaleLinear","scaleOrdinal","axisBottom","linkHorizontal","format","drag","zoom","min","max","symbol","symbols","useResizeObserver","generateLinks","Graphic","data","setData","activeLayer","intervals","setIntervals","radius","info","setInfo","showLabel","toggle","activeData","filter","d","layer","logic","isNaN","x","svgRef","wrapperRef","dimensions","currentZoomState","setCurrentZoomState","links","axisLabel","setAxisLabel","svg","current","logicScale","unknown","breakpoint","xMin","map","xMax","yMin","y","yMax","rangeX","rangeY","generateScales","domain","range","width","height","xInverse","yInverse","xScale","yScale","xScaleInverse","yScaleInverse","newXScale","rescaleX","length","selectAll","join","attr","n","start","yStart","end","yEnd","opacity","color","on","e","target","position","type","stopPropagation","xAxis","tickValues","tickFormat","style","call","raise","g","remove","dragged","dx","Math","round","dy","newNodes","find","id","subject","linker","source","link","node","dashed","inflectionSemantic","cancelledSymbol","draw","context","size","s","sqrt","moveTo","lineTo","closePath","text","name","zoomBehavior","scaleExtent","translateExtent","zoomState","transform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { select, scaleLinear, scaleOrdinal, axisBottom, linkHorizontal, format, drag, zoom, min, max, symbol, symbols } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport generateLinks from \"./generateLinks\";\n\nfunction Graphic({data, setData, activeLayer, intervals, setIntervals, radius, info, setInfo, showLabel, toggle}) {\n\n  //all data is passed down from and synced to App.js\n  const activeData = activeLayer ? data.filter(d => d.layer === activeLayer) : data;\n\n  //is logical operators active?\n  const logic = isNaN(data[0].x); //Todo\n\n  //initialize reference object to pass to svg in React Dom\n  const svgRef = useRef();\n  //svg wrapped in div bc otherwise resize observer callback won't work\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState();\n\n  //initialize links between nodes\n  const links = generateLinks(activeData);\n\n  //initialize bottom axis label\n  const [axisLabel, setAxisLabel] = useState(\"Years (AD)\");\n\n  //all d3 shennanigans goes in this hook. called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current); //\"svg\" is the current version of svgRef data\n    //prevents crashing when useResizeObserver returns null before svg is rendered\n    if (!dimensions) return;\n\n    //---scales---//\n\n    //if time matches logical operator keyword, translate into index values, then map\n    const logicScale = scaleOrdinal([\"before\", \"now\", \"after\"], [-1, 0, 1]).unknown(0);\n\n    const breakpoint = 5;\n\n    //for multiple scales, generate a new xScale for each x/y min - x/y max\n\n    const xMin = min(data.map(({x}) => logic ? logicScale(x) : x));\n    const xMax = max(data.map(({x}) => logic ? logicScale(x) : x));\n    const yMin = min(data.map(({y}) => y));\n    const yMax = max(data.map(({y}) => y));\n    const rangeX = xMax-xMin; //0 is minX, 1 is maxX (reference findMinMax)\n    const rangeY = yMax-yMin;\n\n\n    //TODO: scaleTime()\n\n    //scales values to screen pixels\n    function generateScales() {\n\n      const x = scaleLinear()\n        .domain([xMin, xMax]) //scaleLinear takes domain (data values) & maps onto range (screen pixel values)\n        .range([0, dimensions.width])\n      const y = scaleLinear()\n        //if difference in y vaules greater than 5, resize to min and max\n        .domain((rangeY>breakpoint) ? [yMin, yMax] : [yMin-breakpoint, yMax+breakpoint])\n        .range([0, dimensions.height])\n      const xInverse = scaleLinear()\n        .domain([-dimensions.width, dimensions.width])\n        .range([-rangeX, rangeX]) //maxRangeX-minRangeX gives section of x values displayed onscreen\n      const yInverse = scaleLinear()\n        .domain([-dimensions.height, dimensions.height])\n        .range((rangeY>breakpoint) ? [-rangeY, rangeY] : [-breakpoint*5, breakpoint*5])\n\n\n      return {\n        x, y, xInverse, yInverse\n      };\n    }\n\n    const xScale = scaleLinear()\n      .domain([xMin, xMax]) //scaleLinear takes domain (data values) & maps onto range (screen pixel values)\n      .range([0, dimensions.width]);\n    const yScale = scaleLinear()\n      //if difference in y vaules greater than 5, resize to min and max\n      .domain((rangeY>breakpoint) ? [yMin, yMax] : [yMin-breakpoint, yMax+breakpoint])\n      .range([0, dimensions.height]);\n    //inverse scales for drag behavior\n    const xScaleInverse = scaleLinear()\n      .domain([-dimensions.width, dimensions.width])\n      .range([-rangeX, rangeX]); //maxRangeX-minRangeX gives section of x values displayed onscreen\n    const yScaleInverse = scaleLinear()\n      .domain([-dimensions.height, dimensions.height])\n      .range((rangeY>breakpoint) ? [-rangeY, rangeY] : [-breakpoint*5, breakpoint*5]);\n\n    if (currentZoomState) {\n      const newXScale = currentZoomState.rescaleX(xScale); //zoom state comes w methods for transformations\n      xScale.domain(newXScale.domain());\n      xScaleInverse.range([\n        -(newXScale.domain()[1]-newXScale.domain()[0]),\n        (newXScale.domain()[1]-newXScale.domain()[0])\n      ]);\n    };\n\n\n    //---draw intervals---//\n    if (intervals.length) {\n      svg\n      .selectAll(\".intervals\")\n      .data(intervals)\n      .join(\"rect\")\n      .attr(\"class\", \"intervals\")\n      .attr(\"x\", n => xScale(n.start))\n      // .attr(\"y\", n => n.yStart ? yScale(n.yStart) : yScale(minMax[2]))\n      .attr(\"y\", n => n.yStart ? yScale(n.yStart) : 0) //todo\n      .attr(\"width\", n => xScale(n.end)-xScale(n.start))\n      .attr(\"height\", n => {\n        if (n.yStart & n.yEnd) {\n          return (yScale(n.yEnd)-yScale(n.yStart))\n        } else if (n.yStart) {\n          return (yScale(yMax+10)-yScale(n.yStart))\n        } else {\n          return (yScale(yMax+10)) //todo\n          // return (yScale(minMax[3])-yScale(minMax[2]))\n        }})\n      .attr(\"opacity\", d => d.opacity ? d.opacity : 0.5)\n      .attr(\"fill\", d => d.color ? d.color : \"#999\")\n      .on(\"click\", (e, target) => {\n        //displays line properties when clicked\n        setInfo({position: [e.x, e.y], target: target, type: \"interval\"});  //todo: set info to null when clicking again\n        e.stopPropagation();\n      });\n    }\n\n    //---draw bottom axis---//\n    const xAxis = axisBottom(generateScales().x)\n      // .tickSize(-dimensions.height) //tick extends to entire height of svg\n      .tickValues(logic ? [-1, 0, 1] : null)\n      .tickFormat(logic ? x => scaleOrdinal([-1, 0, 1], [\"before\", \"now\", \"after\"])(x) : format('')); //gets rid of , for 1000s groupings\n\n    svg\n      .select(\".x-axis\") //selects and replaces .x-axis\n      .style(\"transform\", `translateY(${dimensions.height}px)`)\n      .call(xAxis)\n      .raise()\n      .call(g => g.select(\".domain\") //removes solid black axis bar\n        .remove())\n      .call(g => g.selectAll(\".tick line\") //styles individual ticks\n        .attr(\"stroke-opacity\", 0.5))\n        // .attr(\"stroke-dasharray\", \"2,2\"))\n      .call(g => g.selectAll(\".tick text\")\n        .attr(\"y\", 10) //todo?\n        .attr(\"opacity\", 0.5));\n        // .attr(\"font-size\", fontSize*.8)); //replace class \"x-axis\" w xAxis\n    //\n    // //TODO: enter & exit\n    // svg\n    //   // .selectAll(\".axislabel\")\n    //   // .data([1])\n    //   // .join(\"text\")\n    //   .enter().append(\"text\")\n    //   .text(axisLabel)\n    //   .attr(\"class\", \"axisLabel smallTxt\")\n    //   .attr(\"x\", dimensions.width/2)\n    //   .attr(\"y\", dimensions.height*1.08)\n    //   .attr(\"text-anchor\", \"middle\")\n    //   .attr(\"opacity\", 0.5)\n    //   .exit().remove();\n\n    //--drag behavior--//\n    const dragged = drag()\n      // .on(\"start\", e => {\n      //   select(this).attr(\"stroke\", \"black\");\n      // })\n      .on(\"drag\", e => {\n        //todo\n        const dx = Math.round(xScaleInverse(e.dx)*100)/100;\n        const dy = Math.round(yScaleInverse(e.dy)*100)/100;\n        const newNodes = [...data]; //always make a copy when updating array\n        //find array element in data with matching ID and set new x y coordinates\n        newNodes.find(n => n.id === e.subject.id).x += dx;\n        newNodes.find(n => n.id === e.subject.id).y += dy;\n        setData(newNodes);\n      });\n\n    //---draw links---//\n    const linker = linkHorizontal()\n      .source(link => link.source)\n      .target(link => link.target)\n      .x(node => xScale(logic ? logicScale(node.x) : node.x))\n      .y(node => yScale(node.y));\n\n    svg\n      .selectAll(\".link\")\n      .data(links)\n      .join(\"path\")\n      .raise()\n      .attr(\"class\", \"link pointer\")\n      .attr(\"d\", linker)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", n => n.color? n.color : \"black\")\n      .attr(\"stroke-width\", n => n.width ? n.width : radius/3)\n      .attr(\"stroke-opacity\", n => n.opacity ? n.opacity : 1)\n      .attr(\"stroke-dasharray\", n => n.dashed ? n.dashed : null)\n      .on(\"click\", (e, target) => {\n        setInfo({position: [e.x, e.y], target: target, type: \"link\"}); //displays line properties when clicked\n        e.stopPropagation();\n      });\n\n\n    //---draw points---//\n    svg\n      .selectAll(\".node\")\n      .data(activeData.filter(d => d.inflectionSemantic!==\"cancelled\"))\n      .join(\"circle\")\n      .raise()\n      .attr(\"class\", \"node pointer\")\n      .attr(\"r\", n => n.radius? n.radius : radius) //todo for accessibility\n      .attr(\"fill\", d => d.color ? d.color : \"black\") //if it has a color other than black, use that\n      .attr(\"opacity\", d => d.opacity ? d.opacity : 1)\n      .attr(\"cx\", d => xScale(logic ? logicScale(d.x) : d.x))\n      .attr(\"cy\", d => yScale(d.y))\n      .call(dragged)\n      .on(\"click\", (e, target) => {\n        if (toggle===\"cancelled\") {\n          const newNodes = [...data];\n          const node = newNodes.find(n => n.id === target.id);\n          node.inflectionSemantic = \"cancelled\";\n          setData(newNodes);\n        } else {\n          setInfo({position: [e.x, e.y], target: target}); //displays node properties when clicked\n        }\n        e.stopPropagation(); //stops deselect when bg is clicked\n      });\n\n    //---initialize custom symbols---//\n    const cancelledSymbol = {\n      draw: (context, size) => {\n        let s = Math.sqrt(size)/2;\n            context.moveTo(s,0);\n            context.lineTo(s*2,s);\n            context.lineTo(s,s*2);\n            context.lineTo(0,s);\n            context.lineTo(-s,s*2);\n            context.lineTo(-s*2,s);\n            context.lineTo(-s,0);\n            context.lineTo(-s*2,-s);\n            context.lineTo(-s,-s*2);\n            context.lineTo(0,-s);\n            context.lineTo(s,-s*2);\n            context.lineTo(s*2,-s);\n            context.closePath();\n      }\n    }\n\n    //---draw symbols---//\n    svg\n      .selectAll(\".cancelled\")\n      .data(activeData.filter(d => d.inflectionSemantic===\"cancelled\"))\n      .join(\"path\")\n      .raise()\n      .attr(\"class\", \"cancelled pointer\")\n      .attr(\"d\", symbol(cancelledSymbol, radius*radius*5))\n      .attr(\"transform\", n => `translate(${xScale(n.x)}, ${yScale(n.y)})`)\n      .on(\"click\", (e, target) => {\n        if (toggle===\"cancelled\") {\n          const newNodes = [...data];\n          const node = newNodes.find(n => n.id === target.id);\n          delete node.inflectionSemantic;\n          setData(newNodes);\n        } else {\n          setInfo({position: [e.x, e.y], target: target}); //displays node properties when clicked\n        }\n        e.stopPropagation();\n      });\n      // .attr(\"transform\", \"rotate(90)\");\n\n\n    //---draw labels---//\n    svg\n      .selectAll(\".label\")\n      .data(activeData)\n      .join(\"text\")\n      .raise()\n      .attr(\"class\", \"label\")\n      .text(node => showLabel ? node.name : node.id)\n      .attr(\"x\", node => xScale(logic ? logicScale(node.x) : node.x))\n      .attr(\"y\", node => yScale(node.y + (rangeY>breakpoint ? rangeY*.06 : breakpoint/5))) //vertical offset. see scales\n      .attr(\"text-anchor\", \"middle\");\n      // .attr(\"font-size\", fontSize);\n\n\n    //---zoom---//\n    const zoomBehavior = zoom()\n      .scaleExtent([0.25, 5]) //can zoom 2x smaller and 5x bigger\n      .translateExtent([[-100, 0], [dimensions.width+100, dimensions.height]]) //limits how far graph can pan\n      .on(\"zoom\", e => {\n        const zoomState = e.transform; //returns zoom transformations as an object\n        setCurrentZoomState(zoomState);\n      });\n\n    svg.on(\"click\", () => setInfo(null));\n    svg.call(zoomBehavior);\n\n  }, [data, setData, intervals, activeLayer, activeData, dimensions, links, logic, currentZoomState, setInfo, radius, showLabel]);\n\n  return (\n    <div ref={wrapperRef} className=\"svgWrapper\">\n      <svg id=\"graphic\" ref={svgRef}>\n        <g className=\"cancelled\" />\n        <g className=\"x-axis\" />\n      </svg>\n    </div>\n  );\n};\n\n\nexport default Graphic;\n"]},"metadata":{},"sourceType":"module"}