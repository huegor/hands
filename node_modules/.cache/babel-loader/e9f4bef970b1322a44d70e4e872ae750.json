{"ast":null,"code":"/*\n  iterates thru xy values in json data to find min and max values\n*/\nfunction findMinMax(data) {\n  var [minX, minY] = [Infinity, Infinity]; //assign values for multiple vars\n\n  var [maxX, maxY] = [-Infinity, -Infinity];\n  var tmpX, tmpY;\n  data.forEach((item, i) => {\n    if (item.length) {\n      item.forEach(src => {\n        tmpX = data[i].x;\n        tmpY = data[i].y;\n        if (tmpX < minX) minX = tmpX;\n        if (tmpX > maxX) maxX = tmpX;\n        if (tmpY < minY) minY = tmpY;\n        if (tmpY > maxY) maxY = tmpY;\n      });\n    }\n  });\n  return [minX, maxX, minY, maxY];\n}\n\nexport default findMinMax;","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/findMinMax.js"],"names":["findMinMax","data","minX","minY","Infinity","maxX","maxY","tmpX","tmpY","forEach","item","i","length","src","x","y"],"mappings":"AAAA;AACA;AACA;AAEA,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AACxB,MAAI,CAACC,IAAD,EAAOC,IAAP,IAAe,CAACC,QAAD,EAAWA,QAAX,CAAnB,CADwB,CACiB;;AACzC,MAAI,CAACC,IAAD,EAAOC,IAAP,IAAe,CAAC,CAACF,QAAF,EAAY,CAACA,QAAb,CAAnB;AACA,MAAIG,IAAJ,EAAUC,IAAV;AAEAP,EAAAA,IAAI,CAACQ,OAAL,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AACxB,QAAID,IAAI,CAACE,MAAT,EAAiB;AACfF,MAAAA,IAAI,CAACD,OAAL,CAAcI,GAAD,IACX;AACCN,QAAAA,IAAI,GAAGN,IAAI,CAACU,CAAD,CAAJ,CAAQG,CAAf;AACAN,QAAAA,IAAI,GAAGP,IAAI,CAACU,CAAD,CAAJ,CAAQI,CAAf;AACA,YAAIR,IAAI,GAAGL,IAAX,EAAiBA,IAAI,GAAGK,IAAP;AACjB,YAAIA,IAAI,GAAGF,IAAX,EAAiBA,IAAI,GAAGE,IAAP;AACjB,YAAIC,IAAI,GAAGL,IAAX,EAAiBA,IAAI,GAAGK,IAAP;AACjB,YAAIA,IAAI,GAAGF,IAAX,EAAiBA,IAAI,GAAGE,IAAP;AAClB,OARF;AAUD;AACF,GAbD;AAeA,SACE,CAACN,IAAD,EAAOG,IAAP,EAAaF,IAAb,EAAmBG,IAAnB,CADF;AAGD;;AAED,eAAeN,UAAf","sourcesContent":["/*\n  iterates thru xy values in json data to find min and max values\n*/\n\nfunction findMinMax(data) {\n  var [minX, minY] = [Infinity, Infinity]; //assign values for multiple vars\n  var [maxX, maxY] = [-Infinity, -Infinity];\n  var tmpX, tmpY;\n\n  data.forEach((item, i) => {\n    if (item.length) {\n      item.forEach((src) =>\n        {\n         tmpX = data[i].x;\n         tmpY = data[i].y;\n         if (tmpX < minX) minX = tmpX;\n         if (tmpX > maxX) maxX = tmpX;\n         if (tmpY < minY) minY = tmpY;\n         if (tmpY > maxY) maxY = tmpY;\n       }\n      )\n    }\n  });\n\n  return(\n    [minX, maxX, minY, maxY]\n  );\n}\n\nexport default findMinMax;\n"]},"metadata":{},"sourceType":"module"}