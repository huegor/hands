{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewIntervalForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewIntervalForm({\n  data,\n  setData,\n  setToggle,\n  scales,\n  activeScale,\n  history,\n  setHistory\n}) {\n  _s();\n\n  const [xValue1, setXValue1] = useState();\n  const [yValue1, setYValue1] = useState();\n  const [xValue2, setXValue2] = useState();\n  const [yValue2, setYValue2] = useState();\n  const [select, setSelect] = useState(activeScale);\n  const scalesList = Object.keys(scales).map((key, i) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: key,\n      children: key\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }); //optional parameters\n\n  const [color, setColor] = useState(\"\");\n  const [opacity, setOpacity] = useState(\"\");\n  const [width, setWidth] = useState(\"\");\n  const [dashed, setDashed] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newData = { ...data\n    };\n    const lastKey = Object.keys(newData).pop() ? parseInt(Object.keys(newData).pop()) : -1;\n    const lastInstant = newData[lastKey]; //last instant of data\n\n    const tempX1 = parseFloat(xValue1);\n    const tempY1 = yValue1 ? parseFloat(yValue1) : null; //if y pos specified, convert to float. otherwise, return null\n\n    const tempX2 = parseFloat(xValue2);\n    const tempY2 = yValue2 ? parseFloat(yValue2) : null; //error handling. btw, isNan(null) === false\n\n    if (isNaN(tempX1) || isNaN(tempY1) || isNaN(tempX2) || isNaN(tempY2)) {\n      alert(\"Make sure all Times and y Positions are numbers!\");\n    } else {\n      //generate first instant\n      newData[`${lastKey + 1}`] = {\n        \"name\": \"\",\n        \"x\": tempX1,\n        \"y\": yValue1 ? tempY1 : lastInstant ? lastInstant.y : 0,\n        // if y not specified, take value of last instant\n        \"scale\": select,\n        \"target\": [`${lastKey + 2}`],\n        \"radius\": 0,\n        ...(color && {\n          \"lineColor\": color\n        }),\n        ...(width && {\n          \"lineWidth\": width\n        }),\n        ...(opacity && {\n          \"lineOpacity\": opacity\n        }),\n        ...(dashed && {\n          \"lineDashed\": dashed\n        })\n      }; //generate second instant\n\n      newData[`${lastKey + 2}`] = {\n        \"name\": \"\",\n        \"x\": tempX2,\n        \"y\": yValue2 ? tempY2 : lastInstant ? lastInstant.y : 0,\n        // if y not specified, take value of last instant\n        \"scale\": select,\n        \"target\": null\n      };\n    }\n\n    ;\n    setHistory([...history, data]);\n    setData(newData);\n    setToggle(null);\n  };\n\n  const handleClose = e => {\n    setToggle(null);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"right\",\n      onClick: handleClose,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Start:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Time\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"numbers only\",\n        value: xValue1,\n        onChange: e => setXValue1(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"y Position\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"#s only (default 0)\",\n        value: yValue1,\n        onChange: e => setYValue1(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"End:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Time\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"numbers only\",\n        value: xValue2,\n        onChange: e => setXValue2(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"y Position\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"#s only (default 0)\",\n        value: yValue2,\n        onChange: e => setYValue2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Properties:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Scale\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"scales\",\n        value: select,\n        onChange: e => setSelect(e.target.value),\n        children: scalesList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Color\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"blue, #4DA6FF, etc.\",\n        value: color,\n        onChange: e => setColor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Width\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"1.67\",\n        value: width,\n        onChange: e => setWidth(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Certainty\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"0-1\",\n        value: opacity,\n        onChange: e => setOpacity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Dashed\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"i.e: 5\",\n        value: dashed,\n        onChange: e => setDashed(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewIntervalForm, \"H6nSbMH7Bx5AtTV++P6KVo/f0SQ=\");\n\n_c = NewIntervalForm;\nexport default NewIntervalForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewIntervalForm\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewIntervalForm.js"],"names":["React","useState","NewIntervalForm","data","setData","setToggle","scales","activeScale","history","setHistory","xValue1","setXValue1","yValue1","setYValue1","xValue2","setXValue2","yValue2","setYValue2","select","setSelect","scalesList","Object","keys","map","key","i","color","setColor","opacity","setOpacity","width","setWidth","dashed","setDashed","handleSubmit","e","preventDefault","newData","lastKey","pop","parseInt","lastInstant","tempX1","parseFloat","tempY1","tempX2","tempY2","isNaN","alert","y","handleClose","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,eAAT,CAAyB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA,SAAhB;AAA2BC,EAAAA,MAA3B;AAAmCC,EAAAA,WAAnC;AAAgDC,EAAAA,OAAhD;AAAyDC,EAAAA;AAAzD,CAAzB,EAA+F;AAAA;;AAE7F,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,EAAtC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,EAAtC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,EAAtC;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAACM,WAAD,CAApC;AACA,QAAMa,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYhB,MAAZ,EAAoBiB,GAApB,CAAwB,CAACC,GAAD,EAAMC,CAAN,KAAY;AACrD,wBAAO;AAAQ,MAAA,KAAK,EAAED,GAAf;AAAA,gBAA6BA;AAA7B,OAAyBC,CAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFkB,CAAnB,CAP6F,CAU7F;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC2B,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC6B,KAAD,EAAQC,QAAR,IAAoB9B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC+B,MAAD,EAASC,SAAT,IAAsBhC,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMiC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,OAAO,GAAG,EAAC,GAAGlC;AAAJ,KAAhB;AACA,UAAMmC,OAAO,GAAGjB,MAAM,CAACC,IAAP,CAAYe,OAAZ,EAAqBE,GAArB,KAA6BC,QAAQ,CAACnB,MAAM,CAACC,IAAP,CAAYe,OAAZ,EAAqBE,GAArB,EAAD,CAArC,GAAoE,CAAC,CAArF;AACA,UAAME,WAAW,GAAGJ,OAAO,CAACC,OAAD,CAA3B,CAL0B,CAKY;;AAEtC,UAAMI,MAAM,GAAGC,UAAU,CAACjC,OAAD,CAAzB;AACA,UAAMkC,MAAM,GAAGhC,OAAO,GAAG+B,UAAU,CAAC/B,OAAD,CAAb,GAAyB,IAA/C,CAR0B,CAQ2B;;AACrD,UAAMiC,MAAM,GAAGF,UAAU,CAAC7B,OAAD,CAAzB;AACA,UAAMgC,MAAM,GAAG9B,OAAO,GAAG2B,UAAU,CAAC3B,OAAD,CAAb,GAAyB,IAA/C,CAV0B,CAY1B;;AACA,QAAI+B,KAAK,CAACL,MAAD,CAAL,IAAiBK,KAAK,CAACH,MAAD,CAAtB,IAAkCG,KAAK,CAACF,MAAD,CAAvC,IAAmDE,KAAK,CAACD,MAAD,CAA5D,EAAsE;AACpEE,MAAAA,KAAK,CAAC,kDAAD,CAAL;AACD,KAFD,MAEO;AACL;AACAX,MAAAA,OAAO,CAAE,GAAEC,OAAO,GAAC,CAAE,EAAd,CAAP,GAA0B;AACxB,gBAAQ,EADgB;AAExB,aAAII,MAFoB;AAGxB,aAAK9B,OAAO,GAAGgC,MAAH,GAAcH,WAAW,GAAGA,WAAW,CAACQ,CAAf,GAAmB,CAHhC;AAGqC;AAC7D,iBAAS/B,MAJe;AAKxB,kBAAU,CAAE,GAAEoB,OAAO,GAAC,CAAE,EAAd,CALc;AAMxB,kBAAU,CANc;AAOxB,YAAIZ,KAAK,IAAI;AAAC,uBAAaA;AAAd,SAAb,CAPwB;AAQxB,YAAII,KAAK,IAAI;AAAC,uBAAaA;AAAd,SAAb,CARwB;AASxB,YAAIF,OAAO,IAAI;AAAC,yBAAeA;AAAhB,SAAf,CATwB;AAUxB,YAAII,MAAM,IAAI;AAAC,wBAAcA;AAAf,SAAd;AAVwB,OAA1B,CAFK,CAcL;;AACAK,MAAAA,OAAO,CAAE,GAAEC,OAAO,GAAC,CAAE,EAAd,CAAP,GAA0B;AACxB,gBAAQ,EADgB;AAExB,aAAIO,MAFoB;AAGxB,aAAK7B,OAAO,GAAG8B,MAAH,GAAcL,WAAW,GAAGA,WAAW,CAACQ,CAAf,GAAmB,CAHhC;AAGqC;AAC7D,iBAAS/B,MAJe;AAKxB,kBAAU;AALc,OAA1B;AAOD;;AAAA;AAEDT,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaL,IAAb,CAAD,CAAV;AACAC,IAAAA,OAAO,CAACiC,OAAD,CAAP;AACAhC,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GA1CD;;AA4CA,QAAM6C,WAAW,GAAIf,CAAD,IAAO;AACzB9B,IAAAA,SAAS,CAAC,IAAD,CAAT;AACA8B,IAAAA,CAAC,CAACC,cAAF;AACD,GAHD;;AAKA,sBACE;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAqC,IAAA,QAAQ,EAAEF,YAA/C;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,OAAlB;AAA0B,MAAA,OAAO,EAAEgB,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAC4D;AAAA;AAAA;AAAA;AAAA,YAD5D,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAEe;AAAA;AAAA;AAAA;AAAA,YAFf,eAGE;AAAA,sCACM;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADN,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,cAFd;AAGE,QAAA,KAAK,EAAExC,OAHT;AAIE,QAAA,QAAQ,EAAGyB,CAAD,IAAOxB,UAAU,CAACwB,CAAC,CAACgB,MAAF,CAASC,KAAV,CAJ7B;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAYU;AAAA;AAAA;AAAA;AAAA,YAZV,eAaE;AAAA,4CAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,qBAFd;AAGE,QAAA,KAAK,EAAExC,OAHT;AAIE,QAAA,QAAQ,EAAGuB,CAAD,IAAOtB,UAAU,CAACsB,CAAC,CAACgB,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAqBU;AAAA;AAAA;AAAA;AAAA,YArBV,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF,eAsBa;AAAA;AAAA;AAAA;AAAA,YAtBb,eAuBE;AAAA,sCACM;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADN,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,cAFd;AAGE,QAAA,KAAK,EAAEtC,OAHT;AAIE,QAAA,QAAQ,EAAGqB,CAAD,IAAOpB,UAAU,CAACoB,CAAC,CAACgB,MAAF,CAASC,KAAV,CAJ7B;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF,eAgCU;AAAA;AAAA;AAAA;AAAA,YAhCV,eAiCE;AAAA,4CAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,qBAFd;AAGE,QAAA,KAAK,EAAEpC,OAHT;AAIE,QAAA,QAAQ,EAAGmB,CAAD,IAAOlB,UAAU,CAACkB,CAAC,CAACgB,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCF,eAyCU;AAAA;AAAA;AAAA;AAAA,YAzCV,eA0CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1CF,eA0CoB;AAAA;AAAA;AAAA;AAAA,YA1CpB,eA2CE;AAAA,uCACO;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADP,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAElC,MAA7B;AAAqC,QAAA,QAAQ,EAAGiB,CAAD,IAAOhB,SAAS,CAACgB,CAAC,CAACgB,MAAF,CAASC,KAAV,CAA/D;AAAA,kBACGhC;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA3CF,eAgDU;AAAA;AAAA;AAAA;AAAA,YAhDV,eAiDE;AAAA,uCAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,qBAFd;AAGE,QAAA,KAAK,EAAEM,KAHT;AAIE,QAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACgB,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjDF,eAyDU;AAAA;AAAA;AAAA;AAAA,YAzDV,eA0DE;AAAA,uCAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,MAFd;AAGE,QAAA,KAAK,EAAEtB,KAHT;AAIE,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACgB,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA1DF,eAkEU;AAAA;AAAA;AAAA;AAAA,YAlEV,eAmEE;AAAA,2CAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,KAFd;AAGE,QAAA,KAAK,EAAExB,OAHT;AAIE,QAAA,QAAQ,EAAGO,CAAD,IAAON,UAAU,CAACM,CAAC,CAACgB,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnEF,eA2EU;AAAA;AAAA;AAAA;AAAA,YA3EV,eA4EE;AAAA,wCAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,QAFd;AAGE,QAAA,KAAK,EAAEpB,MAHT;AAIE,QAAA,QAAQ,EAAGG,CAAD,IAAOF,SAAS,CAACE,CAAC,CAACgB,MAAF,CAASC,KAAV;AAJ5B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA5EF,eAoFU;AAAA;AAAA;AAAA;AAAA,YApFV,eAoFe;AAAA;AAAA;AAAA;AAAA,YApFf,eAqFE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YArFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyFD;;GA1JQlD,e;;KAAAA,e;AA4JT,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction NewIntervalForm({data, setData, setToggle, scales, activeScale, history, setHistory}) {\n\n  const [xValue1, setXValue1] = useState();\n  const [yValue1, setYValue1] = useState();\n  const [xValue2, setXValue2] = useState();\n  const [yValue2, setYValue2] = useState();\n  const [select, setSelect] = useState(activeScale);\n  const scalesList = Object.keys(scales).map((key, i) => {\n    return <option value={key} key={i}>{key}</option>\n  });\n  //optional parameters\n  const [color, setColor] = useState(\"\");\n  const [opacity, setOpacity] = useState(\"\");\n  const [width, setWidth] = useState(\"\");\n  const [dashed, setDashed] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newData = {...data};\n    const lastKey = Object.keys(newData).pop() ? parseInt(Object.keys(newData).pop()) : -1;\n    const lastInstant = newData[lastKey]; //last instant of data\n\n    const tempX1 = parseFloat(xValue1);\n    const tempY1 = yValue1 ? parseFloat(yValue1) : null; //if y pos specified, convert to float. otherwise, return null\n    const tempX2 = parseFloat(xValue2);\n    const tempY2 = yValue2 ? parseFloat(yValue2) : null;\n\n    //error handling. btw, isNan(null) === false\n    if (isNaN(tempX1) || isNaN(tempY1) || isNaN(tempX2) || isNaN(tempY2)) {\n      alert(\"Make sure all Times and y Positions are numbers!\");\n    } else {\n      //generate first instant\n      newData[`${lastKey+1}`] = {\n        \"name\": \"\",\n        \"x\":tempX1,\n        \"y\": yValue1 ? tempY1 : ( lastInstant ? lastInstant.y : 0 ), // if y not specified, take value of last instant\n        \"scale\": select,\n        \"target\": [`${lastKey+2}`],\n        \"radius\": 0,\n        ...(color && {\"lineColor\": color}),\n        ...(width && {\"lineWidth\": width}),\n        ...(opacity && {\"lineOpacity\": opacity}),\n        ...(dashed && {\"lineDashed\": dashed})\n      };\n      //generate second instant\n      newData[`${lastKey+2}`] = {\n        \"name\": \"\",\n        \"x\":tempX2,\n        \"y\": yValue2 ? tempY2 : ( lastInstant ? lastInstant.y : 0 ), // if y not specified, take value of last instant\n        \"scale\": select,\n        \"target\": null\n      };\n    };\n\n    setHistory([...history, data]);\n    setData(newData);\n    setToggle(null);\n  };\n\n  const handleClose = (e) => {\n    setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"ui absolute center\" onSubmit={handleSubmit}>\n      <button className=\"right\" onClick={handleClose}>x</button><br/>\n      <b>Start:</b><br/>\n      <label>\n        Time<span className=\"redText\">* </span>\n        <input\n          type=\"number\"\n          placeholder=\"numbers only\"\n          value={xValue1}\n          onChange={(e) => setXValue1(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        y Position\n        <input\n          type=\"number\"\n          placeholder=\"#s only (default 0)\"\n          value={yValue1}\n          onChange={(e) => setYValue1(e.target.value)}\n        />\n      </label><br/>\n      <b>End:</b><br/>\n      <label>\n        Time<span className=\"redText\">* </span>\n        <input\n          type=\"number\"\n          placeholder=\"numbers only\"\n          value={xValue2}\n          onChange={(e) => setXValue2(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        y Position\n        <input\n          type=\"number\"\n          placeholder=\"#s only (default 0)\"\n          value={yValue2}\n          onChange={(e) => setYValue2(e.target.value)}\n        />\n      </label><br/>\n      <b>Properties:</b><br/>\n      <label>\n        Scale<span className=\"redText\">* </span>\n        <select name=\"scales\" value={select} onChange={(e) => setSelect(e.target.value)}>\n          {scalesList}\n        </select>\n      </label><br/>\n      <label>\n        Color\n        <input\n          type=\"text\"\n          placeholder=\"blue, #4DA6FF, etc.\"\n          value={color}\n          onChange={(e) => setColor(e.target.value)}\n        />\n      </label><br/>\n      <label>\n        Width\n        <input\n          type=\"number\"\n          placeholder=\"1.67\"\n          value={width}\n          onChange={(e) => setWidth(e.target.value)}\n        />\n      </label><br/>\n      <label>\n        Certainty\n        <input\n          type=\"number\"\n          placeholder=\"0-1\"\n          value={opacity}\n          onChange={(e) => setOpacity(e.target.value)}\n        />\n      </label><br/>\n      <label>\n        Dashed\n        <input\n          type=\"text\"\n          placeholder=\"i.e: 5\"\n          value={dashed}\n          onChange={(e) => setDashed(e.target.value)}\n        />\n      </label><br/><br/>\n      <input type=\"submit\" value=\"Submit\"/>\n    </form>\n  )\n}\n\nexport default NewIntervalForm;\n"]},"metadata":{},"sourceType":"module"}