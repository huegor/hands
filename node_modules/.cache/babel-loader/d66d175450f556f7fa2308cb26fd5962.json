{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/EditScaleForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n/*\n   UI and function for adding new zones.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditScaleForm({\n  scales,\n  setScales,\n  setToggle,\n  activeScale,\n  setActiveScale\n}) {\n  _s();\n\n  const [select, setSelect] = useState(activeScale); //go thru list of scales in ChronoJSON and create a selection entry for each\n\n  const scalesList = Object.keys(scales).map((key, i) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: key,\n      children: key\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  });\n  const [min, setMin] = useState();\n  const [max, setMax] = useState();\n  const [units, setUnits] = useState();\n  const [yPos, setYPos] = useState(); //optional parameters\n\n  const [segmentsNum, setSegmentNum] = useState([]);\n  console.log(scales[select]);\n\n  const handleSubmit = e => {\n    //setHistory\n    const newScales = { ...scales\n    }; //update existing scale\n\n    newScales[select] = {\n      \"min\": parseFloat(min),\n      \"max\": parseFloat(max),\n      \"units\": units,\n      \"yPos\": parseFloat(yPos),\n      \"segments\": [] //todo\n\n    };\n    setScales(newScales);\n    setActiveScale(select);\n    setToggle(null);\n    e.preventDefault();\n  };\n\n  const handleClose = e => {\n    setToggle(null);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"right uiButton closeButton\",\n      onClick: handleClose,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 86\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Scale\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"scales\",\n        value: select,\n        onChange: e => setSelect(e.target.value),\n        children: scalesList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Minimum Value\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"#s for now\",\n        value: min,\n        onChange: e => setMin(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Maximum Value\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"#s for now\",\n        value: max,\n        onChange: e => setMax(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Units Label\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"ie: Years\",\n        value: units,\n        onChange: e => setUnits(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Vertical Position\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"0 (top) - 1 (bottom)\",\n        value: yPos,\n        onChange: e => setYPos(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Segments\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"granularities within scale\",\n        value: segmentsNum,\n        onChange: e => setSegmentNum(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"uiButton\",\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditScaleForm, \"uHKbjhhiJ7SrDvP0jXQAMETYSE8=\");\n\n_c = EditScaleForm;\n;\nexport default EditScaleForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditScaleForm\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/EditScaleForm.js"],"names":["React","useState","EditScaleForm","scales","setScales","setToggle","activeScale","setActiveScale","select","setSelect","scalesList","Object","keys","map","key","i","min","setMin","max","setMax","units","setUnits","yPos","setYPos","segmentsNum","setSegmentNum","console","log","handleSubmit","e","newScales","parseFloat","preventDefault","handleClose","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n/*\n   UI and function for adding new zones.\n*/\n\nfunction EditScaleForm({scales, setScales, setToggle, activeScale, setActiveScale}) {\n  const [select, setSelect] = useState(activeScale);\n  //go thru list of scales in ChronoJSON and create a selection entry for each\n  const scalesList = Object.keys(scales).map((key, i) => {\n    return <option value={key} key={i}>{key}</option>\n  });\n  const [min, setMin] = useState();\n  const [max, setMax] = useState();\n  const [units, setUnits] = useState();\n  const [yPos, setYPos] = useState();\n  //optional parameters\n  const [segmentsNum, setSegmentNum] = useState([]);\n\n  console.log(scales[select]);\n\n  const handleSubmit = (e) => {\n    //setHistory\n    const newScales = {...scales};\n    //update existing scale\n    newScales[select] = {\n      \"min\": parseFloat(min),\n      \"max\": parseFloat(max),\n      \"units\": units,\n      \"yPos\": parseFloat(yPos),\n      \"segments\": [] //todo\n    }\n    setScales(newScales);\n    setActiveScale(select);\n    setToggle(null);\n    e.preventDefault();\n  };\n\n  const handleClose = (e) => {\n    setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"ui absolute center\" onSubmit={handleSubmit}>\n      <button className=\"right uiButton closeButton\" onClick={handleClose}>x</button><br/>\n      <label>\n        Scale<span className=\"redText\">* </span>\n        <select name=\"scales\" value={select} onChange={(e) => setSelect(e.target.value)}>\n          {scalesList}\n        </select>\n      </label><br/>\n      <label>\n        Minimum Value<span className=\"redText\">* </span>\n        <input type=\"text\"\n          placeholder=\"#s for now\"\n          value={min}\n          onChange={(e) => setMin(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        Maximum Value<span className=\"redText\">* </span>\n        <input type=\"text\"\n          placeholder=\"#s for now\"\n          value={max}\n          onChange={(e) => setMax(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        Units Label<span className=\"redText\">* </span>\n        <input type=\"text\"\n          placeholder=\"ie: Years\"\n          value={units}\n          onChange={(e) => setUnits(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        Vertical Position<span className=\"redText\">* </span>\n        <input\n          type=\"text\"\n          placeholder=\"0 (top) - 1 (bottom)\"\n          value={yPos}\n          onChange={(e) => setYPos(e.target.value)}\n          required\n        />\n      </label><br/>\n      <label>\n        Segments\n        <input\n          type=\"number\"\n          placeholder=\"granularities within scale\"\n          value={segmentsNum}\n          onChange={(e) => setSegmentNum(e.target.value)}\n        />\n      </label><br/>\n      <input className=\"uiButton\" type=\"submit\" value=\"Submit\"/>\n    </form>\n  )\n};\n\nexport default EditScaleForm;\n"]},"metadata":{},"sourceType":"module"}